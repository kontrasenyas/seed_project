{"version":3,"sources":["common/forms/editors/Summernote.js","common/index.js","common/forms/editors/MarkdownEditor.js","common/forms/editors/AttachSummernote.js","common/forms/editors/DetachSummernote.js","views/forms/components/BootstrapEditors.js"],"names":["Summernote","$","this","refs","editor","summernote","height","props","_this$props","children","Object","C_Users_jalcantara_Documents_Brookstone_Test_2_Src_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","assign","ref","React","Component","_layout__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_navigation__WEBPACK_IMPORTED_MODULE_1__","_utils__WEBPACK_IMPORTED_MODULE_2__","_widgets__WEBPACK_IMPORTED_MODULE_3__","MarkdownEditor","markdown","react_default","defaultValue","value","className","AttachSummernote","onClick","_this","target","focus","objectWithoutProperties","DetachSummernote","BootstrapEditors","id","common","items","icon","colorbutton","editbutton","togglebutton","fullscreenbutton","sortable","color","MarkdownEditor_MarkdownEditor","type","defaultChecked","name","AttachSummernote_AttachSummernote","DetachSummernote_DetachSummernote","href"],"mappings":"0MAIqBA,sMAEjBC,IAAEC,KAAKC,KAAKC,QAAQC,WAAW,CAC7BC,OAAQJ,KAAKK,MAAMD,QAAU,qDAK/BL,IAAEC,KAAKC,KAAKC,QAAQC,WAAW,4CAGxB,IAAAG,EACwBN,KAAKK,MAA5BE,EADDD,EACCC,SAAaF,EADdG,OAAAC,EAAA,EAAAD,CAAAF,EAAA,cAEP,OACEI,EAAAC,EAAAC,cAAA,MAAAJ,OAAAK,OAAA,GAASR,EAAT,CAAgBS,IAAI,WACjBP,UAf+BQ,IAAMC,8CCJ9C,IAAAC,EAAAC,EAAA,IAAAA,EAAAC,EAAAC,EAAA,sBAAAH,EAAA,QAAAI,EAAAH,EAAA,GAAAA,EAAAC,EAAAC,EAAA,sBAAAC,EAAA,QAAAC,EAAAJ,EAAA,IAAAA,EAAAC,EAAAC,EAAA,sBAAAE,EAAA,QAAAC,EAAAL,EAAA,KAAAA,EAAAC,EAAAC,EAAA,sBAAAG,EAAA,IAAAL,EAAAC,EAAAC,EAAA,sBAAAG,EAAA,6HCOqBC,2NAEjBzB,IAAEC,KAAKC,KAAKC,QAAQuB,4CAIpB,OACEC,EAAAf,EAAAC,cAAA,YACEE,IAAI,SACJa,aAAc3B,KAAKK,MAAMuB,MACzBC,UAAW7B,KAAKK,MAAMwB,mBAVcd,IAAMC,6BCH7Bc,qNACnBC,QAAU,WACRhC,IAAEiC,EAAK3B,MAAM4B,QAAQ9B,WAAW,CAC9B+B,OAAO,2FAKTnC,IAAEC,KAAKK,MAAM4B,QAAQ9B,WAAW,4CAGzB,IAAAG,EACsBN,KAAKK,MAA5BE,EADCD,EACDC,SAAaF,EADZG,OAAA2B,EAAA,EAAA3B,CAAAF,EAAA,cAEP,OACEoB,EAAAf,EAAAC,cAAA,SAAAJ,OAAAK,OAAA,CAAQkB,QAAS/B,KAAK+B,SAAa1B,GAChCE,UAfqCQ,IAAMC,YCD/BoB,6MACnBL,QAAU,WACRhC,IAAEiC,EAAK3B,MAAM4B,QAAQ9B,WAAW,oFAGzB,IAAAG,EACsBN,KAAKK,MAA5BE,EADCD,EACDC,SAAaF,EADZG,OAAA2B,EAAA,EAAA3B,CAAAF,EAAA,cAEP,OACEoB,EAAAf,EAAAC,cAAA,SAAAJ,OAAAK,OAAA,GAAYR,EAAZ,CAAmB0B,QAAS/B,KAAK+B,UAC9BxB,UATqCQ,IAAMC,iDCWpD,IAcqBqB,mLAEjB,OACEX,EAAAf,EAAAC,cAAA,OAAK0B,GAAG,WACNZ,EAAAf,EAAAC,cAAA,OAAKiB,UAAU,OACbH,EAAAf,EAAAC,cAAC2B,EAAA,EAAD,CACEC,MAAO,CAAC,QAAS,qBACjBC,KAAK,8BACLZ,UAAU,yCAEZH,EAAAf,EAAAC,cAAC2B,EAAA,EAAD,OAGFb,EAAAf,EAAAC,cAAC2B,EAAA,EAAD,KACEb,EAAAf,EAAAC,cAAA,OAAKiB,UAAU,OAEbH,EAAAf,EAAAC,cAAA,WAASiB,UAAU,gCAEjBH,EAAAf,EAAAC,cAAC2B,EAAA,EAAD,CACED,GAAG,WACHI,aAAa,EACbC,YAAY,EACZC,cAAc,EACdC,kBAAkB,EAClBC,UAAU,EACVC,MAAM,UAENrB,EAAAf,EAAAC,cAAA,cACEc,EAAAf,EAAAC,cAAA,QAAMiB,UAAU,eACdH,EAAAf,EAAAC,cAAA,KAAGiB,UAAU,kBAGfH,EAAAf,EAAAC,cAAA,uBAIFc,EAAAf,EAAAC,cAAA,WAEEc,EAAAf,EAAAC,cAAA,OAAKiB,UAAU,0BACbH,EAAAf,EAAAC,cAACoC,EAAD,CACEpB,MAtDV,gTAuDUC,UAAU,gBACVzB,OAAQ,SAUhBsB,EAAAf,EAAAC,cAAC2B,EAAA,EAAD,CACED,GAAG,WACHT,UAAU,OACVa,aAAa,EACbC,YAAY,EACZC,cAAc,EACdC,kBAAkB,EAClBC,UAAU,GAEVpB,EAAAf,EAAAC,cAAA,cACEc,EAAAf,EAAAC,cAAA,QAAMiB,UAAU,eACdH,EAAAf,EAAAC,cAAA,KAAGiB,UAAU,kBAGfH,EAAAf,EAAAC,cAAA,2BAIFc,EAAAf,EAAAC,cAAA,WAEEc,EAAAf,EAAAC,cAAA,OAAKiB,UAAU,eACbH,EAAAf,EAAAC,cAAA,0BAEAc,EAAAf,EAAAC,cAAA,SAAOiB,UAAU,sCACfH,EAAAf,EAAAC,cAAA,aACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,yBACAc,EAAAf,EAAAC,cAAA,2BAGJc,EAAAf,EAAAC,cAAA,aACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,6BAEFc,EAAAf,EAAAC,cAAA,8CAEFc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,8BAEFc,EAAAf,EAAAC,cAAA,+CAEFc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,8BAEFc,EAAAf,EAAAC,cAAA,+CAEFc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,0BAEFc,EAAAf,EAAAC,cAAA,8FAKFc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,6BAEFc,EAAAf,EAAAC,cAAA,qCAEFc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,0BACac,EAAAf,EAAAC,cAAA,oBADb,cAIFc,EAAAf,EAAAC,cAAA,qCAEFc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,6BACgBc,EAAAf,EAAAC,cAAA,oBADhB,YAIFc,EAAAf,EAAAC,cAAA,+IAMFc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,+BAEFc,EAAAf,EAAAC,cAAA,yEAKFc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,4BACec,EAAAf,EAAAC,cAAA,iBADf,WACmCc,EAAAf,EAAAC,cAAA,iBADnC,UAIFc,EAAAf,EAAAC,cAAA,2DAEEc,EAAAf,EAAAC,cAAA,qBAFF,OAEwBc,EAAAf,EAAAC,cAAA,mBAFxB,MAKFc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,gCACmBc,EAAAf,EAAAC,cAAA,oBADnB,cAIFc,EAAAf,EAAAC,cAAA,8FAKFc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,6BAEFc,EAAAf,EAAAC,cAAA,yHAMFc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,0BACac,EAAAf,EAAAC,cAAA,iBADb,WACiCc,EAAAf,EAAAC,cAAA,iBADjC,UAIFc,EAAAf,EAAAC,cAAA,2DAEEc,EAAAf,EAAAC,cAAA,qBAFF,OAEwBc,EAAAf,EAAAC,cAAA,mBAFxB,WAGEc,EAAAf,EAAAC,cAAA,mBAHF,qBAMFc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,6BACgBc,EAAAf,EAAAC,cAAA,oBADhB,WAIFc,EAAAf,EAAAC,cAAA,iCACsBc,EAAAf,EAAAC,cAAA,oBADtB,sBAEKc,EAAAf,EAAAC,cAAA,uBAFL,MAGEc,EAAAf,EAAAC,cAAA,iCAHF,mBAIEc,EAAAf,EAAAC,cAAA,mBAJF,+BAOFc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,UACEc,EAAAf,EAAAC,cAAA,8BACiBc,EAAAf,EAAAC,cAAA,oBADjB,WAIFc,EAAAf,EAAAC,cAAA,kCACuBc,EAAAf,EAAAC,cAAA,oBADvB,sBAEec,EAAAf,EAAAC,cAAA,uBAFf,MAGEc,EAAAf,EAAAC,cAAA,iCAHF,mBAIEc,EAAAf,EAAAC,cAAA,mBAJF,sCAmBdc,EAAAf,EAAAC,cAAA,WAASiB,UAAU,gCAEjBH,EAAAf,EAAAC,cAAC2B,EAAA,EAAD,CACED,GAAG,WACHI,aAAa,EACbC,YAAY,EACZC,cAAc,EACdC,kBAAkB,EAClBC,UAAU,EACVC,MAAM,QAENrB,EAAAf,EAAAC,cAAA,cACEc,EAAAf,EAAAC,cAAA,QAAMiB,UAAU,eACdH,EAAAf,EAAAC,cAAA,KAAGiB,UAAU,kBAGfH,EAAAf,EAAAC,cAAA,uCAIFc,EAAAf,EAAAC,cAAA,WAEEc,EAAAf,EAAAC,cAAA,OAAKiB,UAAU,0BACbH,EAAAf,EAAAC,cAACd,EAAA,EAAD,CAAY+B,UAAU,aAAazB,OAAQ,MAE3CsB,EAAAf,EAAAC,cAAA,OAAKiB,UAAU,4BACbH,EAAAf,EAAAC,cAAA,OAAKiB,UAAU,aACbH,EAAAf,EAAAC,cAAA,UACEiB,UAAU,yBACVoB,KAAK,UAELvB,EAAAf,EAAAC,cAAA,KAAGiB,UAAU,gBAJf,YAOFH,EAAAf,EAAAC,cAAA,OAAKiB,UAAU,aACbH,EAAAf,EAAAC,cAAA,UACEiB,UAAU,yBACVoB,KAAK,UAELvB,EAAAf,EAAAC,cAAA,KAAGiB,UAAU,gBAJf,UAQFH,EAAAf,EAAAC,cAAA,SAAOiB,UAAU,sBACfH,EAAAf,EAAAC,cAAA,SACEqC,KAAK,WACLC,gBAAc,EACdC,KAAK,WACLb,GAAG,aAELZ,EAAAf,EAAAC,cAAA,UAPF,iBAmBRc,EAAAf,EAAAC,cAAC2B,EAAA,EAAD,CAAcD,GAAG,WAAWT,UAAU,QACpCH,EAAAf,EAAAC,cAAA,cACEc,EAAAf,EAAAC,cAAA,QAAMiB,UAAU,eACdH,EAAAf,EAAAC,cAAA,KAAGiB,UAAU,kBAGfH,EAAAf,EAAAC,cAAA,uBAIFc,EAAAf,EAAAC,cAAA,WAEEc,EAAAf,EAAAC,cAAA,OAAKiB,UAAU,eACbH,EAAAf,EAAAC,cAAA,gCAEAc,EAAAf,EAAAC,cAAA,SACEc,EAAAf,EAAAC,cAACwC,EAAD,CACEnB,OAAO,cACPJ,UAAU,kBACVoB,KAAK,UAHP,QAOAvB,EAAAf,EAAAC,cAACyC,EAAD,CACEpB,OAAO,cACPJ,UAAU,kBACVoB,KAAK,UAHP,SAQFvB,EAAAf,EAAAC,cAAA,UAEAc,EAAAf,EAAAC,cAAA,OAAKiB,UAAU,cAAf,4DAIAH,EAAAf,EAAAC,cAAA,mBACAc,EAAAf,EAAAC,cAAA,WACEc,EAAAf,EAAAC,cAAA,QAAMiB,UAAU,OAAhB,0RAUFH,EAAAf,EAAAC,cAAA,qBACAc,EAAAf,EAAAC,cAAA,WACEc,EAAAf,EAAAC,cAAA,QAAMiB,UAAU,cACb,KADH,wBAKFH,EAAAf,EAAAC,cAAA,4BAEAc,EAAAf,EAAAC,cAAA,KAAGiB,UAAU,oBAAb,wIAIEH,EAAAf,EAAAC,cAAA,KAAG0C,KAAK,4DAAR,uBA/VwBvC,IAAMC","file":"static/js/34.b83e5d3b.chunk.js","sourcesContent":["import React from \"react\";\nimport $ from \"jquery\";\nimport \"summernote/dist/summernote.min\";\n\nexport default class Summernote extends React.Component {\n  componentDidMount() {\n    $(this.refs.editor).summernote({\n      height: this.props.height || 270\n    });\n  }\n\n  componentWillUnmount() {\n    $(this.refs.editor).summernote(\"destroy\");\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <div {...props} ref=\"editor\">\n        {children}\n      </div>\n    );\n  }\n}\n","export * from './layout'\nexport * from './navigation'\nexport * from './utils'\nexport * from './widgets'","import React from \"react\";\nimport $ from \"jquery\";\nimport \"to-markdown/dist/to-markdown.js\";\nimport \"markdown/lib/markdown.js\";\nimport \"he/he.js\";\nimport \"bootstrap-markdown/js/bootstrap-markdown.js\";\n\nexport default class MarkdownEditor extends React.Component {\n  componentDidMount() {\n    $(this.refs.editor).markdown();\n  }\n\n  render() {\n    return (\n      <textarea\n        ref=\"editor\"\n        defaultValue={this.props.value}\n        className={this.props.className}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport $ from \"jquery\";\nimport \"summernote/dist/summernote.min\";\n\nexport default class AttachSummernote extends React.Component {\n  onClick = () => {\n    $(this.props.target).summernote({\n      focus: true\n    });\n  };\n\n  componentWillUnmount() {\n    $(this.props.target).summernote(\"destroy\");\n  }\n\n  render() {\n    let { children, ...props } = this.props;\n    return (\n      <button onClick={this.onClick} {...props}>\n        {children}\n      </button>\n    );\n  }\n}\n","import React from \"react\";\nimport $ from \"jquery\";\n\nexport default class DetachSummernote extends React.Component {\n  onClick = () => {\n    $(this.props.target).summernote(\"destroy\");\n  };\n\n  render() {\n    let { children, ...props } = this.props;\n    return (\n      <button {...props} onClick={this.onClick}>\n        {children}\n      </button>\n    );\n  }\n}\n","import React from \"react\";\n\nimport {\n  Stats,\n  BigBreadcrumbs,\n  WidgetGrid,\n  JarvisWidget\n} from \"../../../common\";\n\nimport MarkdownEditor from \"../../../common/forms/editors/MarkdownEditor\";\nimport Summernote from \"../../../common/forms/editors/Summernote\";\nimport AttachSummernote from \"../../../common/forms/editors/AttachSummernote\";\nimport DetachSummernote from \"../../../common/forms/editors/DetachSummernote\";\n\nlet demoText = `### Hello there\nHow are you?\n\nI have bellow task for you :\n\nSelect from this text...\nClick the bold on THIS WORD and make THESE ONE italic\nLink GOOGLE to google.com\nTest to insert image (and try to tab after write the image description)\nTest Preview\nAnd ending here... Click \"List\"\n\nEnjoy!`;\n\nexport default class BootstrapEditors extends React.Component {\n  render() {\n    return (\n      <div id=\"content\">\n        <div className=\"row\">\n          <BigBreadcrumbs\n            items={[\"Forms\", \"Bootstrap Editors\"]}\n            icon=\"fa fa-fw fa-pencil-square-o\"\n            className=\"col-xs-12 col-sm-7 col-md-7 col-lg-4\"\n          />\n          <Stats />\n        </div>\n\n        <WidgetGrid>\n          <div className=\"row\">\n            {/* NEW WIDGET START */}\n            <article className=\"col-sm-12 col-md-12 col-lg-6\">\n              {/* Widget ID (each widget will need unique ID)*/}\n              <JarvisWidget\n                id=\"wid-id-0\"\n                colorbutton={false}\n                editbutton={false}\n                togglebutton={false}\n                fullscreenbutton={false}\n                sortable={false}\n                color=\"purple\"\n              >\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-pencil\" />\n                  </span>\n\n                  <h2>Markdown</h2>\n                </header>\n\n                {/* widget div*/}\n                <div>\n                  {/* widget content */}\n                  <div className=\"widget-body no-padding\">\n                    <MarkdownEditor\n                      value={demoText}\n                      className=\"custom-scroll\"\n                      height={270}\n                    />\n                  </div>\n                  {/* end widget content */}\n                </div>\n                {/* end widget div */}\n              </JarvisWidget>\n              {/* end widget */}\n\n              {/* Widget ID (each widget will need unique ID)*/}\n              <JarvisWidget\n                id=\"wid-id-1\"\n                className=\"well\"\n                colorbutton={false}\n                editbutton={false}\n                togglebutton={false}\n                fullscreenbutton={false}\n                sortable={false}\n              >\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-pencil\" />\n                  </span>\n\n                  <h2>Markdown API</h2>\n                </header>\n\n                {/* widget div*/}\n                <div>\n                  {/* widget content */}\n                  <div className=\"widget-body\">\n                    <h3>Markdown API</h3>\n\n                    <table className=\"table table-bordered table-striped\">\n                      <thead>\n                        <tr>\n                          <th>Method Name</th>\n                          <th>Description</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td>\n                            <code>showEditor()</code>\n                          </td>\n                          <td>Toggle on the editor visibility</td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>showPreview()</code>\n                          </td>\n                          <td>Toggle on the preview visibility</td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>hidePreview()</code>\n                          </td>\n                          <td>Toggle off the editor visibility</td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>isDirty()</code>\n                          </td>\n                          <td>\n                            Check the editor content state, return true if the\n                            original content was changed\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>getContent()</code>\n                          </td>\n                          <td>Get the editor content</td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>\n                              setContent(<em>string</em> content)\n                            </code>\n                          </td>\n                          <td>Set the editor content</td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>\n                              findSelection(<em>string</em> words)\n                            </code>\n                          </td>\n                          <td>\n                            Find some words/sentence within the editor and\n                            returned selection object(containing word position\n                            and other useful information).\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>getSelection()</code>\n                          </td>\n                          <td>\n                            Get the current selected chunk of words within the\n                            editor.\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>\n                              setSelection(<em>int</em> start, <em>int</em> end)\n                            </code>\n                          </td>\n                          <td>\n                            Tell the editor to select a span of words from\n                            <code>start</code> to <code>end</code>.\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>\n                              replaceSelection(<em>string</em> content)\n                            </code>\n                          </td>\n                          <td>\n                            Replace the current selected chunk of words within\n                            the editor with any content.\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>getNextTab()</code>\n                          </td>\n                          <td>\n                            Get the next tab memory. Returned selection\n                            object(containing word position and other useful\n                            information).\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>\n                              setNextTab(<em>int</em> start, <em>int</em> end)\n                            </code>\n                          </td>\n                          <td>\n                            Tell the editor to select a span of words from\n                            <code>start</code> to <code>end</code> at next\n                            <code>tab</code> keypress event.\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>\n                              enableButtons(<em>string</em> name)\n                            </code>\n                          </td>\n                          <td>\n                            Enabled a button by <code>name</code> that described\n                            in <code>buttons</code> or\n                            <code>additionalButtons</code> arrays. Passing\n                            <code>all</code> will enabled all buttons.\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>\n                              disableButtons(<em>string</em> name)\n                            </code>\n                          </td>\n                          <td>\n                            Disabled a button by <code>name</code> that\n                            described in <code>buttons</code> or\n                            <code>additionalButtons</code> arrays. Passing\n                            <code>all</code> will disabled all buttons.\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                  {/* end widget content */}\n                </div>\n                {/* end widget div */}\n              </JarvisWidget>\n              {/* end widget */}\n            </article>\n            {/* WIDGET END */}\n\n            {/* NEW WIDGET START */}\n            <article className=\"col-sm-12 col-md-12 col-lg-6\">\n              {/* Widget ID (each widget will need unique ID)*/}\n              <JarvisWidget\n                id=\"wid-id-2\"\n                colorbutton={false}\n                editbutton={false}\n                togglebutton={false}\n                fullscreenbutton={false}\n                sortable={false}\n                color=\"blue\"\n              >\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-pencil\" />\n                  </span>\n\n                  <h2>Summernote (Lightweight)</h2>\n                </header>\n\n                {/* widget div*/}\n                <div>\n                  {/* widget content */}\n                  <div className=\"widget-body no-padding\">\n                    <Summernote className=\"summernote\" height={180} />\n\n                    <div className=\"widget-footer smart-form\">\n                      <div className=\"btn-group\">\n                        <button\n                          className=\"btn btn-sm btn-primary\"\n                          type=\"button\"\n                        >\n                          <i className=\"fa fa-times\" /> Cancel\n                        </button>\n                      </div>\n                      <div className=\"btn-group\">\n                        <button\n                          className=\"btn btn-sm btn-success\"\n                          type=\"button\"\n                        >\n                          <i className=\"fa fa-check\" /> Save\n                        </button>\n                      </div>\n\n                      <label className=\"checkbox pull-left\">\n                        <input\n                          type=\"checkbox\"\n                          defaultChecked\n                          name=\"autosave\"\n                          id=\"autosave\"\n                        />\n                        <i />\n                        Auto Save\n                      </label>\n                    </div>\n                  </div>\n                  {/* end widget content */}\n                </div>\n                {/* end widget div */}\n              </JarvisWidget>\n              {/* end widget */}\n\n              {/* Widget ID (each widget will need unique ID)*/}\n              <JarvisWidget id=\"wid-id-3\" className=\"well\">\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-pencil\" />\n                  </span>\n\n                  <h2>Example </h2>\n                </header>\n\n                {/* widget div*/}\n                <div>\n                  {/* widget content */}\n                  <div className=\"widget-body\">\n                    <h3>Summernote Example</h3>\n\n                    <p>\n                      <AttachSummernote\n                        target=\".click2edit\"\n                        className=\"btn btn-primary\"\n                        type=\"button\"\n                      >\n                        Edit\n                      </AttachSummernote>\n                      <DetachSummernote\n                        target=\".click2edit\"\n                        className=\"btn btn-primary\"\n                        type=\"button\"\n                      >\n                        Save\n                      </DetachSummernote>\n                    </p>\n                    <p />\n\n                    <div className=\"click2edit\">\n                      To change this text with summernote, click `Edit` button\n                    </div>\n\n                    <h5>HTML:</h5>\n                    <pre>\n                      <code className=\"xml\">\n                        &lt;button className=\"btn btn-primary\"\n                        data-smart-edit-summernote=\".click2edit\"&gt;Edit&lt;/button&gt;\n                        &lt;button className=\"btn btn-primary\"\n                        data-smart-destroy-summernote=\".click2edit\"&gt;Save&lt;\n                        /button&gt; &lt;div className=\"click2edit\"&gt;To change\n                        this text with summernote, click `Edit` button&lt;\n                        /div&gt;\n                      </code>\n                    </pre>\n                    <h5>Script:</h5>\n                    <pre>\n                      <code className=\"javascript\">\n                        {\"//\"}no scripts required\n                      </code>\n                    </pre>\n\n                    <h5>Documentation:</h5>\n\n                    <p className=\"alert alert-info\">\n                      Full API for Summernote.js, including keybored shortcuts,\n                      PHP Examples, Django installation, and Rails (gem)\n                      integration can be found\n                      <a href=\"http://hackerwins.github.io/summernote/features.html#api\">\n                        here\n                      </a>\n                    </p>\n                  </div>\n                  {/* end widget content */}\n\n                  {/* end widget div */}\n                </div>\n              </JarvisWidget>\n              {/* end widget */}\n            </article>\n            {/* WIDGET END */}\n          </div>\n\n          {/* end row */}\n        </WidgetGrid>\n\n        {/* end widget grid */}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}