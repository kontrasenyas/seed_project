{"version":3,"sources":["common/index.js","common/ui/components/TreeView.js","views/ui/components/TreeViews.js"],"names":["_layout__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_navigation__WEBPACK_IMPORTED_MODULE_1__","_utils__WEBPACK_IMPORTED_MODULE_2__","_widgets__WEBPACK_IMPORTED_MODULE_3__","TreeViewItem","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleExpand","e","stopPropagation","item","props","children","expanded","forceUpdate","componentDidUpdate","handleIcon","componentDidMount","$","findDOMNode","assertThisInitialized","find","toggleClass","inherits","createClass","key","value","react_default","a","createElement","TreeView_TreeView","className","classnames","smart-treeview-group","hidden","items","role","parent_li","onClick","_handleExpand","HtmlRender","html","content","React","Component","TreeView","map","TreeView_TreeViewItem","newid","TreeViews","state","demo1","demo2","_this2","getJSON","then","data","setState","id","common","icon","editbutton","color","type","placeholder"],"mappings":"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","file":"static/js/58.8c746ad9.chunk.js","sourcesContent":["export * from './layout'\nexport * from './navigation'\nexport * from './utils'\nexport * from './widgets'","import React from \"react\";\n\nimport { newid } from \"../../utils/functions\";\nimport classnames from \"classnames\";\nimport HtmlRender from \"../../utils/components/HtmlRender\";\nimport { findDOMNode } from \"react-dom\";\nimport $ from \"jquery\";\n\nexport class TreeViewItem extends React.Component {\n  handleExpand = e => {\n    e.stopPropagation();\n    let item = this.props.item;\n    if (item.children && item.children.length) {\n      item.expanded = !item.expanded;\n      this.forceUpdate();\n    }\n  };\n  render() {\n    let item = this.props.item;\n\n    let children = item.children ? (\n      <TreeView\n        className={classnames({\n          \"smart-treeview-group\": true,\n          hidden: !item.expanded\n        })}\n        items={item.children}\n        role=\"group\"\n      />\n    ) : null;\n\n    return (\n      <li\n        className={classnames({\n          parent_li: item.children && item.children.length\n        })}\n        onClick={this._handleExpand}\n      >\n        <HtmlRender html={item.content} />\n        {children}\n      </li>\n    );\n  }\n  componentDidUpdate = () => {\n    this.handleIcon();\n  };\n  componentDidMount = () => {\n    this.handleIcon();\n  };\n  handleIcon = () => {\n    let item = this.props.item;\n    if (item.children && item.children.length) {\n      $(findDOMNode(this))\n        .find(\">p>span>i\")\n        .toggleClass(\"fa-plus-circle\", !item.expanded)\n        .toggleClass(\"fa-minus-circle\", !!item.expanded);\n    }\n  };\n}\n\nexport default class TreeView extends React.Component {\n  render() {\n    let items = this.props.items;\n    return (\n      <ul role={this.props.role} className={this.props.className}>\n        {items.map(function(item) {\n          return <TreeViewItem key={newid(\"treeview-item\")} item={item} />;\n        })}\n      </ul>\n    );\n  }\n}\n","import React from \"react\";\n\nimport {\n  Stats,\n  BigBreadcrumbs,\n  WidgetGrid,\n  JarvisWidget\n} from \"../../../common\";\n\nimport TreeView from \"../../../common/ui/components/TreeView\";\n\nimport { getJSON } from \"../../../common/utils\";\nexport default class TreeViews extends React.Component {\n  state = {\n    demo1: [],\n    demo2: []\n  };\n\n  componentWillMount() {\n    getJSON(\"assets/api/ui-examples/tree-view.json\").then(data => {\n      this.setState(data);\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"content\">\n        <div className=\"row\">\n          <BigBreadcrumbs\n            items={[\"UI Elements\", \"Tree View\"]}\n            icon=\"fa fa-fw fa-desktop\"\n            className=\"col-xs-12 col-sm-7 col-md-7 col-lg-4\"\n          />\n          <Stats />\n        </div>\n        {/* widget grid */}\n        <WidgetGrid>\n          {/* row */}\n          <div className=\"row\">\n            {/* NEW WIDGET START */}\n            <article className=\"col-sm-12 col-md-12 col-lg-6\">\n              {/* Widget ID (each widget will need unique ID)*/}\n              <JarvisWidget id=\"wid-id-0\" editbutton={false} color=\"orange\">\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-lg fa-calendar\" />\n                  </span>\n                  <h2>Organizing view </h2>\n                </header>\n                {/* widget div*/}\n                <div>\n                  {/* widget content */}\n                  <div className=\"widget-body\">\n                    <div className=\"widget-body-toolbar bg-color-white\">\n                      <form className=\"form-inline\">\n                        <div className=\"row\">\n                          <div className=\"col-sm-12 col-md-10\">\n                            <div className=\"form-group\">\n                              <label className=\"sr-only\">Task title</label>\n                              <input\n                                type=\"text\"\n                                className=\"form-control input-sm\"\n                                placeholder=\"My Task\"\n                              />\n                            </div>\n                            <div className=\"form-group\">\n                              <label className=\"sr-only\">Pick Week</label>\n                              <select className=\"form-control input-sm\">\n                                <option>Week 1</option>\n                                <option>Week 2</option>\n                              </select>\n                            </div>\n                            <div className=\"form-group\">\n                              <label className=\"sr-only\">Days</label>\n                              <select className=\"form-control input-sm\">\n                                <option>Monday</option>\n                                <option>Tuesday</option>\n                                <option>Wednesday</option>\n                                <option>Thursday</option>\n                                <option>Friday</option>\n                                <option>Saturday</option>\n                                <option>Sunday</option>\n                              </select>\n                            </div>\n                          </div>\n                          <div className=\"col-sm-12 col-md-2 text-align-right\">\n                            <button\n                              type=\"submit\"\n                              className=\"btn btn-warning btn-xs\"\n                            >\n                              <i className=\"fa fa-plus\" /> Add\n                            </button>\n                          </div>\n                        </div>\n                      </form>\n                    </div>\n                    <div className=\"tree\">\n                      <TreeView items={this.state.demo1} role=\"tree\" />\n                    </div>\n                  </div>\n                  {/* end widget content */}\n                </div>\n                {/* end widget div */}\n              </JarvisWidget>\n              {/* end widget */}\n            </article>\n            {/* WIDGET END */}\n            {/* NEW WIDGET START */}\n            <article className=\"col-sm-12 col-md-12 col-lg-6\">\n              {/* Widget ID (each widget will need unique ID)*/}\n              <JarvisWidget id=\"wid-id-1\" editbutton={false} color=\"blue\">\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-sitemap\" />\n                  </span>\n                  <h2>Simple View </h2>\n                </header>\n                {/* widget div*/}\n                <div>\n                  {/* widget content */}\n                  <div className=\"widget-body\">\n                    <div className=\"tree smart-form\">\n                      <TreeView items={this.state.demo2} role=\"tree\" />\n                    </div>\n                  </div>\n                  {/* end widget content */}\n                </div>\n                {/* end widget div */}\n              </JarvisWidget>\n              {/* end widget */}\n            </article>\n            {/* WIDGET END */}\n          </div>\n          {/* end row */}\n          {/* row */}\n          <div className=\"row\" />\n          {/* end row */}\n        </WidgetGrid>\n        {/* end widget grid */}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}