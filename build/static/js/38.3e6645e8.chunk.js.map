{"version":3,"sources":["common/index.js","common/graphs/morris/components/MorrisGraph.js","views/graphs/components/MorrisCharts.js"],"names":["_layout__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_navigation__WEBPACK_IMPORTED_MODULE_1__","_utils__WEBPACK_IMPORTED_MODULE_2__","_widgets__WEBPACK_IMPORTED_MODULE_3__","Raphael","require","window","Morris","MorrisGraph","this","renderChart","props","data","prevProps","JSON","stringify","_this","options","element","refs","morris","forEach","key","type","Area","Bar","Line","Donut","react_default","a","createElement","className","ref","React","Component","MorrisCharts","state","_this2","request","json","done","res","setState","parse","getBody","id","common","items","icon","editbutton","MorrisGraph_MorrisGraph","sales","xkey","ykeys","labels","pointSize","hideHover","barColors","_barColorsDemo","stacked","formater","_formaterDemo","events","units","xLabels","xLabelFormat","getMonth","getDate","getFullYear","grid","parseTime","row","series","Math","ceil","y","x"],"mappings":"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","file":"static/js/38.3e6645e8.chunk.js","sourcesContent":["export * from './layout'\nexport * from './navigation'\nexport * from './utils'\nexport * from './widgets'","import React from \"react\";\n\nconst Raphael = require(\"raphael\");\nwindow[\"Raphael\"] = Raphael;\nrequire(\"morris.js/morris.min\");\nconst Morris = window[\"Morris\"];\nexport default class MorrisGraph extends React.Component {\n  componentDidMount() {\n    this.renderChart(this.props.data);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (JSON.stringify(prevProps.data) !== JSON.stringify(this.props.data)) {\n      this.renderChart(this.props.data);\n    }\n  }\n\n  renderChart(data) {\n    if (data) {\n      let options = {\n        element: this.refs.morris,\n        data: data\n      };\n\n      let keys = [\n        \"xkey\",\n        \"ykeys\",\n        \"labels\",\n        \"pointSize\",\n        \"hideHover\",\n        \"stacked\",\n        \"grid\",\n        \"barColors\",\n        \"formater\",\n        \"events\",\n        \"units\",\n        \"xLabels\",\n        \"xLabelFormat\",\n        \"parseTime\"\n      ];\n\n      keys.forEach(key => {\n        if (!!this.props[key]) {\n          options[key] = this.props[key];\n        }\n      });\n\n      switch (this.props.type) {\n        case \"area\":\n          Morris.Area(options);\n          break;\n        case \"bar\":\n          Morris.Bar(options);\n          break;\n        case \"line\":\n          Morris.Line(options);\n          break;\n        case \"donut\":\n          Morris.Donut(options);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  render() {\n    return <div className=\"chart no-padding\" ref=\"morris\" />;\n  }\n}\n","import React from \"react\";\n\nimport request from \"then-request\";\n\nimport {\n  Stats,\n  BigBreadcrumbs,\n  WidgetGrid,\n  JarvisWidget\n} from \"../../../common\";\n\nimport { MorrisGraph } from \"../../../common/graphs/morris\";\n\nexport default class MorrisCharts extends React.Component {\n  state = {};\n\n  componentWillMount() {\n    request(\"GET\", \"assets/api/graphs/morris.json\", { json: true }).done(\n      res => {\n        this.setState(JSON.parse(res.getBody()));\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div id=\"content\">\n        <div className=\"row\">\n          <BigBreadcrumbs\n            items={[\"Morris Charts\"]}\n            icon=\"fa fa-fw fa-bar-chart-o\"\n            className=\"col-xs-12 col-sm-7 col-md-7 col-lg-4\"\n          />\n          <Stats />\n        </div>\n        <WidgetGrid>\n          <div className=\"row\">\n            <article className=\"col-sm-12 col-md-12 col-lg-12\">\n              <JarvisWidget id=\"wid-id-0\" editbutton={false}>\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-bar-chart-o\" />\n                  </span>\n                  <h2>Sales Graphs</h2>\n                </header>\n                <div>\n                  <div className=\"widget-body no-padding\">\n                    <MorrisGraph\n                      data={this.state.sales}\n                      type=\"area\"\n                      xkey=\"period\"\n                      ykeys={[\"iphone\", \"ipad\", \"itouch\"]}\n                      labels={[\"iPhone\", \"iPad\", \"iPod Touch\"]}\n                      pointSize={2}\n                      hideHover=\"auto\"\n                    />\n                  </div>\n                </div>\n              </JarvisWidget>\n            </article>\n\n            <article className=\"col-xs-12 col-sm-6\">\n              <JarvisWidget id=\"wid-id-1\" editbutton={false}>\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-bar-chart-o\" />\n                  </span>\n\n                  <h2>Area Graph</h2>\n                </header>\n\n                <div>\n                  <div className=\"widget-body no-padding\">\n                    <MorrisGraph\n                      data={this.state[\"area-demo\"]}\n                      type=\"area\"\n                      xkey=\"x\"\n                      ykeys={[\"y\", \"z\"]}\n                      labels={[\"Y\", \"Z\"]}\n                    />\n                  </div>\n                </div>\n              </JarvisWidget>\n            </article>\n\n            <article className=\"col-xs-12 col-sm-6\">\n              <JarvisWidget id=\"wid-id-2\" editbutton={false}>\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-bar-chart-o\" />\n                  </span>\n\n                  <h2>Bar Graph</h2>\n                </header>\n\n                <div>\n                  <div className=\"widget-body no-padding\">\n                    <MorrisGraph\n                      data={this.state[\"bar-demo\"]}\n                      type=\"bar\"\n                      xkey=\"x\"\n                      ykeys={\"y\"}\n                      labels={\"Y\"}\n                      barColors={this._barColorsDemo}\n                    />\n                  </div>\n                </div>\n              </JarvisWidget>\n            </article>\n\n            <article className=\"col-xs-12 col-sm-6\">\n              <JarvisWidget id=\"wid-id-3\" editbutton={false}>\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-bar-chart-o\" />\n                  </span>\n\n                  <h2>Normal Bar Graph</h2>\n                </header>\n\n                <div>\n                  <div className=\"widget-body no-padding\">\n                    <MorrisGraph\n                      data={this.state[\"normal-bar-demo\"]}\n                      type=\"bar\"\n                      xkey={\"x\"}\n                      ykeys={[\"y\", \"z\", \"a\"]}\n                      labels={[\"Y\", \"Z\", \"A\"]}\n                    />\n                    <morris-normal-bar-graph />\n                  </div>\n                </div>\n              </JarvisWidget>\n            </article>\n\n            <article className=\"col-xs-12 col-sm-6\">\n              <JarvisWidget id=\"wid-id-4\" editbutton={false}>\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-bar-chart-o\" />\n                  </span>\n\n                  <h2>Stacked Bar Graph</h2>\n                </header>\n                <div>\n                  <div className=\"widget-body no-padding\">\n                    <MorrisGraph\n                      data={this.state[\"stacked-bar-demo\"]}\n                      type=\"bar\"\n                      xkey={\"x\"}\n                      ykeys={[\"y\", \"z\", \"a\"]}\n                      labels={[\"Y\", \"Z\", \"A\"]}\n                      stacked={true}\n                    />\n                  </div>\n                </div>\n              </JarvisWidget>\n            </article>\n\n            <article className=\"col-xs-12 col-sm-6\">\n              <JarvisWidget id=\"wid-id-5\" editbutton={false}>\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-bar-chart-o\" />\n                  </span>\n\n                  <h2>Year Graph</h2>\n                </header>\n\n                <div>\n                  <div className=\"widget-body no-padding\">\n                    <MorrisGraph\n                      data={this.state[\"line-year-demo\"]}\n                      type=\"line\"\n                      xkey={\"period\"}\n                      ykeys={[\"licensed\", \"sorned\"]}\n                      labels={[\"Licensed\", \"SORN\"]}\n                    />\n                  </div>\n                </div>\n              </JarvisWidget>\n            </article>\n\n            <article className=\"col-xs-12 col-sm-6\">\n              <JarvisWidget id=\"wid-id-6\" editbutton={false}>\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-bar-chart-o\" />\n                  </span>\n\n                  <h2>Donut Graph</h2>\n                </header>\n\n                <div>\n                  <div className=\"widget-body no-padding\">\n                    <MorrisGraph\n                      data={this.state[\"donut-demo\"]}\n                      type=\"donut\"\n                      formater={this._formaterDemo}\n                    />\n                  </div>\n                </div>\n              </JarvisWidget>\n            </article>\n\n            <article className=\"col-xs-12 col-sm-6\">\n              <JarvisWidget id=\"wid-id-7\" editbutton={false}>\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-bar-chart-o\" />\n                  </span>\n\n                  <h2>Time Graph</h2>\n                </header>\n\n                <div>\n                  <div className=\"widget-body no-padding\">\n                    <MorrisGraph\n                      data={this.state[\"line-time-demo\"]}\n                      type=\"line\"\n                      xkey={\"period\"}\n                      ykeys={[\"licensed\", \"sorned\"]}\n                      labels={[\"Licensed\", \"SORN\"]}\n                      events={[\"2011-04\", \"2011-08\"]}\n                    />\n                  </div>\n                </div>\n              </JarvisWidget>\n            </article>\n\n            <article className=\"col-xs-12 col-sm-6\">\n              <JarvisWidget id=\"wid-id-8\" editbutton={false}>\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-bar-chart-o\" />\n                  </span>\n\n                  <h2>Line Graph A</h2>\n                </header>\n\n                <div>\n                  <div className=\"widget-body no-padding\">\n                    <MorrisGraph\n                      data={this.state[\"line-graph-a-demo\"]}\n                      type=\"line\"\n                      xkey={\"period\"}\n                      ykeys={[\"a\"]}\n                      labels={[\"Series A\"]}\n                      units={\"%\"}\n                    />\n                  </div>\n                </div>\n              </JarvisWidget>\n            </article>\n\n            <article className=\"col-xs-12 col-sm-6\">\n              <JarvisWidget id=\"wid-id-9\" editbutton={false}>\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-bar-chart-o\" />\n                  </span>\n\n                  <h2>Line Graph B</h2>\n                </header>\n\n                <div>\n                  <div className=\"widget-body no-padding\">\n                    <MorrisGraph\n                      data={this.state[\"line-graph-b-demo\"]}\n                      type=\"line\"\n                      xkey={\"period\"}\n                      ykeys={[\"licensed\", \"sorned\", \"other\"]}\n                      labels={[\"Licensed\", \"SORN\", \"Other\"]}\n                      xLabels={\"day\"}\n                      xLabelFormat={function(d) {\n                        return (\n                          d.getMonth() +\n                          1 +\n                          \"/\" +\n                          d.getDate() +\n                          \"/\" +\n                          d.getFullYear()\n                        );\n                      }}\n                    />\n                  </div>\n                </div>\n              </JarvisWidget>\n            </article>\n\n            <article className=\"col-xs-12 col-sm-6\">\n              <JarvisWidget id=\"wid-id-10\" editbutton={false}>\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-bar-chart-o\" />\n                  </span>\n\n                  <h2>No Grid Graph</h2>\n                </header>\n\n                <div>\n                  <div className=\"widget-body no-padding\">\n                    <MorrisGraph\n                      data={this.state[\"no-grid-demo\"]}\n                      type=\"line\"\n                      xkey={\"period\"}\n                      ykeys={[\"licensed\", \"sorned\"]}\n                      labels={[\"Licensed\", \"SORN\"]}\n                      grid={false}\n                    />\n                  </div>\n                </div>\n              </JarvisWidget>\n            </article>\n\n            <article className=\"col-xs-12 col-sm-12\">\n              <JarvisWidget id=\"wid-id-11\" editbutton={false}>\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-bar-chart-o\" />\n                  </span>\n\n                  <h2>Line Graph C</h2>\n                </header>\n\n                <div>\n                  <div className=\"widget-body no-padding\">\n                    <MorrisGraph\n                      data={this.state[\"line-graph-c-demo\"]}\n                      type=\"line\"\n                      xkey={\"elapsed\"}\n                      ykeys={[\"value\"]}\n                      labels={[\"value\"]}\n                      parseTime={false}\n                    />\n                  </div>\n                </div>\n              </JarvisWidget>\n            </article>\n          </div>\n        </WidgetGrid>\n      </div>\n    );\n  }\n  _barColorsDemo(row, series, type) {\n    if (type === \"bar\") {\n      var red = Math.ceil((150 * row.y) / 8);\n      return \"rgb(\" + red + \",0,0)\";\n    } else {\n      return \"#000\";\n    }\n  }\n  _formaterDemo(x) {\n    return x + \"%\";\n  }\n}\n"],"sourceRoot":""}