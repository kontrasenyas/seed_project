{"version":3,"sources":["../node_modules/process/browser.js","../node_modules/to-markdown/dist/to-markdown.js","../node_modules/markdown/lib/markdown.js","../node_modules/util/util.js","../node_modules/util/support/isBufferBrowser.js","../node_modules/inherits/inherits_browser.js","../node_modules/he/he.js","../node_modules/bootstrap-markdown/js/bootstrap-markdown.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","require","t","n","r","s","o","u","a","f","code","l","1","toMarkdown","converters","mdConverters","gfmConverters","HtmlParser","collapse","blocks","isBlock","node","indexOf","nodeName","toLowerCase","voids","isVoid","getContent","text","childNodes","nodeType","_replacement","data","canConvert","filter","isArray","TypeError","isFlankedByWhitespace","side","sibling","regExp","isFlanked","previousSibling","nextSibling","test","nodeValue","textContent","flankingWhitespace","content","leading","trailing","hasLeading","hasTrailing","replacement","converter","whitespace","trim","input","options","clone","string","tree","parseFromString","documentElement","htmlToDom","replace","body","nodes","elem","children","inqueue","outqueue","shift","bfsOrder","slice","gfm","outer","cloneNode","outerHTML","./lib/gfm-converters","./lib/html-parser","./lib/md-converters","collapse-whitespace","2","cell","index","parentNode","prefix","highlightRegEx","type","checked","borderCells","alignMap","left","right","center","align","attributes","border","value","firstChild","className","language","match","3","_window","window","Parser","DOMParser","canParse","canParseHtmlNatively","document","jsdom","features","FetchExternalResources","ProcessExternalResources","useActiveX","implementation","createHTMLDocument","open","ActiveXObject","shouldUseActiveX","doc","write","close","designMode","createHtmlParser","4","hLevel","charAt","hPrefix","hasSiblings","isCodeBlock","getAttribute","titlePart","alt","src","parent","strings","join","5","6","7","voidElements","Object","keys","forEach","toUpperCase","blockElements","isBlockElem","remove","next","removeChild","prev","current","prevText","prevVoid","substr","nextNode","block-elements","void-elements","8","area","base","br","col","embed","hr","img","keygen","link","menuitem","meta","param","source","track","wbr","expose","Markdown","dialect","dialects","Gruber","String","em_state","strong_state","debug_indent","mk_block_toSource","uneval","toString","lineNumber","mk_block_inspect","util","__webpack_require__","inspect","parse","toTree","toHTML","toHTMLTree","renderJsonML","attrs","extract_attr","refs","references","html","convert_tree_to_html","jsonml","preprocessTreeNode","level","splice","href","ref","original","key","merge_text_nodes","mk_block","block","trail","line","toSource","undefined","count_lines","str","strong_em","tag","md","state_slot","other_slot","CloseTag","len_after","orig_match","other","state","unshift","res","processInline","last","pop","split_blocks","startLine","m","re","line_no","exec","lastIndex","processBlock","cbs","ord","__order__","__call__","debug","inline","custom_root","old_tree","b","print","console","log","loop_re_over_block","cb","valueOf","atxHeader","header","setextHeader","ret","block_search","substring","horizRule","lists","any_list","bullet_list","is_list_re","RegExp","indent_re","add","li","loose","nl","add_to","what","get_contained_blocks","depth","x","paragraphify","stack","list","last_li","sublist","make_list","lines","split","li_accumulate","line_re","wanted_depth","Math","floor","found","indent","contained","next_block","blockquote","abutting","processedBlock","attr","isEmpty","referenceDefn","para","__oneElement__","patterns_or_re","previous_nodes","__patterns__","patterns","out","]","}","__escape__","\\","![","[","orig","DialectHelpers","inline_until_char","consumed","url","open_parens","<","`","  \n","buildBlockOrder","d","buildInlinePatterns","fn","pattern","want","subclassDialect","Block","Inline","Maruku","processMetaHash","meta_string","parts","in_quotes","letter","split_meta_hash","id","document_meta","pairs","p","block_meta","hash","result","definition_list","tight","terms","defns","table","_split_on_unescaped","ch","html_attrs","row","html_row","matches","before","k","obj","arr","thisp","hasOwnProperty","escapeHTML","render_tree","tag_attrs","root","getOwnPropertyDescriptors","descriptors","getOwnPropertyDescriptor","formatRegExp","format","isString","objects","Number","JSON","stringify","_","isNull","isObject","deprecate","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","trace","error","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","constructor","primitive","simple","isNumber","formatPrimitive","visibleKeys","val","idx","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","isDate","Date","output","braces","toUTCString","formatProperty","formatArray","map","reduce","cur","numLinesEst","reduceToSingleString","desc","get","set","ar","arg","objectToString","pad","debuglog","NODE_ENV","PUBLIC_URL","NODE_DEBUG","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","prop","time","getHours","getMinutes","getSeconds","getDate","getMonth","timestamp","inherits","origin","kCustomPromisifiedSymbol","Symbol","callbackifyOnRejected","reason","newReason","promisify","defineProperty","enumerable","writable","configurable","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","self","then","rej","copy","fill","readUInt8","create","ctor","superCtor","super_","TempCtor","global","__WEBPACK_AMD_DEFINE_RESULT__","freeExports","freeGlobal","regexAstralSymbols","regexAsciiWhitelist","regexBmpWhitelist","regexEncodeNonAscii","encodeMap","­","‌","‍","‎","⁣","⁢","⁡","‏","​","⁠","̑","⃛","⃜","\t","\n"," "," "," "," "," "," "," "," "," "," ","  ","‾","‐","–","—","―",",",";","⁏",":","⩴","!","¡","?","¿",".","‥","…","·","'","‘","’","‚","‹","›","\"","“","”","„","«","»","(",")","{","⌈","⌉","⌊","⌋","⦅","⦆","⦋","⦌","⦍","⦎","⦏","⦐","⦑","⦒","⦓","⦔","⦕","⦖","⟦","⟧","⟨","⟩","⟪","⟫","⟬","⟭","❲","❳","‖","§","¶","@","*","/","&","#","%","‰","‱","†","‡","•","⁃","′","″","‴","⁗","‵","⁁","´","˜","^","¯","˘","˙","¨","˚","˝","¸","˛","ˆ","ˇ","°","©","®","℗","℘","℞","℧","℩","←","↚","→","↛","↑","↓","↔","↮","↕","↖","↗","↘","↙","↝","↝̸","↞","↟","↠","↡","↢","↣","↤","↥","↦","↧","↩","↪","↫","↬","↭","↰","↱","↲","↳","↵","↶","↷","↺","↻","↼","↽","↾","↿","⇀","⇁","⇂","⇃","⇄","⇅","⇆","⇇","⇈","⇉","⇊","⇋","⇌","⇐","⇍","⇑","⇒","⇏","⇓","⇔","⇎","⇕","⇖","⇗","⇘","⇙","⇚","⇛","⇝","⇤","⇥","⇵","⇽","⇾","⇿","∀","∁","∂","∂̸","∃","∄","∅","∇","∈","∉","∋","∌","϶","∏","∐","∑","+","±","÷","×","≮","<⃒","=","≠","=⃥","⩵",">","≯",">⃒","¬","|","¦","−","∓","∔","⁄","∖","∗","∘","√","∝","∞","∟","∠","∠⃒","∡","∢","∣","∤","∥","∦","∧","∨","∩","∩︀","∪","∪︀","∫","∬","∭","⨌","∮","∯","∰","∱","∲","∳","∴","∵","∶","∷","∸","∺","∻","∼","≁","∼⃒","∽","∽̱","∾","∾̳","∿","≀","≂","≂̸","≃","≄","≅","≇","≆","≈","≉","≊","≋","≋̸","≌","≍","≭","≍⃒","≎","≎̸","≏","≏̸","≐","≐̸","≑","≒","≓","≔","≕","≖","≗","≙","≚","≜","≟","≡","≢","≡⃥","≤","≰","≤⃒","≥","≱","≥⃒","≦","≦̸","≧","≧̸","≨︀","≨","≩","≩︀","≪","≪̸","≪⃒","≫","≫̸","≫⃒","≬","≲","≴","≳","≵","≶","≸","≷","≹","≺","⊀","≻","⊁","≼","⋠","≽","⋡","≾","≿","≿̸","⊂","⊄","⊂⃒","⊃","⊅","⊃⃒","⊆","⊈","⊇","⊉","⊊︀","⊊","⊋︀","⊋","⊍","⊎","⊏","⊏̸","⊐","⊐̸","⊑","⋢","⊒","⋣","⊓","⊓︀","⊔","⊔︀","⊕","⊖","⊗","⊘","⊙","⊚","⊛","⊝","⊞","⊟","⊠","⊡","⊢","⊬","⊣","⊤","⊥","⊧","⊨","⊭","⊩","⊮","⊪","⊫","⊯","⊰","⊲","⋪","⊳","⋫","⊴","⋬","⊴⃒","⊵","⋭","⊵⃒","⊶","⊷","⊸","⊹","⊺","⊻","⊽","⊾","⊿","⋀","⋁","⋂","⋃","⋄","⋅","⋆","⋇","⋈","⋉","⋊","⋋","⋌","⋍","⋎","⋏","⋐","⋑","⋒","⋓","⋔","⋕","⋖","⋗","⋘","⋘̸","⋙","⋙̸","⋚︀","⋚","⋛","⋛︀","⋞","⋟","⋦","⋧","⋨","⋩","⋮","⋯","⋰","⋱","⋲","⋳","⋴","⋵","⋵̸","⋶","⋷","⋹","⋹̸","⋺","⋻","⋼","⋽","⋾","⌅","⌆","⌌","⌍","⌎","⌏","⌐","⌒","⌓","⌕","⌖","⌜","⌝","⌞","⌟","⌢","⌣","⌭","⌮","⌶","⌽","⌿","⍼","⎰","⎱","⎴","⎵","⎶","⏜","⏝","⏞","⏟","⏢","⏧","␣","─","│","┌","┐","└","┘","├","┤","┬","┴","┼","═","║","╒","╓","╔","╕","╖","╗","╘","╙","╚","╛","╜","╝","╞","╟","╠","╡","╢","╣","╤","╥","╦","╧","╨","╩","╪","╫","╬","▀","▄","█","░","▒","▓","□","▪","▫","▭","▮","▱","△","▴","▵","▸","▹","▽","▾","▿","◂","◃","◊","○","◬","◯","◸","◹","◺","◻","◼","★","☆","☎","♀","♂","♠","♣","♥","♦","♪","✓","✗","✠","✶","❘","⟈","⟉","⟵","⟶","⟷","⟸","⟹","⟺","⟼","⟿","⤂","⤃","⤄","⤅","⤌","⤍","⤎","⤏","⤐","⤑","⤒","⤓","⤖","⤙","⤚","⤛","⤜","⤝","⤞","⤟","⤠","⤣","⤤","⤥","⤦","⤧","⤨","⤩","⤪","⤳","⤳̸","⤵","⤶","⤷","⤸","⤹","⤼","⤽","⥅","⥈","⥉","⥊","⥋","⥎","⥏","⥐","⥑","⥒","⥓","⥔","⥕","⥖","⥗","⥘","⥙","⥚","⥛","⥜","⥝","⥞","⥟","⥠","⥡","⥢","⥣","⥤","⥥","⥦","⥧","⥨","⥩","⥪","⥫","⥬","⥭","⥮","⥯","⥰","⥱","⥲","⥳","⥴","⥵","⥶","⥸","⥹","⥻","⥼","⥽","⥾","⥿","⦚","⦜","⦝","⦤","⦥","⦦","⦧","⦨","⦩","⦪","⦫","⦬","⦭","⦮","⦯","⦰","⦱","⦲","⦳","⦴","⦵","⦶","⦷","⦹","⦻","⦼","⦾","⦿","⧀","⧁","⧂","⧃","⧄","⧅","⧉","⧍","⧎","⧏","⧏̸","⧐","⧐̸","⧜","⧝","⧞","⧣","⧤","⧥","⧫","⧴","⧶","⨀","⨁","⨂","⨄","⨆","⨍","⨐","⨑","⨒","⨓","⨔","⨕","⨖","⨗","⨢","⨣","⨤","⨥","⨦","⨧","⨩","⨪","⨭","⨮","⨯","⨰","⨱","⨳","⨴","⨵","⨶","⨷","⨸","⨹","⨺","⨻","⨼","⨿","⩀","⩂","⩃","⩄","⩅","⩆","⩇","⩈","⩉","⩊","⩋","⩌","⩍","⩐","⩓","⩔","⩕","⩖","⩗","⩘","⩚","⩛","⩜","⩝","⩟","⩦","⩪","⩭","⩭̸","⩮","⩯","⩰","⩰̸","⩱","⩲","⩳","⩷","⩸","⩹","⩺","⩻","⩼","⩽","⩽̸","⩾","⩾̸","⩿","⪀","⪁","⪂","⪃","⪄","⪅","⪆","⪇","⪈","⪉","⪊","⪋","⪌","⪍","⪎","⪏","⪐","⪑","⪒","⪓","⪔","⪕","⪖","⪗","⪘","⪙","⪚","⪝","⪞","⪟","⪠","⪡","⪡̸","⪢","⪢̸","⪤","⪥","⪦","⪧","⪨","⪩","⪪","⪫","⪬","⪬︀","⪭","⪭︀","⪮","⪯","⪯̸","⪰","⪰̸","⪳","⪴","⪵","⪶","⪷","⪸","⪹","⪺","⪻","⪼","⪽","⪾","⪿","⫀","⫁","⫂","⫃","⫄","⫅","⫅̸","⫆","⫆̸","⫇","⫈","⫋︀","⫋","⫌︀","⫌","⫏","⫐","⫑","⫒","⫓","⫔","⫕","⫖","⫗","⫘","⫙","⫚","⫛","⫤","⫦","⫧","⫨","⫩","⫫","⫬","⫭","⫮","⫯","⫰","⫱","⫲","⫳","⫽","⫽⃥","♭","♮","♯","¤","¢","$","£","¥","€","¹","½","⅓","¼","⅕","⅙","⅛","²","⅔","⅖","³","¾","⅗","⅜","⅘","⅚","⅝","⅞","𝒶","𝕒","𝔞","𝔸","𝔄","𝒜","ª","á","Á","à","À","ă","Ă","â","Â","å","Å","ä","Ä","ã","Ã","ą","Ą","ā","Ā","æ","Æ","𝒷","𝕓","𝔟","𝔹","ℬ","𝔅","𝔠","𝒸","𝕔","ℭ","𝒞","ℂ","ć","Ć","ĉ","Ĉ","č","Č","ċ","Ċ","ç","Ç","℅","𝔡","ⅆ","𝕕","𝒹","𝒟","𝔇","ⅅ","𝔻","ď","Ď","đ","Đ","ð","Ð","ⅇ","ℯ","𝔢","𝕖","ℰ","𝔈","𝔼","é","É","è","È","ê","Ê","ě","Ě","ë","Ë","ė","Ė","ę","Ę","ē","Ē","𝔣","𝕗","𝒻","𝔉","𝔽","ℱ","ﬀ","ﬃ","ﬄ","ﬁ","fj","ﬂ","ƒ","ℊ","𝕘","𝔤","𝒢","𝔾","𝔊","ǵ","ğ","Ğ","ĝ","Ĝ","ġ","Ġ","Ģ","𝔥","ℎ","𝒽","𝕙","ℋ","ℌ","ℍ","ĥ","Ĥ","ℏ","ħ","Ħ","𝕚","𝔦","𝒾","ⅈ","𝕀","ℐ","ℑ","í","Í","ì","Ì","î","Î","ï","Ï","ĩ","Ĩ","İ","į","Į","ī","Ī","ĳ","Ĳ","ı","𝒿","𝕛","𝔧","𝒥","𝔍","𝕁","ĵ","Ĵ","ȷ","𝕜","𝓀","𝔨","𝒦","𝕂","𝔎","ķ","Ķ","𝔩","𝓁","ℓ","𝕝","ℒ","𝔏","𝕃","ĺ","Ĺ","ľ","Ľ","ļ","Ļ","ł","Ł","ŀ","Ŀ","𝔪","𝕞","𝓂","𝔐","𝕄","ℳ","𝔫","𝕟","𝓃","ℕ","𝒩","𝔑","ń","Ń","ň","Ň","ñ","Ñ","ņ","Ņ","№","ŋ","Ŋ","𝕠","𝔬","ℴ","𝒪","𝔒","𝕆","º","ó","Ó","ò","Ò","ô","Ô","ö","Ö","ő","Ő","õ","Õ","ø","Ø","ō","Ō","œ","Œ","𝔭","𝓅","𝕡","ℙ","𝔓","𝒫","𝕢","𝔮","𝓆","𝒬","𝔔","ℚ","ĸ","𝔯","𝕣","𝓇","ℛ","ℜ","ℝ","ŕ","Ŕ","ř","Ř","ŗ","Ŗ","𝕤","𝓈","𝔰","𝕊","𝔖","𝒮","Ⓢ","ś","Ś","ŝ","Ŝ","š","Š","ş","Ş","ß","𝔱","𝓉","𝕥","𝒯","𝔗","𝕋","ť","Ť","ţ","Ţ","™","ŧ","Ŧ","𝓊","𝕦","𝔲","𝕌","𝔘","𝒰","ú","Ú","ù","Ù","ŭ","Ŭ","û","Û","ů","Ů","ü","Ü","ű","Ű","ũ","Ũ","ų","Ų","ū","Ū","𝔳","𝕧","𝓋","𝔙","𝕍","𝒱","𝕨","𝓌","𝔴","𝒲","𝕎","𝔚","ŵ","Ŵ","𝔵","𝓍","𝕩","𝕏","𝔛","𝒳","𝔶","𝓎","𝕪","𝒴","𝔜","𝕐","ý","Ý","ŷ","Ŷ","ÿ","Ÿ","𝓏","𝔷","𝕫","ℨ","ℤ","𝒵","ź","Ź","ž","Ž","ż","Ż","Ƶ","þ","Þ","ŉ","α","Α","β","Β","γ","Γ","δ","Δ","ε","ϵ","Ε","ϝ","Ϝ","ζ","Ζ","η","Η","θ","ϑ","Θ","ι","Ι","κ","ϰ","Κ","λ","Λ","μ","µ","Μ","ν","Ν","ξ","Ξ","ο","Ο","π","ϖ","Π","ρ","ϱ","Ρ","σ","Σ","ς","τ","Τ","υ","Υ","ϒ","φ","ϕ","Φ","χ","Χ","ψ","Ψ","ω","Ω","а","А","б","Б","в","В","г","Г","ѓ","Ѓ","д","Д","ђ","Ђ","е","Е","ё","Ё","є","Є","ж","Ж","з","З","ѕ","Ѕ","и","И","і","І","ї","Ї","й","Й","ј","Ј","к","К","ќ","Ќ","л","Л","љ","Љ","м","М","н","Н","њ","Њ","о","О","п","П","р","Р","с","С","т","Т","ћ","Ћ","у","У","ў","Ў","ф","Ф","х","Х","ц","Ц","ч","Ч","џ","Џ","ш","Ш","щ","Щ","ъ","Ъ","ы","Ы","ь","Ь","э","Э","ю","Ю","я","Я","ℵ","ℶ","ℷ","ℸ","regexEscape","escapeMap","regexInvalidEntity","regexInvalidRawCodePoint","regexDecode","decodeMap","aacute","Aacute","abreve","Abreve","ac","acd","acE","acirc","Acirc","acute","acy","Acy","aelig","AElig","af","afr","Afr","agrave","Agrave","alefsym","aleph","alpha","Alpha","amacr","Amacr","amalg","amp","AMP","and","And","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","Aogon","aopf","Aopf","ap","apacir","ape","apE","apid","apos","ApplyFunction","approx","approxeq","aring","Aring","ascr","Ascr","Assign","ast","asymp","asympeq","atilde","Atilde","auml","Auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","barwed","Barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","Bcy","bdquo","becaus","because","Because","bemptyv","bepsi","bernou","Bernoullis","beta","Beta","beth","between","bfr","Bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","bne","bnequiv","bnot","bNot","bopf","Bopf","bot","bottom","bowtie","boxbox","boxdl","boxdL","boxDl","boxDL","boxdr","boxdR","boxDr","boxDR","boxh","boxH","boxhd","boxhD","boxHd","boxHD","boxhu","boxhU","boxHu","boxHU","boxminus","boxplus","boxtimes","boxul","boxuL","boxUl","boxUL","boxur","boxuR","boxUr","boxUR","boxv","boxV","boxvh","boxvH","boxVh","boxVH","boxvl","boxvL","boxVl","boxVL","boxvr","boxvR","boxVr","boxVR","bprime","breve","Breve","brvbar","bscr","Bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpe","bumpE","bumpeq","Bumpeq","cacute","Cacute","cap","Cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","ccaron","Ccaron","ccedil","Ccedil","ccirc","Ccirc","Cconint","ccups","ccupssm","cdot","Cdot","cedil","Cedilla","cemptyv","cent","centerdot","CenterDot","cfr","Cfr","chcy","CHcy","check","checkmark","chi","Chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cire","cirE","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","colon","Colon","colone","Colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","conint","Conint","ContourIntegral","copf","Copf","coprod","Coproduct","COPY","copysr","CounterClockwiseContourIntegral","crarr","cross","Cross","cscr","Cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","Cup","cupbrcap","cupcap","CupCap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dagger","Dagger","daleth","darr","dArr","Darr","dash","dashv","Dashv","dbkarow","dblac","dcaron","Dcaron","dcy","Dcy","dd","DD","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","delta","Delta","demptyv","dfisht","dfr","Dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","diamond","Diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","djcy","DJcy","dlcorn","dlcrop","dollar","dopf","Dopf","dot","Dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","downarrow","Downarrow","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","dscr","Dscr","dscy","DScy","dsol","dstrok","Dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","DZcy","dzigrarr","eacute","Eacute","easter","ecaron","Ecaron","ecir","ecirc","Ecirc","ecolon","ecy","Ecy","eDDot","edot","eDot","Edot","ee","efDot","efr","Efr","eg","egrave","Egrave","egs","egsdot","el","Element","elinters","ell","els","elsdot","emacr","Emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","eng","ENG","ensp","eogon","Eogon","eopf","Eopf","epar","eparsl","eplus","epsi","epsilon","Epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","escr","Escr","esdot","esim","Esim","eta","Eta","eth","ETH","euml","Euml","euro","excl","exist","Exists","expectation","exponentiale","ExponentialE","fallingdotseq","fcy","Fcy","female","ffilig","fflig","ffllig","ffr","Ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","fopf","Fopf","forall","ForAll","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","Fscr","gacute","gamma","Gamma","gammad","Gammad","gap","gbreve","Gbreve","Gcedil","gcirc","Gcirc","gcy","Gcy","gdot","Gdot","ge","gE","gel","gEl","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","Gfr","gg","Gg","ggg","gimel","gjcy","GJcy","gl","gla","glE","glj","gnap","gnapprox","gne","gnE","gneq","gneqq","gnsim","gopf","Gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","gscr","Gscr","gsim","gsime","gsiml","gt","Gt","GT","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","hardcy","HARDcy","harr","hArr","harrcir","harrw","Hat","hbar","hcirc","Hcirc","hearts","heartsuit","hellip","hercon","hfr","Hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","Hopf","horbar","HorizontalLine","hscr","Hscr","hslash","hstrok","Hstrok","HumpDownHump","HumpEqual","hybull","hyphen","iacute","Iacute","ic","icirc","Icirc","icy","Icy","Idot","iecy","IEcy","iexcl","iff","ifr","Ifr","igrave","Igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","IJlig","Im","imacr","Imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","int","Int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","iocy","IOcy","iogon","Iogon","iopf","Iopf","iota","Iota","iprod","iquest","iscr","Iscr","isin","isindot","isinE","isins","isinsv","isinv","it","itilde","Itilde","iukcy","Iukcy","iuml","Iuml","jcirc","Jcirc","jcy","Jcy","jfr","Jfr","jmath","jopf","Jopf","jscr","Jscr","jsercy","Jsercy","jukcy","Jukcy","kappa","Kappa","kappav","kcedil","Kcedil","kcy","Kcy","kfr","Kfr","kgreen","khcy","KHcy","kjcy","KJcy","kopf","Kopf","kscr","Kscr","lAarr","lacute","Lacute","laemptyv","lagran","lambda","Lambda","lang","Lang","langd","langle","lap","Laplacetrf","laquo","larr","lArr","Larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","lAtail","late","lates","lbarr","lBarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","Lcaron","lcedil","Lcedil","lceil","lcub","lcy","Lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","lE","LeftAngleBracket","leftarrow","Leftarrow","LeftArrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","Leftrightarrow","LeftRightArrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","leg","lEg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","lfr","Lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","ljcy","LJcy","ll","Ll","llarr","llcorner","Lleftarrow","llhard","lltri","lmidot","Lmidot","lmoust","lmoustache","lnap","lnapprox","lne","lnE","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","Longleftarrow","LongLeftArrow","longleftrightarrow","Longleftrightarrow","LongLeftRightArrow","longmapsto","longrightarrow","Longrightarrow","LongRightArrow","looparrowleft","looparrowright","lopar","lopf","Lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","Lscr","lsh","Lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","Lstrok","lt","Lt","LT","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","Map","mapsto","mapstodown","mapstoleft","mapstoup","mcomma","mcy","Mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","mfr","Mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","mopf","Mopf","mp","mscr","Mscr","mstpos","mu","Mu","multimap","mumap","nabla","nacute","Nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","Ncaron","ncedil","Ncedil","ncong","ncongdot","ncup","ncy","Ncy","ndash","ne","nearhk","nearr","neArr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","nfr","Nfr","nge","ngE","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","ngt","nGt","ngtr","nGtv","nharr","nhArr","nhpar","ni","nis","nisd","niv","njcy","NJcy","nlarr","nlArr","nldr","nle","nlE","nleftarrow","nLeftarrow","nleftrightarrow","nLeftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nlt","nLt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","nopf","Nopf","not","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrarr","nrArr","nrarrc","nrarrw","nrightarrow","nRightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","Nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsube","nsubE","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupe","nsupE","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","Ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","Nu","num","numero","numsp","nvap","nvdash","nvDash","nVdash","nVDash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwarr","nwArr","nwarrow","nwnear","oacute","Oacute","oast","ocir","ocirc","Ocirc","ocy","Ocy","odash","odblac","Odblac","odiv","odot","odsold","oelig","OElig","ofcir","ofr","Ofr","ogon","ograve","Ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","Omacr","omega","Omega","omicron","Omicron","omid","ominus","oopf","Oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","or","Or","orarr","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","oscr","Oscr","oslash","Oslash","osol","otilde","Otilde","otimes","Otimes","otimesas","ouml","Ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","parallel","parsim","parsl","part","PartialD","pcy","Pcy","percnt","period","permil","perp","pertenk","pfr","Pfr","phi","Phi","phiv","phmmat","phone","pi","Pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","popf","Popf","pound","pr","Pr","prap","prcue","pre","prE","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","prime","Prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","Proportion","Proportional","propto","prsim","prurel","pscr","Pscr","psi","Psi","puncsp","qfr","Qfr","qint","qopf","Qopf","qprime","qscr","Qscr","quaternions","quatint","quest","questeq","quot","QUOT","rAarr","race","racute","Racute","radic","raemptyv","rang","Rang","rangd","range","rangle","raquo","rarr","rArr","Rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","Rarrtl","rarrw","ratail","rAtail","ratio","rationals","rbarr","rBarr","RBarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","Rcaron","rcedil","Rcedil","rceil","rcub","rcy","Rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","rect","reg","REG","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","rfr","Rfr","rHar","rhard","rharu","rharul","rho","Rho","rhov","RightAngleBracket","rightarrow","Rightarrow","RightArrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","Ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","rscr","Rscr","rsh","Rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","sacute","Sacute","sbquo","sc","Sc","scap","scaron","Scaron","sccue","sce","scE","scedil","Scedil","scirc","Scirc","scnap","scnE","scnsim","scpolint","scsim","scy","Scy","sdot","sdotb","sdote","searhk","searr","seArr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","Sfr","sfrown","sharp","shchcy","SHCHcy","shcy","SHcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","sigma","Sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","SOFTcy","sol","solb","solbar","sopf","Sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","sscr","Sscr","ssetmn","ssmile","sstarf","star","Star","starf","straightepsilon","straightphi","strns","sub","Sub","subdot","sube","subE","subedot","submult","subne","subnE","subplus","subrarr","subset","Subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","sum","Sum","sung","sup","Sup","sup1","sup2","sup3","supdot","supdsub","supe","supE","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supne","supnE","supplus","supset","Supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swarr","swArr","swarrow","swnwar","szlig","Tab","target","tau","Tau","tbrk","tcaron","Tcaron","tcedil","Tcedil","tcy","Tcy","tdot","telrec","tfr","Tfr","there4","therefore","Therefore","theta","Theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","thorn","THORN","tilde","Tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","Topf","topfork","tosa","tprime","trade","TRADE","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","tscr","Tscr","tscy","TScy","tshcy","TSHcy","tstrok","Tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uacute","Uacute","uarr","uArr","Uarr","Uarrocir","ubrcy","Ubrcy","ubreve","Ubreve","ucirc","Ucirc","ucy","Ucy","udarr","udblac","Udblac","udhar","ufisht","ufr","Ufr","ugrave","Ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","Umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","uogon","Uogon","uopf","Uopf","uparrow","Uparrow","UpArrow","UpArrowBar","UpArrowDownArrow","updownarrow","Updownarrow","UpDownArrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","upsi","Upsi","upsih","upsilon","Upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","uring","Uring","urtri","uscr","Uscr","utdot","utilde","Utilde","utri","utrif","uuarr","uuml","Uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","vArr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vBar","Vbar","vBarv","vcy","Vcy","vdash","vDash","Vdash","VDash","Vdashl","vee","Vee","veebar","veeeq","vellip","verbar","Verbar","vert","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","vfr","Vfr","vltri","vnsub","vnsup","vopf","Vopf","vprop","vrtri","vscr","Vscr","vsubne","vsubnE","vsupne","vsupnE","Vvdash","vzigzag","wcirc","Wcirc","wedbar","wedge","Wedge","wedgeq","weierp","wfr","Wfr","wopf","Wopf","wp","wr","wreath","wscr","Wscr","xcap","xcirc","xcup","xdtri","xfr","Xfr","xharr","xhArr","xi","Xi","xlarr","xlArr","xmap","xnis","xodot","xopf","Xopf","xoplus","xotime","xrarr","xrArr","xscr","Xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","Yacute","yacy","YAcy","ycirc","Ycirc","ycy","Ycy","yen","yfr","Yfr","yicy","YIcy","yopf","Yopf","yscr","Yscr","yucy","YUcy","yuml","Yuml","zacute","Zacute","zcaron","Zcaron","zcy","Zcy","zdot","Zdot","zeetrf","ZeroWidthSpace","zeta","Zeta","zfr","Zfr","zhcy","ZHcy","zigrarr","zopf","Zopf","zscr","Zscr","zwj","zwnj","decodeMapLegacy","decodeMapNumeric","0","128","130","131","132","133","134","135","136","137","138","139","140","142","145","146","147","148","149","150","151","152","153","154","155","156","158","159","invalidReferenceCodePoints","stringFromCharCode","fromCharCode","has","object","propertyName","merge","defaults","codePointToSymbol","codePoint","strict","parseError","contains","hexEscape","decEscape","message","encode","encodeEverything","useNamedReferences","allowUnsafeSymbols","escapeCodePoint","decimal","escapeBmpSymbol","symbol","charCodeAt","$0","high","low","decode","$1","$2","$3","$4","$5","$6","$7","$8","semicolon","decDigits","hexDigits","reference","isAttributeValue","parseInt","he","escape","unescape","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","element","each","opt","$ns","$element","$editable","attrKeys","attrValues","$options","extend","markdown","$oldContent","$isPreview","$isFullscreen","$editor","$textarea","$handler","$callback","$nextTab","showEditor","__alterButtons","alter","handler","isAll","that","v","find","__buildButtons","buttonsArray","container","ns","callback","y","btnGroups","z","buttons","btnGroupContainer","class","buttonContainer","buttonIconContainer","button","buttonHandler","buttonIcon","__getIcon","icon","btnText","btnClass","tabIndex","hotkey","hotkeyCaption","jQuery","hotkeys","__localize","addClass","removeClass","tabindex","data-provider","data-handler","data-hotkey","toggle","prependTo","append","__setListener","hasRows","maxRows","rowsVal","resize","css","focus","proxy","keyup","change","select","eventSupported","keydown","keypress","__handle","currentTarget","handlerName","callbackIndex","callbackHandler","preventDefault","messages","iconlibrary","setFullscreen","mode","onFullscreen","hidePreview","showPreview","textarea","instance","editable","editor","click","editorHeader","allBtnGroups","additionalButtons","buttonGroup","matchingGroups","grep","allButtonGroup","allIdx","reorderButtonGroups","btnGroup","sort","fullscreen","enable","icons","fullscreenOn","is","rawContent","currentContent","replaceWith","editorFooter","createFooter","footer","savable","onSave","width","isNumeric","height","max","outerHeight","getTime","disableButtons","$button","bind","trigger","initialstate","show","autofocus","fullscreenOff","hideButtons","hiddenButtons","disabledButtons","onShow","parseContent","parser","marked","callbackContent","afterContainer","replacementContainer","enableButtons","onPreview","insertBefore","outerWidth","hide","isDirty","setContent","findSelection","chunk","startChunkPosition","selection","oldSelection","getSelection","setSelection","start","end","selectionEnd","selectionStart","replaceSelection","getNextTab","nextTab","tab","setNextTab","__parseButtonNameParam","names","removeAttr","showButtons","eventName","isSupported","setAttribute","blocked","keyCode","cursor","stopPropagation","onChange","onSelect","hideable","attachedMarkdown","blur","onFocus","isHideable","hasClass","oldElement","onBlur","old","option","$this","glyph","fa","fa-3","selected","pointer","prevChar","prompt","urlRegex","sanitizedLink","isPreview","Constructor","noConflict","initMarkdown","$activeElement","activeElement","focused","closest","blurNonFocused","ready"],"mappings":"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ACAC,SAAA,MACAC,SAAA,SACAC,SAAA,QACAC,SAAA,SACAC,SAAA,QACAC,SAAA,SACAC,SAAA,SACAC,SAAA,QACAC,SAAA,SACAC,SAAA,SACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,SACAC,eAAA,UACAC,SAAA,QACAC,SAAA,SACAC,eAAA,UACAC,SAAA,SACAC,SAAA,OACAC,SAAA,QACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,UACAC,SAAA,QACAC,SAAA,QACAC,SAAA,MACAC,SAAA,OACAC,SAAA,OACAC,SAAA,OACAC,SAAA,OACAC,SAAA,OACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,MACAC,SAAA,MACAC,SAAA,MACAC,SAAA,MACAC,SAAA,OACAC,SAAA,OACAC,SAAA,QACAC,SAAA,QACAC,SAAA,KACAC,eAAA,MACAC,SAAA,KACAC,eAAA,MACAC,eAAA,OACAC,SAAA,MACAC,SAAA,MACAC,eAAA,OACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,SACAC,SAAA,QACAC,SAAA,UACAC,eAAA,WACAC,SAAA,UACAC,SAAA,UACAC,SAAA,QACAC,eAAA,SACAC,SAAA,OACAC,SAAA,OACAC,SAAA,MACAC,SAAA,UACAC,SAAA,UACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,OACAC,SAAA,WACAC,SAAA,WACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,QACAC,SAAA,QACAC,SAAA,SACAC,SAAA,WACAC,SAAA,SACAC,SAAA,QACAC,SAAA,SACAC,SAAA,UACAC,SAAA,SA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SAAA,SACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,SAAA,KACAC,eAAA,OACAC,SAAA,OACAC,SAAA,KACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,OAAA,QACAC,OAAA,QACAC,OAAA,OACAC,OAAA,OACAC,SAAA,SACAC,SAAA,SACAC,SAAA,OACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,eAAA,OACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,eAAA,OACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,eAAA,OACAC,eAAA,MACAC,SAAA,SACAC,SAAA,SACAC,eAAA,MACAC,eAAA,OACAC,SAAA,MACAC,eAAA,OACAC,SAAA,OACAC,eAAA,MACAC,eAAA,OACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,eAAA,MACAC,eAAA,OACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,SAAA,OACAC,eAAA,MACAC,eAAA,OACAC,eAAA,OACAC,SAAA,OACAC,eAAA,OACAC,eAAA,MACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,MACAC,SAAA,MACAC,eAAA,OACAC,eAAA,MACAC,SAAA,OACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,OAAA,OACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,OAAA,QACAC,OAAA,QACAC,OAAA,OACAC,OAAA,OACAC,SAAA,SACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,eAAA,MACAC,eAAA,OACAC,eAAA,OACAC,SAAA,OACAC,eAAA,MACAC,eAAA,OACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,eAAA,OACAC,eAAA,MACAC,SAAA,OACAC,SAAA,SACAC,eAAA,MACAC,eAAA,OACAC,eAAA,OACAC,SAAA,OACAC,SAAA,KACAC,SAAA,OACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,eAAA,OACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,SAAA,KACAC,SAAA,SACAC,SAAA,SACAC,SAAA,QACAC,SAAA,QACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,OAAA,QACAC,eAAA,MACAC,eAAA,OACAC,eAAA,OACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,QACAC,SAAA,SACAC,SAAA,SACAC,eAAA,OACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,SAAA,SACAC,SAAA,SACAC,OAAA,QACAC,OAAA,QACAC,SAAA,QACAC,SAAA,QACAC,OAAA,OACAC,OAAA,OACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,eAAA,MACAC,eAAA,OACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,eAAA,OACAC,eAAA,OACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,eAAA,OACAC,eAAA,MACAC,SAAA,QACAC,SAAA,QACAC,eAAA,MACAC,eAAA,OACAC,eAAA,OACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,eAAA,OACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,OAAA,SACAC,OAAA,SACAC,SAAA,QACAC,SAAA,QACAC,OAAA,OACAC,SAAA,OACAC,eAAA,OACAC,eAAA,MACAC,eAAA,OACAC,SAAA,MACAC,SAAA,OACAC,eAAA,OACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,OACAC,SAAA,OACAC,SAAA,QACAC,OAAA,QACAC,OAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,OACAC,SAAA,OACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,QACAC,SAAA,OACAC,SAAA,QACAC,SAAA,UACAC,SAAA,SACAC,SAAA,SACAC,SAAA,OACAC,SAAA,OACAC,SAAA,MACAC,SAAA,MACAC,SAAA,QACAC,SAAA,SACAC,SAAA,QACAC,SAAA,OACAC,SAAA,OACAC,SAAA,QACAC,SAAA,SACAC,SAAA,QACAC,SAAA,SACAC,SAAA,SACAC,SAAA,KACAC,OAAA,QACAC,SAAA,KACAC,SAAA,KACAC,SAAA,KACAC,SAAA,KACAC,SAAA,KACAC,SAAA,UACAC,SAAA,UACAC,SAAA,KACAC,SAAA,MACAC,SAAA,KACAC,SAAA,MACAC,SAAA,OACAC,SAAA,MACAC,SAAA,QACAC,SAAA,QACAC,SAAA,SACAC,SAAA,MACAC,SAAA,MACAC,SAAA,OACAC,SAAA,UACAC,SAAA,OACAC,SAAA,MACAC,SAAA,OACAC,SAAA,MACAC,SAAA,MACAC,SAAA,MACAC,SAAA,MACAC,SAAA,MACAC,SAAA,QACAC,SAAA,MACAC,SAAA,MACAC,SAAA,MACAC,SAAA,MACAC,SAAA,MACAC,SAAA,MACAC,SAAA,MACAC,SAAA,MACAC,SAAA,MACAC,SAAA,OACAC,SAAA,OACAC,SAAA,MACAC,SAAA,MACAC,SAAA,OACAC,SAAA,OACAC,SAAA,OACAC,SAAA,OACAC,SAAA,OACAC,SAAA,OACAC,SAAA,QACAC,SAAA,QACAC,SAAA,OACAC,SAAA,OACAC,SAAA,MACAC,SAAA,MACAC,SAAA,OACAC,SAAA,OACAC,SAAA,MACAC,SAAA,MACAC,SAAA,QACAC,SAAA,QACAC,SAAA,OACAC,SAAA,OACAC,SAA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","file":"static/js/78.d2caae2b.chunk.js","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.toMarkdown = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw f.code = \"MODULE_NOT_FOUND\", f;\n        }\n\n        var l = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }\n\n      return n[o].exports;\n    }\n\n    var i = typeof require == \"function\" && require;\n\n    for (var o = 0; o < r.length; o++) {\n      s(r[o]);\n    }\n\n    return s;\n  }({\n    1: [function (require, module, exports) {\n      /*\n       * to-markdown - an HTML to Markdown converter\n       *\n       * Copyright 2011+, Dom Christie\n       * Licenced under the MIT licence\n       *\n       */\n      'use strict';\n\n      var toMarkdown;\n      var converters;\n\n      var mdConverters = require('./lib/md-converters');\n\n      var gfmConverters = require('./lib/gfm-converters');\n\n      var HtmlParser = require('./lib/html-parser');\n\n      var collapse = require('collapse-whitespace');\n      /*\n       * Utilities\n       */\n\n\n      var blocks = ['address', 'article', 'aside', 'audio', 'blockquote', 'body', 'canvas', 'center', 'dd', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'html', 'isindex', 'li', 'main', 'menu', 'nav', 'noframes', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul'];\n\n      function isBlock(node) {\n        return blocks.indexOf(node.nodeName.toLowerCase()) !== -1;\n      }\n\n      var voids = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n\n      function isVoid(node) {\n        return voids.indexOf(node.nodeName.toLowerCase()) !== -1;\n      }\n\n      function htmlToDom(string) {\n        var tree = new HtmlParser().parseFromString(string, 'text/html');\n        collapse(tree.documentElement, isBlock);\n        return tree;\n      }\n      /*\n       * Flattens DOM tree into single array\n       */\n\n\n      function bfsOrder(node) {\n        var inqueue = [node];\n        var outqueue = [];\n        var elem;\n        var children;\n        var i;\n\n        while (inqueue.length > 0) {\n          elem = inqueue.shift();\n          outqueue.push(elem);\n          children = elem.childNodes;\n\n          for (i = 0; i < children.length; i++) {\n            if (children[i].nodeType === 1) inqueue.push(children[i]);\n          }\n        }\n\n        outqueue.shift();\n        return outqueue;\n      }\n      /*\n       * Contructs a Markdown string of replacement text for a given node\n       */\n\n\n      function getContent(node) {\n        var text = '';\n\n        for (var i = 0; i < node.childNodes.length; i++) {\n          if (node.childNodes[i].nodeType === 1) {\n            text += node.childNodes[i]._replacement;\n          } else if (node.childNodes[i].nodeType === 3) {\n            text += node.childNodes[i].data;\n          } else continue;\n        }\n\n        return text;\n      }\n      /*\n       * Returns the HTML string of an element with its contents converted\n       */\n\n\n      function outer(node, content) {\n        return node.cloneNode(false).outerHTML.replace('><', '>' + content + '<');\n      }\n\n      function canConvert(node, filter) {\n        if (typeof filter === 'string') {\n          return filter === node.nodeName.toLowerCase();\n        }\n\n        if (Array.isArray(filter)) {\n          return filter.indexOf(node.nodeName.toLowerCase()) !== -1;\n        } else if (typeof filter === 'function') {\n          return filter.call(toMarkdown, node);\n        } else {\n          throw new TypeError('`filter` needs to be a string, array, or function');\n        }\n      }\n\n      function isFlankedByWhitespace(side, node) {\n        var sibling;\n        var regExp;\n        var isFlanked;\n\n        if (side === 'left') {\n          sibling = node.previousSibling;\n          regExp = / $/;\n        } else {\n          sibling = node.nextSibling;\n          regExp = /^ /;\n        }\n\n        if (sibling) {\n          if (sibling.nodeType === 3) {\n            isFlanked = regExp.test(sibling.nodeValue);\n          } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n            isFlanked = regExp.test(sibling.textContent);\n          }\n        }\n\n        return isFlanked;\n      }\n\n      function flankingWhitespace(node, content) {\n        var leading = '';\n        var trailing = '';\n\n        if (!isBlock(node)) {\n          var hasLeading = /^[ \\r\\n\\t]/.test(content);\n          var hasTrailing = /[ \\r\\n\\t]$/.test(content);\n\n          if (hasLeading && !isFlankedByWhitespace('left', node)) {\n            leading = ' ';\n          }\n\n          if (hasTrailing && !isFlankedByWhitespace('right', node)) {\n            trailing = ' ';\n          }\n        }\n\n        return {\n          leading: leading,\n          trailing: trailing\n        };\n      }\n      /*\n       * Finds a Markdown converter, gets the replacement, and sets it on\n       * `_replacement`\n       */\n\n\n      function process(node) {\n        var replacement;\n        var content = getContent(node); // Remove blank nodes\n\n        if (!isVoid(node) && !/A|TH|TD/.test(node.nodeName) && /^\\s*$/i.test(content)) {\n          node._replacement = '';\n          return;\n        }\n\n        for (var i = 0; i < converters.length; i++) {\n          var converter = converters[i];\n\n          if (canConvert(node, converter.filter)) {\n            if (typeof converter.replacement !== 'function') {\n              throw new TypeError('`replacement` needs to be a function that returns a string');\n            }\n\n            var whitespace = flankingWhitespace(node, content);\n\n            if (whitespace.leading || whitespace.trailing) {\n              content = content.trim();\n            }\n\n            replacement = whitespace.leading + converter.replacement.call(toMarkdown, content, node) + whitespace.trailing;\n            break;\n          }\n        }\n\n        node._replacement = replacement;\n      }\n\n      toMarkdown = function toMarkdown(input, options) {\n        options = options || {};\n\n        if (typeof input !== 'string') {\n          throw new TypeError(input + ' is not a string');\n        }\n\n        if (input === '') {\n          return '';\n        } // Escape potential ol triggers\n\n\n        input = input.replace(/(\\d+)\\. /g, '$1\\\\. ');\n        var clone = htmlToDom(input).body;\n        var nodes = bfsOrder(clone);\n        var output;\n        converters = mdConverters.slice(0);\n\n        if (options.gfm) {\n          converters = gfmConverters.concat(converters);\n        }\n\n        if (options.converters) {\n          converters = options.converters.concat(converters);\n        } // Process through nodes in reverse (so deepest child elements are first).\n\n\n        for (var i = nodes.length - 1; i >= 0; i--) {\n          process(nodes[i]);\n        }\n\n        output = getContent(clone);\n        return output.replace(/^[\\t\\r\\n]+|[\\t\\r\\n\\s]+$/g, '').replace(/\\n\\s+\\n/g, '\\n\\n').replace(/\\n{3,}/g, '\\n\\n');\n      };\n\n      toMarkdown.isBlock = isBlock;\n      toMarkdown.isVoid = isVoid;\n      toMarkdown.outer = outer;\n      module.exports = toMarkdown;\n    }, {\n      \"./lib/gfm-converters\": 2,\n      \"./lib/html-parser\": 3,\n      \"./lib/md-converters\": 4,\n      \"collapse-whitespace\": 7\n    }],\n    2: [function (require, module, exports) {\n      'use strict';\n\n      function cell(content, node) {\n        var index = Array.prototype.indexOf.call(node.parentNode.childNodes, node);\n        var prefix = ' ';\n        if (index === 0) prefix = '| ';\n        return prefix + content + ' |';\n      }\n\n      var highlightRegEx = /highlight highlight-(\\S+)/;\n      module.exports = [{\n        filter: 'br',\n        replacement: function replacement() {\n          return '\\n';\n        }\n      }, {\n        filter: ['del', 's', 'strike'],\n        replacement: function replacement(content) {\n          return '~~' + content + '~~';\n        }\n      }, {\n        filter: function filter(node) {\n          return node.type === 'checkbox' && node.parentNode.nodeName === 'LI';\n        },\n        replacement: function replacement(content, node) {\n          return (node.checked ? '[x]' : '[ ]') + ' ';\n        }\n      }, {\n        filter: ['th', 'td'],\n        replacement: function replacement(content, node) {\n          return cell(content, node);\n        }\n      }, {\n        filter: 'tr',\n        replacement: function replacement(content, node) {\n          var borderCells = '';\n          var alignMap = {\n            left: ':--',\n            right: '--:',\n            center: ':-:'\n          };\n\n          if (node.parentNode.nodeName === 'THEAD') {\n            for (var i = 0; i < node.childNodes.length; i++) {\n              var align = node.childNodes[i].attributes.align;\n              var border = '---';\n              if (align) border = alignMap[align.value] || border;\n              borderCells += cell(border, node.childNodes[i]);\n            }\n          }\n\n          return '\\n' + content + (borderCells ? '\\n' + borderCells : '');\n        }\n      }, {\n        filter: 'table',\n        replacement: function replacement(content) {\n          return '\\n\\n' + content + '\\n\\n';\n        }\n      }, {\n        filter: ['thead', 'tbody', 'tfoot'],\n        replacement: function replacement(content) {\n          return content;\n        }\n      }, // Fenced code blocks\n      {\n        filter: function filter(node) {\n          return node.nodeName === 'PRE' && node.firstChild && node.firstChild.nodeName === 'CODE';\n        },\n        replacement: function replacement(content, node) {\n          return '\\n\\n```\\n' + node.firstChild.textContent + '\\n```\\n\\n';\n        }\n      }, // Syntax-highlighted code blocks\n      {\n        filter: function filter(node) {\n          return node.nodeName === 'PRE' && node.parentNode.nodeName === 'DIV' && highlightRegEx.test(node.parentNode.className);\n        },\n        replacement: function replacement(content, node) {\n          var language = node.parentNode.className.match(highlightRegEx)[1];\n          return '\\n\\n```' + language + '\\n' + node.textContent + '\\n```\\n\\n';\n        }\n      }, {\n        filter: function filter(node) {\n          return node.nodeName === 'DIV' && highlightRegEx.test(node.className);\n        },\n        replacement: function replacement(content) {\n          return '\\n\\n' + content + '\\n\\n';\n        }\n      }];\n    }, {}],\n    3: [function (require, module, exports) {\n      /*\n       * Set up window for Node.js\n       */\n      var _window = typeof window !== 'undefined' ? window : this;\n      /*\n       * Parsing HTML strings\n       */\n\n\n      function canParseHtmlNatively() {\n        var Parser = _window.DOMParser;\n        var canParse = false; // Adapted from https://gist.github.com/1129031\n        // Firefox/Opera/IE throw errors on unsupported types\n\n        try {\n          // WebKit returns null on unsupported types\n          if (new Parser().parseFromString('', 'text/html')) {\n            canParse = true;\n          }\n        } catch (e) {}\n\n        return canParse;\n      }\n\n      function createHtmlParser() {\n        var Parser = function Parser() {}; // For Node.js environments\n\n\n        if (typeof document === 'undefined') {\n          var jsdom = require('jsdom');\n\n          Parser.prototype.parseFromString = function (string) {\n            return jsdom.jsdom(string, {\n              features: {\n                FetchExternalResources: [],\n                ProcessExternalResources: false\n              }\n            });\n          };\n        } else {\n          if (!shouldUseActiveX()) {\n            Parser.prototype.parseFromString = function (string) {\n              var doc = document.implementation.createHTMLDocument('');\n              doc.open();\n              doc.write(string);\n              doc.close();\n              return doc;\n            };\n          } else {\n            Parser.prototype.parseFromString = function (string) {\n              var doc = new window.ActiveXObject('htmlfile');\n              doc.designMode = 'on'; // disable on-page scripts\n\n              doc.open();\n              doc.write(string);\n              doc.close();\n              return doc;\n            };\n          }\n        }\n\n        return Parser;\n      }\n\n      function shouldUseActiveX() {\n        var useActiveX = false;\n\n        try {\n          document.implementation.createHTMLDocument('').open();\n        } catch (e) {\n          if (window.ActiveXObject) useActiveX = true;\n        }\n\n        return useActiveX;\n      }\n\n      module.exports = canParseHtmlNatively() ? _window.DOMParser : createHtmlParser();\n    }, {\n      \"jsdom\": 6\n    }],\n    4: [function (require, module, exports) {\n      'use strict';\n\n      module.exports = [{\n        filter: 'p',\n        replacement: function replacement(content) {\n          return '\\n\\n' + content + '\\n\\n';\n        }\n      }, {\n        filter: 'br',\n        replacement: function replacement() {\n          return '  \\n';\n        }\n      }, {\n        filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n        replacement: function replacement(content, node) {\n          var hLevel = node.nodeName.charAt(1);\n          var hPrefix = '';\n\n          for (var i = 0; i < hLevel; i++) {\n            hPrefix += '#';\n          }\n\n          return '\\n\\n' + hPrefix + ' ' + content + '\\n\\n';\n        }\n      }, {\n        filter: 'hr',\n        replacement: function replacement() {\n          return '\\n\\n* * *\\n\\n';\n        }\n      }, {\n        filter: ['em', 'i'],\n        replacement: function replacement(content) {\n          return '_' + content + '_';\n        }\n      }, {\n        filter: ['strong', 'b'],\n        replacement: function replacement(content) {\n          return '**' + content + '**';\n        }\n      }, // Inline code\n      {\n        filter: function filter(node) {\n          var hasSiblings = node.previousSibling || node.nextSibling;\n          var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n          return node.nodeName === 'CODE' && !isCodeBlock;\n        },\n        replacement: function replacement(content) {\n          return '`' + content + '`';\n        }\n      }, {\n        filter: function filter(node) {\n          return node.nodeName === 'A' && node.getAttribute('href');\n        },\n        replacement: function replacement(content, node) {\n          var titlePart = node.title ? ' \"' + node.title + '\"' : '';\n          return '[' + content + '](' + node.getAttribute('href') + titlePart + ')';\n        }\n      }, {\n        filter: 'img',\n        replacement: function replacement(content, node) {\n          var alt = node.alt || '';\n          var src = node.getAttribute('src') || '';\n          var title = node.title || '';\n          var titlePart = title ? ' \"' + title + '\"' : '';\n          return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : '';\n        }\n      }, // Code blocks\n      {\n        filter: function filter(node) {\n          return node.nodeName === 'PRE' && node.firstChild.nodeName === 'CODE';\n        },\n        replacement: function replacement(content, node) {\n          return '\\n\\n    ' + node.firstChild.textContent.replace(/\\n/g, '\\n    ') + '\\n\\n';\n        }\n      }, {\n        filter: 'blockquote',\n        replacement: function replacement(content) {\n          content = content.trim();\n          content = content.replace(/\\n{3,}/g, '\\n\\n');\n          content = content.replace(/^/gm, '> ');\n          return '\\n\\n' + content + '\\n\\n';\n        }\n      }, {\n        filter: 'li',\n        replacement: function replacement(content, node) {\n          content = content.replace(/^\\s+/, '').replace(/\\n/gm, '\\n    ');\n          var prefix = '*   ';\n          var parent = node.parentNode;\n          var index = Array.prototype.indexOf.call(parent.children, node) + 1;\n          prefix = /ol/i.test(parent.nodeName) ? index + '.  ' : '*   ';\n          return prefix + content;\n        }\n      }, {\n        filter: ['ul', 'ol'],\n        replacement: function replacement(content, node) {\n          var strings = [];\n\n          for (var i = 0; i < node.childNodes.length; i++) {\n            strings.push(node.childNodes[i]._replacement);\n          }\n\n          if (/li/i.test(node.parentNode.nodeName)) {\n            return '\\n' + strings.join('\\n');\n          }\n\n          return '\\n\\n' + strings.join('\\n') + '\\n\\n';\n        }\n      }, {\n        filter: function filter(node) {\n          return this.isBlock(node);\n        },\n        replacement: function replacement(content, node) {\n          return '\\n\\n' + this.outer(node, content) + '\\n\\n';\n        }\n      }, // Anything else!\n      {\n        filter: function filter() {\n          return true;\n        },\n        replacement: function replacement(content, node) {\n          return this.outer(node, content);\n        }\n      }];\n    }, {}],\n    5: [function (require, module, exports) {\n      /**\n       * This file automatically generated from `build.js`.\n       * Do not manually edit.\n       */\n      module.exports = [\"address\", \"article\", \"aside\", \"audio\", \"blockquote\", \"canvas\", \"dd\", \"div\", \"dl\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"header\", \"hgroup\", \"hr\", \"main\", \"nav\", \"noscript\", \"ol\", \"output\", \"p\", \"pre\", \"section\", \"table\", \"tfoot\", \"ul\", \"video\"];\n    }, {}],\n    6: [function (require, module, exports) {}, {}],\n    7: [function (require, module, exports) {\n      'use strict';\n\n      var voidElements = require('void-elements');\n\n      Object.keys(voidElements).forEach(function (name) {\n        voidElements[name.toUpperCase()] = 1;\n      });\n      var blockElements = {};\n\n      require('block-elements').forEach(function (name) {\n        blockElements[name.toUpperCase()] = 1;\n      });\n      /**\n       * isBlockElem(node) determines if the given node is a block element.\n       *\n       * @param {Node} node\n       * @return {Boolean}\n       */\n\n\n      function isBlockElem(node) {\n        return !!(node && blockElements[node.nodeName]);\n      }\n      /**\n       * isVoid(node) determines if the given node is a void element.\n       *\n       * @param {Node} node\n       * @return {Boolean}\n       */\n\n\n      function isVoid(node) {\n        return !!(node && voidElements[node.nodeName]);\n      }\n      /**\n       * whitespace(elem [, isBlock]) removes extraneous whitespace from an\n       * the given element. The function isBlock may optionally be passed in\n       * to determine whether or not an element is a block element; if none\n       * is provided, defaults to using the list of block elements provided\n       * by the `block-elements` module.\n       *\n       * @param {Node} elem\n       * @param {Function} blockTest\n       */\n\n\n      function collapseWhitespace(elem, isBlock) {\n        if (!elem.firstChild || elem.nodeName === 'PRE') return;\n\n        if (typeof isBlock !== 'function') {\n          isBlock = isBlockElem;\n        }\n\n        var prevText = null;\n        var prevVoid = false;\n        var prev = null;\n        var node = next(prev, elem);\n\n        while (node !== elem) {\n          if (node.nodeType === 3) {\n            // Node.TEXT_NODE\n            var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n            if ((!prevText || / $/.test(prevText.data)) && !prevVoid && text[0] === ' ') {\n              text = text.substr(1);\n            } // `text` might be empty at this point.\n\n\n            if (!text) {\n              node = remove(node);\n              continue;\n            }\n\n            node.data = text;\n            prevText = node;\n          } else if (node.nodeType === 1) {\n            // Node.ELEMENT_NODE\n            if (isBlock(node) || node.nodeName === 'BR') {\n              if (prevText) {\n                prevText.data = prevText.data.replace(/ $/, '');\n              }\n\n              prevText = null;\n              prevVoid = false;\n            } else if (isVoid(node)) {\n              // Avoid trimming space around non-block, non-BR void elements.\n              prevText = null;\n              prevVoid = true;\n            }\n          } else {\n            node = remove(node);\n            continue;\n          }\n\n          var nextNode = next(prev, node);\n          prev = node;\n          node = nextNode;\n        }\n\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n\n          if (!prevText.data) {\n            remove(prevText);\n          }\n        }\n      }\n      /**\n       * remove(node) removes the given node from the DOM and returns the\n       * next node in the sequence.\n       *\n       * @param {Node} node\n       * @return {Node} node\n       */\n\n\n      function remove(node) {\n        var next = node.nextSibling || node.parentNode;\n        node.parentNode.removeChild(node);\n        return next;\n      }\n      /**\n       * next(prev, current) returns the next node in the sequence, given the\n       * current and previous nodes.\n       *\n       * @param {Node} prev\n       * @param {Node} current\n       * @return {Node}\n       */\n\n\n      function next(prev, current) {\n        if (prev && prev.parentNode === current || current.nodeName === 'PRE') {\n          return current.nextSibling || current.parentNode;\n        }\n\n        return current.firstChild || current.nextSibling || current.parentNode;\n      }\n\n      module.exports = collapseWhitespace;\n    }, {\n      \"block-elements\": 5,\n      \"void-elements\": 8\n    }],\n    8: [function (require, module, exports) {\n      /**\n       * This file automatically generated from `pre-publish.js`.\n       * Do not manually edit.\n       */\n      module.exports = {\n        \"area\": true,\n        \"base\": true,\n        \"br\": true,\n        \"col\": true,\n        \"embed\": true,\n        \"hr\": true,\n        \"img\": true,\n        \"input\": true,\n        \"keygen\": true,\n        \"link\": true,\n        \"menuitem\": true,\n        \"meta\": true,\n        \"param\": true,\n        \"source\": true,\n        \"track\": true,\n        \"wbr\": true\n      };\n    }, {}]\n  }, {}, [1])(1);\n});","// Released under MIT license\n// Copyright (c) 2009-2010 Dominic Baggott\n// Copyright (c) 2009-2010 Ash Berlin\n// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)\n\n/*jshint browser:true, devel:true */\n(function (expose) {\n  /**\n   *  class Markdown\n   *\n   *  Markdown processing in Javascript done right. We have very particular views\n   *  on what constitutes 'right' which include:\n   *\n   *  - produces well-formed HTML (this means that em and strong nesting is\n   *    important)\n   *\n   *  - has an intermediate representation to allow processing of parsed data (We\n   *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).\n   *\n   *  - is easily extensible to add new dialects without having to rewrite the\n   *    entire parsing mechanics\n   *\n   *  - has a good test suite\n   *\n   *  This implementation fulfills all of these (except that the test suite could\n   *  do with expanding to automatically run all the fixtures from other Markdown\n   *  implementations.)\n   *\n   *  ##### Intermediate Representation\n   *\n   *  *TODO* Talk about this :) Its JsonML, but document the node names we use.\n   *\n   *  [JsonML]: http://jsonml.org/ \"JSON Markup Language\"\n   **/\n  var Markdown = expose.Markdown = function (dialect) {\n    switch (typeof dialect) {\n      case \"undefined\":\n        this.dialect = Markdown.dialects.Gruber;\n        break;\n\n      case \"object\":\n        this.dialect = dialect;\n        break;\n\n      default:\n        if (dialect in Markdown.dialects) {\n          this.dialect = Markdown.dialects[dialect];\n        } else {\n          throw new Error(\"Unknown Markdown dialect '\" + String(dialect) + \"'\");\n        }\n\n        break;\n    }\n\n    this.em_state = [];\n    this.strong_state = [];\n    this.debug_indent = \"\";\n  };\n  /**\n   *  parse( markdown, [dialect] ) -> JsonML\n   *  - markdown (String): markdown string to parse\n   *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n   *\n   *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.\n   **/\n\n\n  expose.parse = function (source, dialect) {\n    // dialect will default if undefined\n    var md = new Markdown(dialect);\n    return md.toTree(source);\n  };\n  /**\n   *  toHTML( markdown, [dialect]  ) -> String\n   *  toHTML( md_tree ) -> String\n   *  - markdown (String): markdown string to parse\n   *  - md_tree (Markdown.JsonML): parsed markdown tree\n   *\n   *  Take markdown (either as a string or as a JsonML tree) and run it through\n   *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.\n   **/\n\n\n  expose.toHTML = function toHTML(source, dialect, options) {\n    var input = expose.toHTMLTree(source, dialect, options);\n    return expose.renderJsonML(input);\n  };\n  /**\n   *  toHTMLTree( markdown, [dialect] ) -> JsonML\n   *  toHTMLTree( md_tree ) -> JsonML\n   *  - markdown (String): markdown string to parse\n   *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n   *  - md_tree (Markdown.JsonML): parsed markdown tree\n   *\n   *  Turn markdown into HTML, represented as a JsonML tree. If a string is given\n   *  to this function, it is first parsed into a markdown tree by calling\n   *  [[parse]].\n   **/\n\n\n  expose.toHTMLTree = function toHTMLTree(input, dialect, options) {\n    // convert string input to an MD tree\n    if (typeof input === \"string\") input = this.parse(input, dialect); // Now convert the MD tree to an HTML tree\n    // remove references from the tree\n\n    var attrs = extract_attr(input),\n        refs = {};\n\n    if (attrs && attrs.references) {\n      refs = attrs.references;\n    }\n\n    var html = convert_tree_to_html(input, refs, options);\n    merge_text_nodes(html);\n    return html;\n  }; // For Spidermonkey based engines\n\n\n  function mk_block_toSource() {\n    return \"Markdown.mk_block( \" + uneval(this.toString()) + \", \" + uneval(this.trailing) + \", \" + uneval(this.lineNumber) + \" )\";\n  } // node\n\n\n  function mk_block_inspect() {\n    var util = require(\"util\");\n\n    return \"Markdown.mk_block( \" + util.inspect(this.toString()) + \", \" + util.inspect(this.trailing) + \", \" + util.inspect(this.lineNumber) + \" )\";\n  }\n\n  var mk_block = Markdown.mk_block = function (block, trail, line) {\n    // Be helpful for default case in tests.\n    if (arguments.length == 1) trail = \"\\n\\n\";\n    var s = new String(block);\n    s.trailing = trail; // To make it clear its not just a string\n\n    s.inspect = mk_block_inspect;\n    s.toSource = mk_block_toSource;\n    if (line != undefined) s.lineNumber = line;\n    return s;\n  };\n\n  function count_lines(str) {\n    var n = 0,\n        i = -1;\n\n    while ((i = str.indexOf(\"\\n\", i + 1)) !== -1) {\n      n++;\n    }\n\n    return n;\n  } // Internal - split source into rough blocks\n\n\n  Markdown.prototype.split_blocks = function splitBlocks(input, startLine) {\n    input = input.replace(/(\\r\\n|\\n|\\r)/g, \"\\n\"); // [\\s\\S] matches _anything_ (newline or space)\n    // [^] is equivalent but doesn't work in IEs.\n\n    var re = /([\\s\\S]+?)($|\\n#|\\n(?:\\s*\\n|$)+)/g,\n        blocks = [],\n        m;\n    var line_no = 1;\n\n    if ((m = /^(\\s*\\n)/.exec(input)) != null) {\n      // skip (but count) leading blank lines\n      line_no += count_lines(m[0]);\n      re.lastIndex = m[0].length;\n    }\n\n    while ((m = re.exec(input)) !== null) {\n      if (m[2] == \"\\n#\") {\n        m[2] = \"\\n\";\n        re.lastIndex--;\n      }\n\n      blocks.push(mk_block(m[1], m[2], line_no));\n      line_no += count_lines(m[0]);\n    }\n\n    return blocks;\n  };\n  /**\n   *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]\n   *  - block (String): the block to process\n   *  - next (Array): the following blocks\n   *\n   * Process `block` and return an array of JsonML nodes representing `block`.\n   *\n   * It does this by asking each block level function in the dialect to process\n   * the block until one can. Succesful handling is indicated by returning an\n   * array (with zero or more JsonML nodes), failure by a false value.\n   *\n   * Blocks handlers are responsible for calling [[Markdown#processInline]]\n   * themselves as appropriate.\n   *\n   * If the blocks were split incorrectly or adjacent blocks need collapsing you\n   * can adjust `next` in place using shift/splice etc.\n   *\n   * If any of this default behaviour is not right for the dialect, you can\n   * define a `__call__` method on the dialect that will get invoked to handle\n   * the block processing.\n   */\n\n\n  Markdown.prototype.processBlock = function processBlock(block, next) {\n    var cbs = this.dialect.block,\n        ord = cbs.__order__;\n\n    if (\"__call__\" in cbs) {\n      return cbs.__call__.call(this, block, next);\n    }\n\n    for (var i = 0; i < ord.length; i++) {\n      //D:this.debug( \"Testing\", ord[i] );\n      var res = cbs[ord[i]].call(this, block, next);\n\n      if (res) {\n        //D:this.debug(\"  matched\");\n        if (!isArray(res) || res.length > 0 && !isArray(res[0])) this.debug(ord[i], \"didn't return a proper array\"); //D:this.debug( \"\" );\n\n        return res;\n      }\n    } // Uhoh! no match! Should we throw an error?\n\n\n    return [];\n  };\n\n  Markdown.prototype.processInline = function processInline(block) {\n    return this.dialect.inline.__call__.call(this, String(block));\n  };\n  /**\n   *  Markdown#toTree( source ) -> JsonML\n   *  - source (String): markdown source to parse\n   *\n   *  Parse `source` into a JsonML tree representing the markdown document.\n   **/\n  // custom_tree means set this.tree to `custom_tree` and restore old value on return\n\n\n  Markdown.prototype.toTree = function toTree(source, custom_root) {\n    var blocks = source instanceof Array ? source : this.split_blocks(source); // Make tree a member variable so its easier to mess with in extensions\n\n    var old_tree = this.tree;\n\n    try {\n      this.tree = custom_root || this.tree || [\"markdown\"];\n\n      blocks: while (blocks.length) {\n        var b = this.processBlock(blocks.shift(), blocks); // Reference blocks and the like won't return any content\n\n        if (!b.length) continue blocks;\n        this.tree.push.apply(this.tree, b);\n      }\n\n      return this.tree;\n    } finally {\n      if (custom_root) {\n        this.tree = old_tree;\n      }\n    }\n  }; // Noop by default\n\n\n  Markdown.prototype.debug = function () {\n    var args = Array.prototype.slice.call(arguments);\n    args.unshift(this.debug_indent);\n    if (typeof print !== \"undefined\") print.apply(print, args);\n    if (typeof console !== \"undefined\" && typeof console.log !== \"undefined\") console.log.apply(null, args);\n  };\n\n  Markdown.prototype.loop_re_over_block = function (re, block, cb) {\n    // Dont use /g regexps with this\n    var m,\n        b = block.valueOf();\n\n    while (b.length && (m = re.exec(b)) != null) {\n      b = b.substr(m[0].length);\n      cb.call(this, m);\n    }\n\n    return b;\n  };\n  /**\n   * Markdown.dialects\n   *\n   * Namespace of built-in dialects.\n   **/\n\n\n  Markdown.dialects = {};\n  /**\n   * Markdown.dialects.Gruber\n   *\n   * The default dialect that follows the rules set out by John Gruber's\n   * markdown.pl as closely as possible. Well actually we follow the behaviour of\n   * that script which in some places is not exactly what the syntax web page\n   * says.\n   **/\n\n  Markdown.dialects.Gruber = {\n    block: {\n      atxHeader: function atxHeader(block, next) {\n        var m = block.match(/^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/);\n        if (!m) return undefined;\n        var header = [\"header\", {\n          level: m[1].length\n        }];\n        Array.prototype.push.apply(header, this.processInline(m[2]));\n        if (m[0].length < block.length) next.unshift(mk_block(block.substr(m[0].length), block.trailing, block.lineNumber + 2));\n        return [header];\n      },\n      setextHeader: function setextHeader(block, next) {\n        var m = block.match(/^(.*)\\n([-=])\\2\\2+(?:\\n|$)/);\n        if (!m) return undefined;\n        var level = m[2] === \"=\" ? 1 : 2;\n        var header = [\"header\", {\n          level: level\n        }, m[1]];\n        if (m[0].length < block.length) next.unshift(mk_block(block.substr(m[0].length), block.trailing, block.lineNumber + 2));\n        return [header];\n      },\n      code: function code(block, next) {\n        // |    Foo\n        // |bar\n        // should be a code block followed by a paragraph. Fun\n        //\n        // There might also be adjacent code block to merge.\n        var ret = [],\n            re = /^(?: {0,3}\\t| {4})(.*)\\n?/,\n            lines; // 4 spaces + content\n\n        if (!block.match(re)) return undefined;\n\n        block_search: do {\n          // Now pull out the rest of the lines\n          var b = this.loop_re_over_block(re, block.valueOf(), function (m) {\n            ret.push(m[1]);\n          });\n\n          if (b.length) {\n            // Case alluded to in first comment. push it back on as a new block\n            next.unshift(mk_block(b, block.trailing));\n            break block_search;\n          } else if (next.length) {\n            // Check the next block - it might be code too\n            if (!next[0].match(re)) break block_search; // Pull how how many blanks lines follow - minus two to account for .join\n\n            ret.push(block.trailing.replace(/[^\\n]/g, \"\").substring(2));\n            block = next.shift();\n          } else {\n            break block_search;\n          }\n        } while (true);\n\n        return [[\"code_block\", ret.join(\"\\n\")]];\n      },\n      horizRule: function horizRule(block, next) {\n        // this needs to find any hr in the block to handle abutting blocks\n        var m = block.match(/^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/);\n\n        if (!m) {\n          return undefined;\n        }\n\n        var jsonml = [[\"hr\"]]; // if there's a leading abutting block, process it\n\n        if (m[1]) {\n          jsonml.unshift.apply(jsonml, this.processBlock(m[1], []));\n        } // if there's a trailing abutting block, stick it into next\n\n\n        if (m[3]) {\n          next.unshift(mk_block(m[3]));\n        }\n\n        return jsonml;\n      },\n      // There are two types of lists. Tight and loose. Tight lists have no whitespace\n      // between the items (and result in text just in the <li>) and loose lists,\n      // which have an empty line between list items, resulting in (one or more)\n      // paragraphs inside the <li>.\n      //\n      // There are all sorts weird edge cases about the original markdown.pl's\n      // handling of lists:\n      //\n      // * Nested lists are supposed to be indented by four chars per level. But\n      //   if they aren't, you can get a nested list by indenting by less than\n      //   four so long as the indent doesn't match an indent of an existing list\n      //   item in the 'nest stack'.\n      //\n      // * The type of the list (bullet or number) is controlled just by the\n      //    first item at the indent. Subsequent changes are ignored unless they\n      //    are for nested lists\n      //\n      lists: function () {\n        // Use a closure to hide a few variables.\n        var any_list = \"[*+-]|\\\\d+\\\\.\",\n            bullet_list = /[*+-]/,\n            number_list = /\\d+\\./,\n            // Capture leading indent as it matters for determining nested lists.\n        is_list_re = new RegExp(\"^( {0,3})(\" + any_list + \")[ \\t]+\"),\n            indent_re = \"(?: {0,3}\\\\t| {4})\"; // TODO: Cache this regexp for certain depths.\n        // Create a regexp suitable for matching an li for a given stack depth\n\n        function regex_for_depth(depth) {\n          return new RegExp( // m[1] = indent, m[2] = list_type\n          \"(?:^(\" + indent_re + \"{0,\" + depth + \"} {0,3})(\" + any_list + \")\\\\s+)|\" + // m[3] = cont\n          \"(^\" + indent_re + \"{0,\" + (depth - 1) + \"}[ ]{0,4})\");\n        }\n\n        function expand_tab(input) {\n          return input.replace(/ {0,3}\\t/g, \"    \");\n        } // Add inline content `inline` to `li`. inline comes from processInline\n        // so is an array of content\n\n\n        function add(li, loose, inline, nl) {\n          if (loose) {\n            li.push([\"para\"].concat(inline));\n            return;\n          } // Hmmm, should this be any block level element or just paras?\n\n\n          var add_to = li[li.length - 1] instanceof Array && li[li.length - 1][0] == \"para\" ? li[li.length - 1] : li; // If there is already some content in this list, add the new line in\n\n          if (nl && li.length > 1) inline.unshift(nl);\n\n          for (var i = 0; i < inline.length; i++) {\n            var what = inline[i],\n                is_str = typeof what == \"string\";\n\n            if (is_str && add_to.length > 1 && typeof add_to[add_to.length - 1] == \"string\") {\n              add_to[add_to.length - 1] += what;\n            } else {\n              add_to.push(what);\n            }\n          }\n        } // contained means have an indent greater than the current one. On\n        // *every* line in the block\n\n\n        function get_contained_blocks(depth, blocks) {\n          var re = new RegExp(\"^(\" + indent_re + \"{\" + depth + \"}.*?\\\\n?)*$\"),\n              replace = new RegExp(\"^\" + indent_re + \"{\" + depth + \"}\", \"gm\"),\n              ret = [];\n\n          while (blocks.length > 0) {\n            if (re.exec(blocks[0])) {\n              var b = blocks.shift(),\n                  // Now remove that indent\n              x = b.replace(replace, \"\");\n              ret.push(mk_block(x, b.trailing, b.lineNumber));\n            } else {\n              break;\n            }\n          }\n\n          return ret;\n        } // passed to stack.forEach to turn list items up the stack into paras\n\n\n        function paragraphify(s, i, stack) {\n          var list = s.list;\n          var last_li = list[list.length - 1];\n\n          if (last_li[1] instanceof Array && last_li[1][0] == \"para\") {\n            return;\n          }\n\n          if (i + 1 == stack.length) {\n            // Last stack frame\n            // Keep the same array, but replace the contents\n            last_li.push([\"para\"].concat(last_li.splice(1, last_li.length - 1)));\n          } else {\n            var sublist = last_li.pop();\n            last_li.push([\"para\"].concat(last_li.splice(1, last_li.length - 1)), sublist);\n          }\n        } // The matcher function\n\n\n        return function (block, next) {\n          var m = block.match(is_list_re);\n          if (!m) return undefined;\n\n          function make_list(m) {\n            var list = bullet_list.exec(m[2]) ? [\"bulletlist\"] : [\"numberlist\"];\n            stack.push({\n              list: list,\n              indent: m[1]\n            });\n            return list;\n          }\n\n          var stack = [],\n              // Stack of lists for nesting.\n          list = make_list(m),\n              last_li,\n              loose = false,\n              ret = [stack[0].list],\n              i; // Loop to search over block looking for inner block elements and loose lists\n\n          loose_search: while (true) {\n            // Split into lines preserving new lines at end of line\n            var lines = block.split(/(?=\\n)/); // We have to grab all lines for a li and call processInline on them\n            // once as there are some inline things that can span lines.\n\n            var li_accumulate = \"\"; // Loop over the lines in this block looking for tight lists.\n\n            tight_search: for (var line_no = 0; line_no < lines.length; line_no++) {\n              var nl = \"\",\n                  l = lines[line_no].replace(/^\\n/, function (n) {\n                nl = n;\n                return \"\";\n              }); // TODO: really should cache this\n\n              var line_re = regex_for_depth(stack.length);\n              m = l.match(line_re); //print( \"line:\", uneval(l), \"\\nline match:\", uneval(m) );\n              // We have a list item\n\n              if (m[1] !== undefined) {\n                // Process the previous list item, if any\n                if (li_accumulate.length) {\n                  add(last_li, loose, this.processInline(li_accumulate), nl); // Loose mode will have been dealt with. Reset it\n\n                  loose = false;\n                  li_accumulate = \"\";\n                }\n\n                m[1] = expand_tab(m[1]);\n                var wanted_depth = Math.floor(m[1].length / 4) + 1; //print( \"want:\", wanted_depth, \"stack:\", stack.length);\n\n                if (wanted_depth > stack.length) {\n                  // Deep enough for a nested list outright\n                  //print ( \"new nested list\" );\n                  list = make_list(m);\n                  last_li.push(list);\n                  last_li = list[1] = [\"listitem\"];\n                } else {\n                  // We aren't deep enough to be strictly a new level. This is\n                  // where Md.pl goes nuts. If the indent matches a level in the\n                  // stack, put it there, else put it one deeper then the\n                  // wanted_depth deserves.\n                  var found = false;\n\n                  for (i = 0; i < stack.length; i++) {\n                    if (stack[i].indent != m[1]) continue;\n                    list = stack[i].list;\n                    stack.splice(i + 1, stack.length - (i + 1));\n                    found = true;\n                    break;\n                  }\n\n                  if (!found) {\n                    //print(\"not found. l:\", uneval(l));\n                    wanted_depth++;\n\n                    if (wanted_depth <= stack.length) {\n                      stack.splice(wanted_depth, stack.length - wanted_depth); //print(\"Desired depth now\", wanted_depth, \"stack:\", stack.length);\n\n                      list = stack[wanted_depth - 1].list; //print(\"list:\", uneval(list) );\n                    } else {\n                      //print (\"made new stack for messy indent\");\n                      list = make_list(m);\n                      last_li.push(list);\n                    }\n                  } //print( uneval(list), \"last\", list === stack[stack.length-1].list );\n\n\n                  last_li = [\"listitem\"];\n                  list.push(last_li);\n                } // end depth of shenegains\n\n\n                nl = \"\";\n              } // Add content\n\n\n              if (l.length > m[0].length) {\n                li_accumulate += nl + l.substr(m[0].length);\n              }\n            } // tight_search\n\n\n            if (li_accumulate.length) {\n              add(last_li, loose, this.processInline(li_accumulate), nl); // Loose mode will have been dealt with. Reset it\n\n              loose = false;\n              li_accumulate = \"\";\n            } // Look at the next block - we might have a loose list. Or an extra\n            // paragraph for the current li\n\n\n            var contained = get_contained_blocks(stack.length, next); // Deal with code blocks or properly nested lists\n\n            if (contained.length > 0) {\n              // Make sure all listitems up the stack are paragraphs\n              forEach(stack, paragraphify, this);\n              last_li.push.apply(last_li, this.toTree(contained, []));\n            }\n\n            var next_block = next[0] && next[0].valueOf() || \"\";\n\n            if (next_block.match(is_list_re) || next_block.match(/^ /)) {\n              block = next.shift(); // Check for an HR following a list: features/lists/hr_abutting\n\n              var hr = this.dialect.block.horizRule(block, next);\n\n              if (hr) {\n                ret.push.apply(ret, hr);\n                break;\n              } // Make sure all listitems up the stack are paragraphs\n\n\n              forEach(stack, paragraphify, this);\n              loose = true;\n              continue loose_search;\n            }\n\n            break;\n          } // loose_search\n\n\n          return ret;\n        };\n      }(),\n      blockquote: function blockquote(block, next) {\n        if (!block.match(/^>/m)) return undefined;\n        var jsonml = []; // separate out the leading abutting block, if any. I.e. in this case:\n        //\n        //  a\n        //  > b\n        //\n\n        if (block[0] != \">\") {\n          var lines = block.split(/\\n/),\n              prev = [],\n              line_no = block.lineNumber; // keep shifting lines until you find a crotchet\n\n          while (lines.length && lines[0][0] != \">\") {\n            prev.push(lines.shift());\n            line_no++;\n          }\n\n          var abutting = mk_block(prev.join(\"\\n\"), \"\\n\", block.lineNumber);\n          jsonml.push.apply(jsonml, this.processBlock(abutting, [])); // reassemble new block of just block quotes!\n\n          block = mk_block(lines.join(\"\\n\"), block.trailing, line_no);\n        } // if the next block is also a blockquote merge it in\n\n\n        while (next.length && next[0][0] == \">\") {\n          var b = next.shift();\n          block = mk_block(block + block.trailing + b, b.trailing, block.lineNumber);\n        } // Strip off the leading \"> \" and re-process as a block.\n\n\n        var input = block.replace(/^> ?/gm, \"\"),\n            old_tree = this.tree,\n            processedBlock = this.toTree(input, [\"blockquote\"]),\n            attr = extract_attr(processedBlock); // If any link references were found get rid of them\n\n        if (attr && attr.references) {\n          delete attr.references; // And then remove the attribute object if it's empty\n\n          if (isEmpty(attr)) {\n            processedBlock.splice(1, 1);\n          }\n        }\n\n        jsonml.push(processedBlock);\n        return jsonml;\n      },\n      referenceDefn: function referenceDefn(block, next) {\n        var re = /^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/; // interesting matches are [ , ref_id, url, , title, title ]\n\n        if (!block.match(re)) return undefined; // make an attribute node if it doesn't exist\n\n        if (!extract_attr(this.tree)) {\n          this.tree.splice(1, 0, {});\n        }\n\n        var attrs = extract_attr(this.tree); // make a references hash if it doesn't exist\n\n        if (attrs.references === undefined) {\n          attrs.references = {};\n        }\n\n        var b = this.loop_re_over_block(re, block, function (m) {\n          if (m[2] && m[2][0] == \"<\" && m[2][m[2].length - 1] == \">\") m[2] = m[2].substring(1, m[2].length - 1);\n          var ref = attrs.references[m[1].toLowerCase()] = {\n            href: m[2]\n          };\n          if (m[4] !== undefined) ref.title = m[4];else if (m[5] !== undefined) ref.title = m[5];\n        });\n        if (b.length) next.unshift(mk_block(b, block.trailing));\n        return [];\n      },\n      para: function para(block, next) {\n        // everything's a para!\n        return [[\"para\"].concat(this.processInline(block))];\n      }\n    }\n  };\n  Markdown.dialects.Gruber.inline = {\n    __oneElement__: function oneElement(text, patterns_or_re, previous_nodes) {\n      var m,\n          res,\n          lastIndex = 0;\n      patterns_or_re = patterns_or_re || this.dialect.inline.__patterns__;\n      var re = new RegExp(\"([\\\\s\\\\S]*?)(\" + (patterns_or_re.source || patterns_or_re) + \")\");\n      m = re.exec(text);\n\n      if (!m) {\n        // Just boring text\n        return [text.length, text];\n      } else if (m[1]) {\n        // Some un-interesting text matched. Return that first\n        return [m[1].length, m[1]];\n      }\n\n      var res;\n\n      if (m[2] in this.dialect.inline) {\n        res = this.dialect.inline[m[2]].call(this, text.substr(m.index), m, previous_nodes || []);\n      } // Default for now to make dev easier. just slurp special and output it.\n\n\n      res = res || [m[2].length, m[2]];\n      return res;\n    },\n    __call__: function inline(text, patterns) {\n      var out = [],\n          res;\n\n      function add(x) {\n        //D:self.debug(\"  adding output\", uneval(x));\n        if (typeof x == \"string\" && typeof out[out.length - 1] == \"string\") out[out.length - 1] += x;else out.push(x);\n      }\n\n      while (text.length > 0) {\n        res = this.dialect.inline.__oneElement__.call(this, text, patterns, out);\n        text = text.substr(res.shift());\n        forEach(res, add);\n      }\n\n      return out;\n    },\n    // These characters are intersting elsewhere, so have rules for them so that\n    // chunks of plain text blocks don't include them\n    \"]\": function _() {},\n    \"}\": function _() {},\n    __escape__: /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/,\n    \"\\\\\": function escaped(text) {\n      // [ length of input processed, node/children to add... ]\n      // Only esacape: \\ ` * _ { } [ ] ( ) # * + - . !\n      if (this.dialect.inline.__escape__.exec(text)) return [2, text.charAt(1)];else // Not an esacpe\n        return [1, \"\\\\\"];\n    },\n    \"![\": function image(text) {\n      // Unlike images, alt text is plain text only. no other elements are\n      // allowed in there\n      // ![Alt text](/path/to/img.jpg \"Optional title\")\n      //      1          2            3       4         <--- captures\n      var m = text.match(/^!\\[(.*?)\\][ \\t]*\\([ \\t]*([^\")]*?)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/);\n\n      if (m) {\n        if (m[2] && m[2][0] == \"<\" && m[2][m[2].length - 1] == \">\") m[2] = m[2].substring(1, m[2].length - 1);\n        m[2] = this.dialect.inline.__call__.call(this, m[2], /\\\\/)[0];\n        var attrs = {\n          alt: m[1],\n          href: m[2] || \"\"\n        };\n        if (m[4] !== undefined) attrs.title = m[4];\n        return [m[0].length, [\"img\", attrs]];\n      } // ![Alt text][id]\n\n\n      m = text.match(/^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/);\n\n      if (m) {\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion\n        return [m[0].length, [\"img_ref\", {\n          alt: m[1],\n          ref: m[2].toLowerCase(),\n          original: m[0]\n        }]];\n      } // Just consume the '!['\n\n\n      return [2, \"![\"];\n    },\n    \"[\": function link(text) {\n      var orig = String(text); // Inline content is possible inside `link text`\n\n      var res = Markdown.DialectHelpers.inline_until_char.call(this, text.substr(1), \"]\"); // No closing ']' found. Just consume the [\n\n      if (!res) return [1, \"[\"];\n      var consumed = 1 + res[0],\n          children = res[1],\n          link,\n          attrs; // At this point the first [...] has been parsed. See what follows to find\n      // out which kind of link we are (reference or direct url)\n\n      text = text.substr(consumed); // [link text](/path/to/img.jpg \"Optional title\")\n      //                 1            2       3         <--- captures\n      // This will capture up to the last paren in the block. We then pull\n      // back based on if there a matching ones in the url\n      //    ([here](/url/(test))\n      // The parens have to be balanced\n\n      var m = text.match(/^\\s*\\([ \\t]*([^\"']*)(?:[ \\t]+([\"'])(.*?)\\2)?[ \\t]*\\)/);\n\n      if (m) {\n        var url = m[1];\n        consumed += m[0].length;\n        if (url && url[0] == \"<\" && url[url.length - 1] == \">\") url = url.substring(1, url.length - 1); // If there is a title we don't have to worry about parens in the url\n\n        if (!m[3]) {\n          var open_parens = 1; // One open that isn't in the capture\n\n          for (var len = 0; len < url.length; len++) {\n            switch (url[len]) {\n              case \"(\":\n                open_parens++;\n                break;\n\n              case \")\":\n                if (--open_parens == 0) {\n                  consumed -= url.length - len;\n                  url = url.substring(0, len);\n                }\n\n                break;\n            }\n          }\n        } // Process escapes only\n\n\n        url = this.dialect.inline.__call__.call(this, url, /\\\\/)[0];\n        attrs = {\n          href: url || \"\"\n        };\n        if (m[3] !== undefined) attrs.title = m[3];\n        link = [\"link\", attrs].concat(children);\n        return [consumed, link];\n      } // [Alt text][id]\n      // [Alt text] [id]\n\n\n      m = text.match(/^\\s*\\[(.*?)\\]/);\n\n      if (m) {\n        consumed += m[0].length; // [links][] uses links as its reference\n\n        attrs = {\n          ref: (m[1] || String(children)).toLowerCase(),\n          original: orig.substr(0, consumed)\n        };\n        link = [\"link_ref\", attrs].concat(children); // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion.\n        // Store the original so that conversion can revert if the ref isn't found.\n\n        return [consumed, link];\n      } // [id]\n      // Only if id is plain (no formatting.)\n\n\n      if (children.length == 1 && typeof children[0] == \"string\") {\n        attrs = {\n          ref: children[0].toLowerCase(),\n          original: orig.substr(0, consumed)\n        };\n        link = [\"link_ref\", attrs, children[0]];\n        return [consumed, link];\n      } // Just consume the \"[\"\n\n\n      return [1, \"[\"];\n    },\n    \"<\": function autoLink(text) {\n      var m;\n\n      if ((m = text.match(/^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/)) != null) {\n        if (m[3]) {\n          return [m[0].length, [\"link\", {\n            href: \"mailto:\" + m[3]\n          }, m[3]]];\n        } else if (m[2] == \"mailto\") {\n          return [m[0].length, [\"link\", {\n            href: m[1]\n          }, m[1].substr(\"mailto:\".length)]];\n        } else return [m[0].length, [\"link\", {\n          href: m[1]\n        }, m[1]]];\n      }\n\n      return [1, \"<\"];\n    },\n    \"`\": function inlineCode(text) {\n      // Inline code block. as many backticks as you like to start it\n      // Always skip over the opening ticks.\n      var m = text.match(/(`+)(([\\s\\S]*?)\\1)/);\n      if (m && m[2]) return [m[1].length + m[2].length, [\"inlinecode\", m[3]]];else {\n        // TODO: No matching end code found - warn!\n        return [1, \"`\"];\n      }\n    },\n    \"  \\n\": function lineBreak(text) {\n      return [3, [\"linebreak\"]];\n    }\n  }; // Meta Helper/generator method for em and strong handling\n\n  function strong_em(tag, md) {\n    var state_slot = tag + \"_state\",\n        other_slot = tag == \"strong\" ? \"em_state\" : \"strong_state\";\n\n    function CloseTag(len) {\n      this.len_after = len;\n      this.name = \"close_\" + md;\n    }\n\n    return function (text, orig_match) {\n      if (this[state_slot][0] == md) {\n        // Most recent em is of this type\n        //D:this.debug(\"closing\", md);\n        this[state_slot].shift(); // \"Consume\" everything to go back to the recrusion in the else-block below\n\n        return [text.length, new CloseTag(text.length - md.length)];\n      } else {\n        // Store a clone of the em/strong states\n        var other = this[other_slot].slice(),\n            state = this[state_slot].slice();\n        this[state_slot].unshift(md); //D:this.debug_indent += \"  \";\n        // Recurse\n\n        var res = this.processInline(text.substr(md.length)); //D:this.debug_indent = this.debug_indent.substr(2);\n\n        var last = res[res.length - 1]; //D:this.debug(\"processInline from\", tag + \": \", uneval( res ) );\n\n        var check = this[state_slot].shift();\n\n        if (last instanceof CloseTag) {\n          res.pop(); // We matched! Huzzah.\n\n          var consumed = text.length - last.len_after;\n          return [consumed, [tag].concat(res)];\n        } else {\n          // Restore the state of the other kind. We might have mistakenly closed it.\n          this[other_slot] = other;\n          this[state_slot] = state; // We can't reuse the processed result as it could have wrong parsing contexts in it.\n\n          return [md.length, md];\n        }\n      }\n    }; // End returned function\n  }\n\n  Markdown.dialects.Gruber.inline[\"**\"] = strong_em(\"strong\", \"**\");\n  Markdown.dialects.Gruber.inline[\"__\"] = strong_em(\"strong\", \"__\");\n  Markdown.dialects.Gruber.inline[\"*\"] = strong_em(\"em\", \"*\");\n  Markdown.dialects.Gruber.inline[\"_\"] = strong_em(\"em\", \"_\"); // Build default order from insertion order.\n\n  Markdown.buildBlockOrder = function (d) {\n    var ord = [];\n\n    for (var i in d) {\n      if (i == \"__order__\" || i == \"__call__\") continue;\n      ord.push(i);\n    }\n\n    d.__order__ = ord;\n  }; // Build patterns for inline matcher\n\n\n  Markdown.buildInlinePatterns = function (d) {\n    var patterns = [];\n\n    for (var i in d) {\n      // __foo__ is reserved and not a pattern\n      if (i.match(/^__.*__$/)) continue;\n      var l = i.replace(/([\\\\.*+?|()\\[\\]{}])/g, \"\\\\$1\").replace(/\\n/, \"\\\\n\");\n      patterns.push(i.length == 1 ? l : \"(?:\" + l + \")\");\n    }\n\n    patterns = patterns.join(\"|\");\n    d.__patterns__ = patterns; //print(\"patterns:\", uneval( patterns ) );\n\n    var fn = d.__call__;\n\n    d.__call__ = function (text, pattern) {\n      if (pattern != undefined) {\n        return fn.call(this, text, pattern);\n      } else {\n        return fn.call(this, text, patterns);\n      }\n    };\n  };\n\n  Markdown.DialectHelpers = {};\n\n  Markdown.DialectHelpers.inline_until_char = function (text, want) {\n    var consumed = 0,\n        nodes = [];\n\n    while (true) {\n      if (text.charAt(consumed) == want) {\n        // Found the character we were looking for\n        consumed++;\n        return [consumed, nodes];\n      }\n\n      if (consumed >= text.length) {\n        // No closing char found. Abort.\n        return null;\n      }\n\n      var res = this.dialect.inline.__oneElement__.call(this, text.substr(consumed));\n\n      consumed += res[0]; // Add any returned nodes.\n\n      nodes.push.apply(nodes, res.slice(1));\n    }\n  }; // Helper function to make sub-classing a dialect easier\n\n\n  Markdown.subclassDialect = function (d) {\n    function Block() {}\n\n    Block.prototype = d.block;\n\n    function Inline() {}\n\n    Inline.prototype = d.inline;\n    return {\n      block: new Block(),\n      inline: new Inline()\n    };\n  };\n\n  Markdown.buildBlockOrder(Markdown.dialects.Gruber.block);\n  Markdown.buildInlinePatterns(Markdown.dialects.Gruber.inline);\n  Markdown.dialects.Maruku = Markdown.subclassDialect(Markdown.dialects.Gruber);\n\n  Markdown.dialects.Maruku.processMetaHash = function processMetaHash(meta_string) {\n    var meta = split_meta_hash(meta_string),\n        attr = {};\n\n    for (var i = 0; i < meta.length; ++i) {\n      // id: #foo\n      if (/^#/.test(meta[i])) {\n        attr.id = meta[i].substring(1);\n      } // class: .foo\n      else if (/^\\./.test(meta[i])) {\n          // if class already exists, append the new one\n          if (attr[\"class\"]) {\n            attr[\"class\"] = attr[\"class\"] + meta[i].replace(/./, \" \");\n          } else {\n            attr[\"class\"] = meta[i].substring(1);\n          }\n        } // attribute: foo=bar\n        else if (/\\=/.test(meta[i])) {\n            var s = meta[i].split(/\\=/);\n            attr[s[0]] = s[1];\n          }\n    }\n\n    return attr;\n  };\n\n  function split_meta_hash(meta_string) {\n    var meta = meta_string.split(\"\"),\n        parts = [\"\"],\n        in_quotes = false;\n\n    while (meta.length) {\n      var letter = meta.shift();\n\n      switch (letter) {\n        case \" \":\n          // if we're in a quoted section, keep it\n          if (in_quotes) {\n            parts[parts.length - 1] += letter;\n          } // otherwise make a new part\n          else {\n              parts.push(\"\");\n            }\n\n          break;\n\n        case \"'\":\n        case '\"':\n          // reverse the quotes and move straight on\n          in_quotes = !in_quotes;\n          break;\n\n        case \"\\\\\":\n          // shift off the next letter to be used straight away.\n          // it was escaped so we'll keep it whatever it is\n          letter = meta.shift();\n\n        default:\n          parts[parts.length - 1] += letter;\n          break;\n      }\n    }\n\n    return parts;\n  }\n\n  Markdown.dialects.Maruku.block.document_meta = function document_meta(block, next) {\n    // we're only interested in the first block\n    if (block.lineNumber > 1) return undefined; // document_meta blocks consist of one or more lines of `Key: Value\\n`\n\n    if (!block.match(/^(?:\\w+:.*\\n)*\\w+:.*$/)) return undefined; // make an attribute node if it doesn't exist\n\n    if (!extract_attr(this.tree)) {\n      this.tree.splice(1, 0, {});\n    }\n\n    var pairs = block.split(/\\n/);\n\n    for (p in pairs) {\n      var m = pairs[p].match(/(\\w+):\\s*(.*)$/),\n          key = m[1].toLowerCase(),\n          value = m[2];\n      this.tree[1][key] = value;\n    } // document_meta produces no content!\n\n\n    return [];\n  };\n\n  Markdown.dialects.Maruku.block.block_meta = function block_meta(block, next) {\n    // check if the last line of the block is an meta hash\n    var m = block.match(/(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/);\n    if (!m) return undefined; // process the meta hash\n\n    var attr = this.dialect.processMetaHash(m[2]);\n    var hash; // if we matched ^ then we need to apply meta to the previous block\n\n    if (m[1] === \"\") {\n      var node = this.tree[this.tree.length - 1];\n      hash = extract_attr(node); // if the node is a string (rather than JsonML), bail\n\n      if (typeof node === \"string\") return undefined; // create the attribute hash if it doesn't exist\n\n      if (!hash) {\n        hash = {};\n        node.splice(1, 0, hash);\n      } // add the attributes in\n\n\n      for (a in attr) {\n        hash[a] = attr[a];\n      } // return nothing so the meta hash is removed\n\n\n      return [];\n    } // pull the meta hash off the block and process what's left\n\n\n    var b = block.replace(/\\n.*$/, \"\"),\n        result = this.processBlock(b, []); // get or make the attributes hash\n\n    hash = extract_attr(result[0]);\n\n    if (!hash) {\n      hash = {};\n      result[0].splice(1, 0, hash);\n    } // attach the attributes to the block\n\n\n    for (a in attr) {\n      hash[a] = attr[a];\n    }\n\n    return result;\n  };\n\n  Markdown.dialects.Maruku.block.definition_list = function definition_list(block, next) {\n    // one or more terms followed by one or more definitions, in a single block\n    var tight = /^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$/,\n        list = [\"dl\"],\n        i,\n        m; // see if we're dealing with a tight or loose block\n\n    if (m = block.match(tight)) {\n      // pull subsequent tight DL blocks out of `next`\n      var blocks = [block];\n\n      while (next.length && tight.exec(next[0])) {\n        blocks.push(next.shift());\n      }\n\n      for (var b = 0; b < blocks.length; ++b) {\n        var m = blocks[b].match(tight),\n            terms = m[1].replace(/\\n$/, \"\").split(/\\n/),\n            defns = m[2].split(/\\n:\\s+/); // print( uneval( m ) );\n\n        for (i = 0; i < terms.length; ++i) {\n          list.push([\"dt\", terms[i]]);\n        }\n\n        for (i = 0; i < defns.length; ++i) {\n          // run inline processing over the definition\n          list.push([\"dd\"].concat(this.processInline(defns[i].replace(/(\\n)\\s+/, \"$1\"))));\n        }\n      }\n    } else {\n      return undefined;\n    }\n\n    return [list];\n  }; // splits on unescaped instances of @ch. If @ch is not a character the result\n  // can be unpredictable\n\n\n  Markdown.dialects.Maruku.block.table = function table(block, next) {\n    var _split_on_unescaped = function _split_on_unescaped(s, ch) {\n      ch = ch || '\\\\s';\n\n      if (ch.match(/^[\\\\|\\[\\]{}?*.+^$]$/)) {\n        ch = '\\\\' + ch;\n      }\n\n      var res = [],\n          r = new RegExp('^((?:\\\\\\\\.|[^\\\\\\\\' + ch + '])*)' + ch + '(.*)'),\n          m;\n\n      while (m = s.match(r)) {\n        res.push(m[1]);\n        s = m[2];\n      }\n\n      res.push(s);\n      return res;\n    };\n\n    var leading_pipe = /^ {0,3}\\|(.+)\\n {0,3}\\|\\s*([\\-:]+[\\-| :]*)\\n((?:\\s*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        // find at least an unescaped pipe in each line\n    no_leading_pipe = /^ {0,3}(\\S(?:\\\\.|[^\\\\|])*\\|.*)\\n {0,3}([\\-:]+\\s*\\|[\\-| :]*)\\n((?:(?:\\\\.|[^\\\\|])*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        i,\n        m;\n\n    if (m = block.match(leading_pipe)) {\n      // remove leading pipes in contents\n      // (header and horizontal rule already have the leading pipe left out)\n      m[3] = m[3].replace(/^\\s*\\|/gm, '');\n    } else if (!(m = block.match(no_leading_pipe))) {\n      return undefined;\n    }\n\n    var table = [\"table\", [\"thead\", [\"tr\"]], [\"tbody\"]]; // remove trailing pipes, then split on pipes\n    // (no escaped pipes are allowed in horizontal rule)\n\n    m[2] = m[2].replace(/\\|\\s*$/, '').split('|'); // process alignment\n\n    var html_attrs = [];\n    forEach(m[2], function (s) {\n      if (s.match(/^\\s*-+:\\s*$/)) html_attrs.push({\n        align: \"right\"\n      });else if (s.match(/^\\s*:-+\\s*$/)) html_attrs.push({\n        align: \"left\"\n      });else if (s.match(/^\\s*:-+:\\s*$/)) html_attrs.push({\n        align: \"center\"\n      });else html_attrs.push({});\n    }); // now for the header, avoid escaped pipes\n\n    m[1] = _split_on_unescaped(m[1].replace(/\\|\\s*$/, ''), '|');\n\n    for (i = 0; i < m[1].length; i++) {\n      table[1][1].push(['th', html_attrs[i] || {}].concat(this.processInline(m[1][i].trim())));\n    } // now for body contents\n\n\n    forEach(m[3].replace(/\\|\\s*$/mg, '').split('\\n'), function (row) {\n      var html_row = ['tr'];\n      row = _split_on_unescaped(row, '|');\n\n      for (i = 0; i < row.length; i++) {\n        html_row.push(['td', html_attrs[i] || {}].concat(this.processInline(row[i].trim())));\n      }\n\n      table[2].push(html_row);\n    }, this);\n    return [table];\n  };\n\n  Markdown.dialects.Maruku.inline[\"{:\"] = function inline_meta(text, matches, out) {\n    if (!out.length) {\n      return [2, \"{:\"];\n    } // get the preceeding element\n\n\n    var before = out[out.length - 1];\n\n    if (typeof before === \"string\") {\n      return [2, \"{:\"];\n    } // match a meta hash\n\n\n    var m = text.match(/^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/); // no match, false alarm\n\n    if (!m) {\n      return [2, \"{:\"];\n    } // attach the attributes to the preceeding element\n\n\n    var meta = this.dialect.processMetaHash(m[1]),\n        attr = extract_attr(before);\n\n    if (!attr) {\n      attr = {};\n      before.splice(1, 0, attr);\n    }\n\n    for (var k in meta) {\n      attr[k] = meta[k];\n    } // cut out the string and replace it with nothing\n\n\n    return [m[0].length, \"\"];\n  };\n\n  Markdown.dialects.Maruku.inline.__escape__ = /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-|:]/;\n  Markdown.buildBlockOrder(Markdown.dialects.Maruku.block);\n  Markdown.buildInlinePatterns(Markdown.dialects.Maruku.inline);\n\n  var isArray = Array.isArray || function (obj) {\n    return Object.prototype.toString.call(obj) == \"[object Array]\";\n  };\n\n  var forEach; // Don't mess with Array.prototype. Its not friendly\n\n  if (Array.prototype.forEach) {\n    forEach = function forEach(arr, cb, thisp) {\n      return arr.forEach(cb, thisp);\n    };\n  } else {\n    forEach = function forEach(arr, cb, thisp) {\n      for (var i = 0; i < arr.length; i++) {\n        cb.call(thisp || arr, arr[i], i, arr);\n      }\n    };\n  }\n\n  var isEmpty = function isEmpty(obj) {\n    for (var key in obj) {\n      if (hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  function extract_attr(jsonml) {\n    return isArray(jsonml) && jsonml.length > 1 && typeof jsonml[1] === \"object\" && !isArray(jsonml[1]) ? jsonml[1] : undefined;\n  }\n  /**\n   *  renderJsonML( jsonml[, options] ) -> String\n   *  - jsonml (Array): JsonML array to render to XML\n   *  - options (Object): options\n   *\n   *  Converts the given JsonML into well-formed XML.\n   *\n   *  The options currently understood are:\n   *\n   *  - root (Boolean): wether or not the root node should be included in the\n   *    output, or just its children. The default `false` is to not include the\n   *    root itself.\n   */\n\n\n  expose.renderJsonML = function (jsonml, options) {\n    options = options || {}; // include the root element in the rendered output?\n\n    options.root = options.root || false;\n    var content = [];\n\n    if (options.root) {\n      content.push(render_tree(jsonml));\n    } else {\n      jsonml.shift(); // get rid of the tag\n\n      if (jsonml.length && typeof jsonml[0] === \"object\" && !(jsonml[0] instanceof Array)) {\n        jsonml.shift(); // get rid of the attributes\n      }\n\n      while (jsonml.length) {\n        content.push(render_tree(jsonml.shift()));\n      }\n    }\n\n    return content.join(\"\\n\\n\");\n  };\n\n  function escapeHTML(text) {\n    return text.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#39;\");\n  }\n\n  function render_tree(jsonml) {\n    // basic case\n    if (typeof jsonml === \"string\") {\n      return escapeHTML(jsonml);\n    }\n\n    var tag = jsonml.shift(),\n        attributes = {},\n        content = [];\n\n    if (jsonml.length && typeof jsonml[0] === \"object\" && !(jsonml[0] instanceof Array)) {\n      attributes = jsonml.shift();\n    }\n\n    while (jsonml.length) {\n      content.push(render_tree(jsonml.shift()));\n    }\n\n    var tag_attrs = \"\";\n\n    for (var a in attributes) {\n      tag_attrs += \" \" + a + '=\"' + escapeHTML(attributes[a]) + '\"';\n    } // be careful about adding whitespace here for inline elements\n\n\n    if (tag == \"img\" || tag == \"br\" || tag == \"hr\") {\n      return \"<\" + tag + tag_attrs + \"/>\";\n    } else {\n      return \"<\" + tag + tag_attrs + \">\" + content.join(\"\") + \"</\" + tag + \">\";\n    }\n  }\n\n  function convert_tree_to_html(tree, references, options) {\n    var i;\n    options = options || {}; // shallow clone\n\n    var jsonml = tree.slice(0);\n\n    if (typeof options.preprocessTreeNode === \"function\") {\n      jsonml = options.preprocessTreeNode(jsonml, references);\n    } // Clone attributes if they exist\n\n\n    var attrs = extract_attr(jsonml);\n\n    if (attrs) {\n      jsonml[1] = {};\n\n      for (i in attrs) {\n        jsonml[1][i] = attrs[i];\n      }\n\n      attrs = jsonml[1];\n    } // basic case\n\n\n    if (typeof jsonml === \"string\") {\n      return jsonml;\n    } // convert this node\n\n\n    switch (jsonml[0]) {\n      case \"header\":\n        jsonml[0] = \"h\" + jsonml[1].level;\n        delete jsonml[1].level;\n        break;\n\n      case \"bulletlist\":\n        jsonml[0] = \"ul\";\n        break;\n\n      case \"numberlist\":\n        jsonml[0] = \"ol\";\n        break;\n\n      case \"listitem\":\n        jsonml[0] = \"li\";\n        break;\n\n      case \"para\":\n        jsonml[0] = \"p\";\n        break;\n\n      case \"markdown\":\n        jsonml[0] = \"html\";\n        if (attrs) delete attrs.references;\n        break;\n\n      case \"code_block\":\n        jsonml[0] = \"pre\";\n        i = attrs ? 2 : 1;\n        var code = [\"code\"];\n        code.push.apply(code, jsonml.splice(i, jsonml.length - i));\n        jsonml[i] = code;\n        break;\n\n      case \"inlinecode\":\n        jsonml[0] = \"code\";\n        break;\n\n      case \"img\":\n        jsonml[1].src = jsonml[1].href;\n        delete jsonml[1].href;\n        break;\n\n      case \"linebreak\":\n        jsonml[0] = \"br\";\n        break;\n\n      case \"link\":\n        jsonml[0] = \"a\";\n        break;\n\n      case \"link_ref\":\n        jsonml[0] = \"a\"; // grab this ref and clean up the attribute node\n\n        var ref = references[attrs.ref]; // if the reference exists, make the link\n\n        if (ref) {\n          delete attrs.ref; // add in the href and title, if present\n\n          attrs.href = ref.href;\n\n          if (ref.title) {\n            attrs.title = ref.title;\n          } // get rid of the unneeded original text\n\n\n          delete attrs.original;\n        } // the reference doesn't exist, so revert to plain text\n        else {\n            return attrs.original;\n          }\n\n        break;\n\n      case \"img_ref\":\n        jsonml[0] = \"img\"; // grab this ref and clean up the attribute node\n\n        var ref = references[attrs.ref]; // if the reference exists, make the link\n\n        if (ref) {\n          delete attrs.ref; // add in the href and title, if present\n\n          attrs.src = ref.href;\n\n          if (ref.title) {\n            attrs.title = ref.title;\n          } // get rid of the unneeded original text\n\n\n          delete attrs.original;\n        } // the reference doesn't exist, so revert to plain text\n        else {\n            return attrs.original;\n          }\n\n        break;\n    } // convert all the children\n\n\n    i = 1; // deal with the attribute node, if it exists\n\n    if (attrs) {\n      // if there are keys, skip over it\n      for (var key in jsonml[1]) {\n        i = 2;\n        break;\n      } // if there aren't, remove it\n\n\n      if (i === 1) {\n        jsonml.splice(i, 1);\n      }\n    }\n\n    for (; i < jsonml.length; ++i) {\n      jsonml[i] = convert_tree_to_html(jsonml[i], references, options);\n    }\n\n    return jsonml;\n  } // merges adjacent text nodes into a single node\n\n\n  function merge_text_nodes(jsonml) {\n    // skip the tag name and attribute hash\n    var i = extract_attr(jsonml) ? 2 : 1;\n\n    while (i < jsonml.length) {\n      // if it's a string check the next item too\n      if (typeof jsonml[i] === \"string\") {\n        if (i + 1 < jsonml.length && typeof jsonml[i + 1] === \"string\") {\n          // merge the second string into the first and remove it\n          jsonml[i] += jsonml.splice(i + 1, 1)[0];\n        } else {\n          ++i;\n        }\n      } // if it's not a string recurse\n      else {\n          merge_text_nodes(jsonml[i]);\n          ++i;\n        }\n    }\n  }\n})(function () {\n  if (typeof exports === \"undefined\") {\n    window.markdown = {};\n    return window.markdown;\n  } else {\n    return exports;\n  }\n}());","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(obj) {\n  var keys = Object.keys(obj);\n  var descriptors = {};\n\n  for (var i = 0; i < keys.length; i++) {\n    descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n  }\n\n  return descriptors;\n};\n\nvar formatRegExp = /%[sdj%]/g;\n\nexports.format = function (f) {\n  if (!isString(f)) {\n    var objects = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function (x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n\n    switch (x) {\n      case '%s':\n        return String(args[i++]);\n\n      case '%d':\n        return Number(args[i++]);\n\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n\n      default:\n        return x;\n    }\n  });\n\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n\n  return str;\n}; // Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\n\n\nexports.deprecate = function (fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  } // Allow for deprecating things in the process of starting up.\n\n\n  if (typeof process === 'undefined') {\n    return function () {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n\n      warned = true;\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\nvar debugs = {};\nvar debugEnviron;\n\nexports.debuglog = function (set) {\n  if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n\n      debugs[set] = function () {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function () {};\n    }\n  }\n\n  return debugs[set];\n};\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n\n/* legacy: obj, showHidden, depth, colors*/\n\n\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  }; // legacy...\n\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  } // set default options\n\n\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\nexports.inspect = inspect; // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\ninspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n}; // Don't use 'blue' not visible on cmd.exe\n\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return \"\\x1B[\" + inspect.colors[style][0] + 'm' + str + \"\\x1B[\" + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n  value.inspect !== exports.inspect && // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  } // Primitive types cannot have properties\n\n\n  var primitive = formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  } // Look up the keys of the object.\n\n\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  } // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  } // Some type of object without properties can be shortcutted.\n\n\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}']; // Make Array say that they are Array\n\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  } // Make functions say that they are functions\n\n\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  } // Make RegExps say that they are RegExps\n\n\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  } // Make dates with properties first say the date\n\n\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  } // Make error with message first say the error\n\n\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function (prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n} // NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\n\nexports.isPrimitive = isPrimitive;\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34\n\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n} // log is just a thin wrapper to console.log that prepends a timestamp\n\n\nexports.log = function () {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\n\n\nexports.inherits = require('inherits');\n\nexports._extend = function (origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function') throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn,\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n    var args = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  });\n  return Object.defineProperties(fn, getOwnPropertyDescriptors(original));\n};\n\nexports.promisify.custom = kCustomPromisifiedSymbol;\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  } // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n\n\n  function callbackified() {\n    var args = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n\n    var self = this;\n\n    var cb = function cb() {\n      return maybeCb.apply(self, arguments);\n    }; // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n\n\n    original.apply(this, args).then(function (ret) {\n      process.nextTick(cb, null, ret);\n    }, function (rej) {\n      process.nextTick(callbackifyOnRejected, rej, cb);\n    });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified, getOwnPropertyDescriptors(original));\n  return callbackified;\n}\n\nexports.callbackify = callbackify;","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';\n};","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}","/*! https://mths.be/he v1.2.0 by @mathias | MIT license */\n;\n\n(function (root) {\n  // Detect free variables `exports`.\n  var freeExports = typeof exports == 'object' && exports; // Detect free variable `module`.\n\n  var freeModule = typeof module == 'object' && module && module.exports == freeExports && module; // Detect free variable `global`, from Node.js or Browserified code,\n  // and use it as `root`.\n\n  var freeGlobal = typeof global == 'object' && global;\n\n  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n    root = freeGlobal;\n  }\n  /*--------------------------------------------------------------------------*/\n  // All astral symbols.\n\n\n  var regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g; // All ASCII symbols (not just printable ASCII) except those listed in the\n  // first column of the overrides table.\n  // https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\n\n  var regexAsciiWhitelist = /[\\x01-\\x7F]/g; // All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n  // code points listed in the first column of the overrides table on\n  // https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\n\n  var regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n  var regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n  var encodeMap = {\n    '\\xAD': 'shy',\n    \"\\u200C\": 'zwnj',\n    \"\\u200D\": 'zwj',\n    \"\\u200E\": 'lrm',\n    \"\\u2063\": 'ic',\n    \"\\u2062\": 'it',\n    \"\\u2061\": 'af',\n    \"\\u200F\": 'rlm',\n    \"\\u200B\": 'ZeroWidthSpace',\n    \"\\u2060\": 'NoBreak',\n    \"\\u0311\": 'DownBreve',\n    \"\\u20DB\": 'tdot',\n    \"\\u20DC\": 'DotDot',\n    '\\t': 'Tab',\n    '\\n': 'NewLine',\n    \"\\u2008\": 'puncsp',\n    \"\\u205F\": 'MediumSpace',\n    \"\\u2009\": 'thinsp',\n    \"\\u200A\": 'hairsp',\n    \"\\u2004\": 'emsp13',\n    \"\\u2002\": 'ensp',\n    \"\\u2005\": 'emsp14',\n    \"\\u2003\": 'emsp',\n    \"\\u2007\": 'numsp',\n    '\\xA0': 'nbsp',\n    \"\\u205F\\u200A\": 'ThickSpace',\n    \"\\u203E\": 'oline',\n    '_': 'lowbar',\n    \"\\u2010\": 'dash',\n    \"\\u2013\": 'ndash',\n    \"\\u2014\": 'mdash',\n    \"\\u2015\": 'horbar',\n    ',': 'comma',\n    ';': 'semi',\n    \"\\u204F\": 'bsemi',\n    ':': 'colon',\n    \"\\u2A74\": 'Colone',\n    '!': 'excl',\n    '\\xA1': 'iexcl',\n    '?': 'quest',\n    '\\xBF': 'iquest',\n    '.': 'period',\n    \"\\u2025\": 'nldr',\n    \"\\u2026\": 'mldr',\n    '\\xB7': 'middot',\n    '\\'': 'apos',\n    \"\\u2018\": 'lsquo',\n    \"\\u2019\": 'rsquo',\n    \"\\u201A\": 'sbquo',\n    \"\\u2039\": 'lsaquo',\n    \"\\u203A\": 'rsaquo',\n    '\"': 'quot',\n    \"\\u201C\": 'ldquo',\n    \"\\u201D\": 'rdquo',\n    \"\\u201E\": 'bdquo',\n    '\\xAB': 'laquo',\n    '\\xBB': 'raquo',\n    '(': 'lpar',\n    ')': 'rpar',\n    '[': 'lsqb',\n    ']': 'rsqb',\n    '{': 'lcub',\n    '}': 'rcub',\n    \"\\u2308\": 'lceil',\n    \"\\u2309\": 'rceil',\n    \"\\u230A\": 'lfloor',\n    \"\\u230B\": 'rfloor',\n    \"\\u2985\": 'lopar',\n    \"\\u2986\": 'ropar',\n    \"\\u298B\": 'lbrke',\n    \"\\u298C\": 'rbrke',\n    \"\\u298D\": 'lbrkslu',\n    \"\\u298E\": 'rbrksld',\n    \"\\u298F\": 'lbrksld',\n    \"\\u2990\": 'rbrkslu',\n    \"\\u2991\": 'langd',\n    \"\\u2992\": 'rangd',\n    \"\\u2993\": 'lparlt',\n    \"\\u2994\": 'rpargt',\n    \"\\u2995\": 'gtlPar',\n    \"\\u2996\": 'ltrPar',\n    \"\\u27E6\": 'lobrk',\n    \"\\u27E7\": 'robrk',\n    \"\\u27E8\": 'lang',\n    \"\\u27E9\": 'rang',\n    \"\\u27EA\": 'Lang',\n    \"\\u27EB\": 'Rang',\n    \"\\u27EC\": 'loang',\n    \"\\u27ED\": 'roang',\n    \"\\u2772\": 'lbbrk',\n    \"\\u2773\": 'rbbrk',\n    \"\\u2016\": 'Vert',\n    '\\xA7': 'sect',\n    '\\xB6': 'para',\n    '@': 'commat',\n    '*': 'ast',\n    '/': 'sol',\n    'undefined': null,\n    '&': 'amp',\n    '#': 'num',\n    '%': 'percnt',\n    \"\\u2030\": 'permil',\n    \"\\u2031\": 'pertenk',\n    \"\\u2020\": 'dagger',\n    \"\\u2021\": 'Dagger',\n    \"\\u2022\": 'bull',\n    \"\\u2043\": 'hybull',\n    \"\\u2032\": 'prime',\n    \"\\u2033\": 'Prime',\n    \"\\u2034\": 'tprime',\n    \"\\u2057\": 'qprime',\n    \"\\u2035\": 'bprime',\n    \"\\u2041\": 'caret',\n    '`': 'grave',\n    '\\xB4': 'acute',\n    \"\\u02DC\": 'tilde',\n    '^': 'Hat',\n    '\\xAF': 'macr',\n    \"\\u02D8\": 'breve',\n    \"\\u02D9\": 'dot',\n    '\\xA8': 'die',\n    \"\\u02DA\": 'ring',\n    \"\\u02DD\": 'dblac',\n    '\\xB8': 'cedil',\n    \"\\u02DB\": 'ogon',\n    \"\\u02C6\": 'circ',\n    \"\\u02C7\": 'caron',\n    '\\xB0': 'deg',\n    '\\xA9': 'copy',\n    '\\xAE': 'reg',\n    \"\\u2117\": 'copysr',\n    \"\\u2118\": 'wp',\n    \"\\u211E\": 'rx',\n    \"\\u2127\": 'mho',\n    \"\\u2129\": 'iiota',\n    \"\\u2190\": 'larr',\n    \"\\u219A\": 'nlarr',\n    \"\\u2192\": 'rarr',\n    \"\\u219B\": 'nrarr',\n    \"\\u2191\": 'uarr',\n    \"\\u2193\": 'darr',\n    \"\\u2194\": 'harr',\n    \"\\u21AE\": 'nharr',\n    \"\\u2195\": 'varr',\n    \"\\u2196\": 'nwarr',\n    \"\\u2197\": 'nearr',\n    \"\\u2198\": 'searr',\n    \"\\u2199\": 'swarr',\n    \"\\u219D\": 'rarrw',\n    \"\\u219D\\u0338\": 'nrarrw',\n    \"\\u219E\": 'Larr',\n    \"\\u219F\": 'Uarr',\n    \"\\u21A0\": 'Rarr',\n    \"\\u21A1\": 'Darr',\n    \"\\u21A2\": 'larrtl',\n    \"\\u21A3\": 'rarrtl',\n    \"\\u21A4\": 'mapstoleft',\n    \"\\u21A5\": 'mapstoup',\n    \"\\u21A6\": 'map',\n    \"\\u21A7\": 'mapstodown',\n    \"\\u21A9\": 'larrhk',\n    \"\\u21AA\": 'rarrhk',\n    \"\\u21AB\": 'larrlp',\n    \"\\u21AC\": 'rarrlp',\n    \"\\u21AD\": 'harrw',\n    \"\\u21B0\": 'lsh',\n    \"\\u21B1\": 'rsh',\n    \"\\u21B2\": 'ldsh',\n    \"\\u21B3\": 'rdsh',\n    \"\\u21B5\": 'crarr',\n    \"\\u21B6\": 'cularr',\n    \"\\u21B7\": 'curarr',\n    \"\\u21BA\": 'olarr',\n    \"\\u21BB\": 'orarr',\n    \"\\u21BC\": 'lharu',\n    \"\\u21BD\": 'lhard',\n    \"\\u21BE\": 'uharr',\n    \"\\u21BF\": 'uharl',\n    \"\\u21C0\": 'rharu',\n    \"\\u21C1\": 'rhard',\n    \"\\u21C2\": 'dharr',\n    \"\\u21C3\": 'dharl',\n    \"\\u21C4\": 'rlarr',\n    \"\\u21C5\": 'udarr',\n    \"\\u21C6\": 'lrarr',\n    \"\\u21C7\": 'llarr',\n    \"\\u21C8\": 'uuarr',\n    \"\\u21C9\": 'rrarr',\n    \"\\u21CA\": 'ddarr',\n    \"\\u21CB\": 'lrhar',\n    \"\\u21CC\": 'rlhar',\n    \"\\u21D0\": 'lArr',\n    \"\\u21CD\": 'nlArr',\n    \"\\u21D1\": 'uArr',\n    \"\\u21D2\": 'rArr',\n    \"\\u21CF\": 'nrArr',\n    \"\\u21D3\": 'dArr',\n    \"\\u21D4\": 'iff',\n    \"\\u21CE\": 'nhArr',\n    \"\\u21D5\": 'vArr',\n    \"\\u21D6\": 'nwArr',\n    \"\\u21D7\": 'neArr',\n    \"\\u21D8\": 'seArr',\n    \"\\u21D9\": 'swArr',\n    \"\\u21DA\": 'lAarr',\n    \"\\u21DB\": 'rAarr',\n    \"\\u21DD\": 'zigrarr',\n    \"\\u21E4\": 'larrb',\n    \"\\u21E5\": 'rarrb',\n    \"\\u21F5\": 'duarr',\n    \"\\u21FD\": 'loarr',\n    \"\\u21FE\": 'roarr',\n    \"\\u21FF\": 'hoarr',\n    \"\\u2200\": 'forall',\n    \"\\u2201\": 'comp',\n    \"\\u2202\": 'part',\n    \"\\u2202\\u0338\": 'npart',\n    \"\\u2203\": 'exist',\n    \"\\u2204\": 'nexist',\n    \"\\u2205\": 'empty',\n    \"\\u2207\": 'Del',\n    \"\\u2208\": 'in',\n    \"\\u2209\": 'notin',\n    \"\\u220B\": 'ni',\n    \"\\u220C\": 'notni',\n    \"\\u03F6\": 'bepsi',\n    \"\\u220F\": 'prod',\n    \"\\u2210\": 'coprod',\n    \"\\u2211\": 'sum',\n    '+': 'plus',\n    '\\xB1': 'pm',\n    '\\xF7': 'div',\n    '\\xD7': 'times',\n    '<': 'lt',\n    \"\\u226E\": 'nlt',\n    \"<\\u20D2\": 'nvlt',\n    '=': 'equals',\n    \"\\u2260\": 'ne',\n    \"=\\u20E5\": 'bne',\n    \"\\u2A75\": 'Equal',\n    '>': 'gt',\n    \"\\u226F\": 'ngt',\n    \">\\u20D2\": 'nvgt',\n    '\\xAC': 'not',\n    '|': 'vert',\n    '\\xA6': 'brvbar',\n    \"\\u2212\": 'minus',\n    \"\\u2213\": 'mp',\n    \"\\u2214\": 'plusdo',\n    \"\\u2044\": 'frasl',\n    \"\\u2216\": 'setmn',\n    \"\\u2217\": 'lowast',\n    \"\\u2218\": 'compfn',\n    \"\\u221A\": 'Sqrt',\n    \"\\u221D\": 'prop',\n    \"\\u221E\": 'infin',\n    \"\\u221F\": 'angrt',\n    \"\\u2220\": 'ang',\n    \"\\u2220\\u20D2\": 'nang',\n    \"\\u2221\": 'angmsd',\n    \"\\u2222\": 'angsph',\n    \"\\u2223\": 'mid',\n    \"\\u2224\": 'nmid',\n    \"\\u2225\": 'par',\n    \"\\u2226\": 'npar',\n    \"\\u2227\": 'and',\n    \"\\u2228\": 'or',\n    \"\\u2229\": 'cap',\n    \"\\u2229\\uFE00\": 'caps',\n    \"\\u222A\": 'cup',\n    \"\\u222A\\uFE00\": 'cups',\n    \"\\u222B\": 'int',\n    \"\\u222C\": 'Int',\n    \"\\u222D\": 'tint',\n    \"\\u2A0C\": 'qint',\n    \"\\u222E\": 'oint',\n    \"\\u222F\": 'Conint',\n    \"\\u2230\": 'Cconint',\n    \"\\u2231\": 'cwint',\n    \"\\u2232\": 'cwconint',\n    \"\\u2233\": 'awconint',\n    \"\\u2234\": 'there4',\n    \"\\u2235\": 'becaus',\n    \"\\u2236\": 'ratio',\n    \"\\u2237\": 'Colon',\n    \"\\u2238\": 'minusd',\n    \"\\u223A\": 'mDDot',\n    \"\\u223B\": 'homtht',\n    \"\\u223C\": 'sim',\n    \"\\u2241\": 'nsim',\n    \"\\u223C\\u20D2\": 'nvsim',\n    \"\\u223D\": 'bsim',\n    \"\\u223D\\u0331\": 'race',\n    \"\\u223E\": 'ac',\n    \"\\u223E\\u0333\": 'acE',\n    \"\\u223F\": 'acd',\n    \"\\u2240\": 'wr',\n    \"\\u2242\": 'esim',\n    \"\\u2242\\u0338\": 'nesim',\n    \"\\u2243\": 'sime',\n    \"\\u2244\": 'nsime',\n    \"\\u2245\": 'cong',\n    \"\\u2247\": 'ncong',\n    \"\\u2246\": 'simne',\n    \"\\u2248\": 'ap',\n    \"\\u2249\": 'nap',\n    \"\\u224A\": 'ape',\n    \"\\u224B\": 'apid',\n    \"\\u224B\\u0338\": 'napid',\n    \"\\u224C\": 'bcong',\n    \"\\u224D\": 'CupCap',\n    \"\\u226D\": 'NotCupCap',\n    \"\\u224D\\u20D2\": 'nvap',\n    \"\\u224E\": 'bump',\n    \"\\u224E\\u0338\": 'nbump',\n    \"\\u224F\": 'bumpe',\n    \"\\u224F\\u0338\": 'nbumpe',\n    \"\\u2250\": 'doteq',\n    \"\\u2250\\u0338\": 'nedot',\n    \"\\u2251\": 'eDot',\n    \"\\u2252\": 'efDot',\n    \"\\u2253\": 'erDot',\n    \"\\u2254\": 'colone',\n    \"\\u2255\": 'ecolon',\n    \"\\u2256\": 'ecir',\n    \"\\u2257\": 'cire',\n    \"\\u2259\": 'wedgeq',\n    \"\\u225A\": 'veeeq',\n    \"\\u225C\": 'trie',\n    \"\\u225F\": 'equest',\n    \"\\u2261\": 'equiv',\n    \"\\u2262\": 'nequiv',\n    \"\\u2261\\u20E5\": 'bnequiv',\n    \"\\u2264\": 'le',\n    \"\\u2270\": 'nle',\n    \"\\u2264\\u20D2\": 'nvle',\n    \"\\u2265\": 'ge',\n    \"\\u2271\": 'nge',\n    \"\\u2265\\u20D2\": 'nvge',\n    \"\\u2266\": 'lE',\n    \"\\u2266\\u0338\": 'nlE',\n    \"\\u2267\": 'gE',\n    \"\\u2267\\u0338\": 'ngE',\n    \"\\u2268\\uFE00\": 'lvnE',\n    \"\\u2268\": 'lnE',\n    \"\\u2269\": 'gnE',\n    \"\\u2269\\uFE00\": 'gvnE',\n    \"\\u226A\": 'll',\n    \"\\u226A\\u0338\": 'nLtv',\n    \"\\u226A\\u20D2\": 'nLt',\n    \"\\u226B\": 'gg',\n    \"\\u226B\\u0338\": 'nGtv',\n    \"\\u226B\\u20D2\": 'nGt',\n    \"\\u226C\": 'twixt',\n    \"\\u2272\": 'lsim',\n    \"\\u2274\": 'nlsim',\n    \"\\u2273\": 'gsim',\n    \"\\u2275\": 'ngsim',\n    \"\\u2276\": 'lg',\n    \"\\u2278\": 'ntlg',\n    \"\\u2277\": 'gl',\n    \"\\u2279\": 'ntgl',\n    \"\\u227A\": 'pr',\n    \"\\u2280\": 'npr',\n    \"\\u227B\": 'sc',\n    \"\\u2281\": 'nsc',\n    \"\\u227C\": 'prcue',\n    \"\\u22E0\": 'nprcue',\n    \"\\u227D\": 'sccue',\n    \"\\u22E1\": 'nsccue',\n    \"\\u227E\": 'prsim',\n    \"\\u227F\": 'scsim',\n    \"\\u227F\\u0338\": 'NotSucceedsTilde',\n    \"\\u2282\": 'sub',\n    \"\\u2284\": 'nsub',\n    \"\\u2282\\u20D2\": 'vnsub',\n    \"\\u2283\": 'sup',\n    \"\\u2285\": 'nsup',\n    \"\\u2283\\u20D2\": 'vnsup',\n    \"\\u2286\": 'sube',\n    \"\\u2288\": 'nsube',\n    \"\\u2287\": 'supe',\n    \"\\u2289\": 'nsupe',\n    \"\\u228A\\uFE00\": 'vsubne',\n    \"\\u228A\": 'subne',\n    \"\\u228B\\uFE00\": 'vsupne',\n    \"\\u228B\": 'supne',\n    \"\\u228D\": 'cupdot',\n    \"\\u228E\": 'uplus',\n    \"\\u228F\": 'sqsub',\n    \"\\u228F\\u0338\": 'NotSquareSubset',\n    \"\\u2290\": 'sqsup',\n    \"\\u2290\\u0338\": 'NotSquareSuperset',\n    \"\\u2291\": 'sqsube',\n    \"\\u22E2\": 'nsqsube',\n    \"\\u2292\": 'sqsupe',\n    \"\\u22E3\": 'nsqsupe',\n    \"\\u2293\": 'sqcap',\n    \"\\u2293\\uFE00\": 'sqcaps',\n    \"\\u2294\": 'sqcup',\n    \"\\u2294\\uFE00\": 'sqcups',\n    \"\\u2295\": 'oplus',\n    \"\\u2296\": 'ominus',\n    \"\\u2297\": 'otimes',\n    \"\\u2298\": 'osol',\n    \"\\u2299\": 'odot',\n    \"\\u229A\": 'ocir',\n    \"\\u229B\": 'oast',\n    \"\\u229D\": 'odash',\n    \"\\u229E\": 'plusb',\n    \"\\u229F\": 'minusb',\n    \"\\u22A0\": 'timesb',\n    \"\\u22A1\": 'sdotb',\n    \"\\u22A2\": 'vdash',\n    \"\\u22AC\": 'nvdash',\n    \"\\u22A3\": 'dashv',\n    \"\\u22A4\": 'top',\n    \"\\u22A5\": 'bot',\n    \"\\u22A7\": 'models',\n    \"\\u22A8\": 'vDash',\n    \"\\u22AD\": 'nvDash',\n    \"\\u22A9\": 'Vdash',\n    \"\\u22AE\": 'nVdash',\n    \"\\u22AA\": 'Vvdash',\n    \"\\u22AB\": 'VDash',\n    \"\\u22AF\": 'nVDash',\n    \"\\u22B0\": 'prurel',\n    \"\\u22B2\": 'vltri',\n    \"\\u22EA\": 'nltri',\n    \"\\u22B3\": 'vrtri',\n    \"\\u22EB\": 'nrtri',\n    \"\\u22B4\": 'ltrie',\n    \"\\u22EC\": 'nltrie',\n    \"\\u22B4\\u20D2\": 'nvltrie',\n    \"\\u22B5\": 'rtrie',\n    \"\\u22ED\": 'nrtrie',\n    \"\\u22B5\\u20D2\": 'nvrtrie',\n    \"\\u22B6\": 'origof',\n    \"\\u22B7\": 'imof',\n    \"\\u22B8\": 'mumap',\n    \"\\u22B9\": 'hercon',\n    \"\\u22BA\": 'intcal',\n    \"\\u22BB\": 'veebar',\n    \"\\u22BD\": 'barvee',\n    \"\\u22BE\": 'angrtvb',\n    \"\\u22BF\": 'lrtri',\n    \"\\u22C0\": 'Wedge',\n    \"\\u22C1\": 'Vee',\n    \"\\u22C2\": 'xcap',\n    \"\\u22C3\": 'xcup',\n    \"\\u22C4\": 'diam',\n    \"\\u22C5\": 'sdot',\n    \"\\u22C6\": 'Star',\n    \"\\u22C7\": 'divonx',\n    \"\\u22C8\": 'bowtie',\n    \"\\u22C9\": 'ltimes',\n    \"\\u22CA\": 'rtimes',\n    \"\\u22CB\": 'lthree',\n    \"\\u22CC\": 'rthree',\n    \"\\u22CD\": 'bsime',\n    \"\\u22CE\": 'cuvee',\n    \"\\u22CF\": 'cuwed',\n    \"\\u22D0\": 'Sub',\n    \"\\u22D1\": 'Sup',\n    \"\\u22D2\": 'Cap',\n    \"\\u22D3\": 'Cup',\n    \"\\u22D4\": 'fork',\n    \"\\u22D5\": 'epar',\n    \"\\u22D6\": 'ltdot',\n    \"\\u22D7\": 'gtdot',\n    \"\\u22D8\": 'Ll',\n    \"\\u22D8\\u0338\": 'nLl',\n    \"\\u22D9\": 'Gg',\n    \"\\u22D9\\u0338\": 'nGg',\n    \"\\u22DA\\uFE00\": 'lesg',\n    \"\\u22DA\": 'leg',\n    \"\\u22DB\": 'gel',\n    \"\\u22DB\\uFE00\": 'gesl',\n    \"\\u22DE\": 'cuepr',\n    \"\\u22DF\": 'cuesc',\n    \"\\u22E6\": 'lnsim',\n    \"\\u22E7\": 'gnsim',\n    \"\\u22E8\": 'prnsim',\n    \"\\u22E9\": 'scnsim',\n    \"\\u22EE\": 'vellip',\n    \"\\u22EF\": 'ctdot',\n    \"\\u22F0\": 'utdot',\n    \"\\u22F1\": 'dtdot',\n    \"\\u22F2\": 'disin',\n    \"\\u22F3\": 'isinsv',\n    \"\\u22F4\": 'isins',\n    \"\\u22F5\": 'isindot',\n    \"\\u22F5\\u0338\": 'notindot',\n    \"\\u22F6\": 'notinvc',\n    \"\\u22F7\": 'notinvb',\n    \"\\u22F9\": 'isinE',\n    \"\\u22F9\\u0338\": 'notinE',\n    \"\\u22FA\": 'nisd',\n    \"\\u22FB\": 'xnis',\n    \"\\u22FC\": 'nis',\n    \"\\u22FD\": 'notnivc',\n    \"\\u22FE\": 'notnivb',\n    \"\\u2305\": 'barwed',\n    \"\\u2306\": 'Barwed',\n    \"\\u230C\": 'drcrop',\n    \"\\u230D\": 'dlcrop',\n    \"\\u230E\": 'urcrop',\n    \"\\u230F\": 'ulcrop',\n    \"\\u2310\": 'bnot',\n    \"\\u2312\": 'profline',\n    \"\\u2313\": 'profsurf',\n    \"\\u2315\": 'telrec',\n    \"\\u2316\": 'target',\n    \"\\u231C\": 'ulcorn',\n    \"\\u231D\": 'urcorn',\n    \"\\u231E\": 'dlcorn',\n    \"\\u231F\": 'drcorn',\n    \"\\u2322\": 'frown',\n    \"\\u2323\": 'smile',\n    \"\\u232D\": 'cylcty',\n    \"\\u232E\": 'profalar',\n    \"\\u2336\": 'topbot',\n    \"\\u233D\": 'ovbar',\n    \"\\u233F\": 'solbar',\n    \"\\u237C\": 'angzarr',\n    \"\\u23B0\": 'lmoust',\n    \"\\u23B1\": 'rmoust',\n    \"\\u23B4\": 'tbrk',\n    \"\\u23B5\": 'bbrk',\n    \"\\u23B6\": 'bbrktbrk',\n    \"\\u23DC\": 'OverParenthesis',\n    \"\\u23DD\": 'UnderParenthesis',\n    \"\\u23DE\": 'OverBrace',\n    \"\\u23DF\": 'UnderBrace',\n    \"\\u23E2\": 'trpezium',\n    \"\\u23E7\": 'elinters',\n    \"\\u2423\": 'blank',\n    \"\\u2500\": 'boxh',\n    \"\\u2502\": 'boxv',\n    \"\\u250C\": 'boxdr',\n    \"\\u2510\": 'boxdl',\n    \"\\u2514\": 'boxur',\n    \"\\u2518\": 'boxul',\n    \"\\u251C\": 'boxvr',\n    \"\\u2524\": 'boxvl',\n    \"\\u252C\": 'boxhd',\n    \"\\u2534\": 'boxhu',\n    \"\\u253C\": 'boxvh',\n    \"\\u2550\": 'boxH',\n    \"\\u2551\": 'boxV',\n    \"\\u2552\": 'boxdR',\n    \"\\u2553\": 'boxDr',\n    \"\\u2554\": 'boxDR',\n    \"\\u2555\": 'boxdL',\n    \"\\u2556\": 'boxDl',\n    \"\\u2557\": 'boxDL',\n    \"\\u2558\": 'boxuR',\n    \"\\u2559\": 'boxUr',\n    \"\\u255A\": 'boxUR',\n    \"\\u255B\": 'boxuL',\n    \"\\u255C\": 'boxUl',\n    \"\\u255D\": 'boxUL',\n    \"\\u255E\": 'boxvR',\n    \"\\u255F\": 'boxVr',\n    \"\\u2560\": 'boxVR',\n    \"\\u2561\": 'boxvL',\n    \"\\u2562\": 'boxVl',\n    \"\\u2563\": 'boxVL',\n    \"\\u2564\": 'boxHd',\n    \"\\u2565\": 'boxhD',\n    \"\\u2566\": 'boxHD',\n    \"\\u2567\": 'boxHu',\n    \"\\u2568\": 'boxhU',\n    \"\\u2569\": 'boxHU',\n    \"\\u256A\": 'boxvH',\n    \"\\u256B\": 'boxVh',\n    \"\\u256C\": 'boxVH',\n    \"\\u2580\": 'uhblk',\n    \"\\u2584\": 'lhblk',\n    \"\\u2588\": 'block',\n    \"\\u2591\": 'blk14',\n    \"\\u2592\": 'blk12',\n    \"\\u2593\": 'blk34',\n    \"\\u25A1\": 'squ',\n    \"\\u25AA\": 'squf',\n    \"\\u25AB\": 'EmptyVerySmallSquare',\n    \"\\u25AD\": 'rect',\n    \"\\u25AE\": 'marker',\n    \"\\u25B1\": 'fltns',\n    \"\\u25B3\": 'xutri',\n    \"\\u25B4\": 'utrif',\n    \"\\u25B5\": 'utri',\n    \"\\u25B8\": 'rtrif',\n    \"\\u25B9\": 'rtri',\n    \"\\u25BD\": 'xdtri',\n    \"\\u25BE\": 'dtrif',\n    \"\\u25BF\": 'dtri',\n    \"\\u25C2\": 'ltrif',\n    \"\\u25C3\": 'ltri',\n    \"\\u25CA\": 'loz',\n    \"\\u25CB\": 'cir',\n    \"\\u25EC\": 'tridot',\n    \"\\u25EF\": 'xcirc',\n    \"\\u25F8\": 'ultri',\n    \"\\u25F9\": 'urtri',\n    \"\\u25FA\": 'lltri',\n    \"\\u25FB\": 'EmptySmallSquare',\n    \"\\u25FC\": 'FilledSmallSquare',\n    \"\\u2605\": 'starf',\n    \"\\u2606\": 'star',\n    \"\\u260E\": 'phone',\n    \"\\u2640\": 'female',\n    \"\\u2642\": 'male',\n    \"\\u2660\": 'spades',\n    \"\\u2663\": 'clubs',\n    \"\\u2665\": 'hearts',\n    \"\\u2666\": 'diams',\n    \"\\u266A\": 'sung',\n    \"\\u2713\": 'check',\n    \"\\u2717\": 'cross',\n    \"\\u2720\": 'malt',\n    \"\\u2736\": 'sext',\n    \"\\u2758\": 'VerticalSeparator',\n    \"\\u27C8\": 'bsolhsub',\n    \"\\u27C9\": 'suphsol',\n    \"\\u27F5\": 'xlarr',\n    \"\\u27F6\": 'xrarr',\n    \"\\u27F7\": 'xharr',\n    \"\\u27F8\": 'xlArr',\n    \"\\u27F9\": 'xrArr',\n    \"\\u27FA\": 'xhArr',\n    \"\\u27FC\": 'xmap',\n    \"\\u27FF\": 'dzigrarr',\n    \"\\u2902\": 'nvlArr',\n    \"\\u2903\": 'nvrArr',\n    \"\\u2904\": 'nvHarr',\n    \"\\u2905\": 'Map',\n    \"\\u290C\": 'lbarr',\n    \"\\u290D\": 'rbarr',\n    \"\\u290E\": 'lBarr',\n    \"\\u290F\": 'rBarr',\n    \"\\u2910\": 'RBarr',\n    \"\\u2911\": 'DDotrahd',\n    \"\\u2912\": 'UpArrowBar',\n    \"\\u2913\": 'DownArrowBar',\n    \"\\u2916\": 'Rarrtl',\n    \"\\u2919\": 'latail',\n    \"\\u291A\": 'ratail',\n    \"\\u291B\": 'lAtail',\n    \"\\u291C\": 'rAtail',\n    \"\\u291D\": 'larrfs',\n    \"\\u291E\": 'rarrfs',\n    \"\\u291F\": 'larrbfs',\n    \"\\u2920\": 'rarrbfs',\n    \"\\u2923\": 'nwarhk',\n    \"\\u2924\": 'nearhk',\n    \"\\u2925\": 'searhk',\n    \"\\u2926\": 'swarhk',\n    \"\\u2927\": 'nwnear',\n    \"\\u2928\": 'toea',\n    \"\\u2929\": 'tosa',\n    \"\\u292A\": 'swnwar',\n    \"\\u2933\": 'rarrc',\n    \"\\u2933\\u0338\": 'nrarrc',\n    \"\\u2935\": 'cudarrr',\n    \"\\u2936\": 'ldca',\n    \"\\u2937\": 'rdca',\n    \"\\u2938\": 'cudarrl',\n    \"\\u2939\": 'larrpl',\n    \"\\u293C\": 'curarrm',\n    \"\\u293D\": 'cularrp',\n    \"\\u2945\": 'rarrpl',\n    \"\\u2948\": 'harrcir',\n    \"\\u2949\": 'Uarrocir',\n    \"\\u294A\": 'lurdshar',\n    \"\\u294B\": 'ldrushar',\n    \"\\u294E\": 'LeftRightVector',\n    \"\\u294F\": 'RightUpDownVector',\n    \"\\u2950\": 'DownLeftRightVector',\n    \"\\u2951\": 'LeftUpDownVector',\n    \"\\u2952\": 'LeftVectorBar',\n    \"\\u2953\": 'RightVectorBar',\n    \"\\u2954\": 'RightUpVectorBar',\n    \"\\u2955\": 'RightDownVectorBar',\n    \"\\u2956\": 'DownLeftVectorBar',\n    \"\\u2957\": 'DownRightVectorBar',\n    \"\\u2958\": 'LeftUpVectorBar',\n    \"\\u2959\": 'LeftDownVectorBar',\n    \"\\u295A\": 'LeftTeeVector',\n    \"\\u295B\": 'RightTeeVector',\n    \"\\u295C\": 'RightUpTeeVector',\n    \"\\u295D\": 'RightDownTeeVector',\n    \"\\u295E\": 'DownLeftTeeVector',\n    \"\\u295F\": 'DownRightTeeVector',\n    \"\\u2960\": 'LeftUpTeeVector',\n    \"\\u2961\": 'LeftDownTeeVector',\n    \"\\u2962\": 'lHar',\n    \"\\u2963\": 'uHar',\n    \"\\u2964\": 'rHar',\n    \"\\u2965\": 'dHar',\n    \"\\u2966\": 'luruhar',\n    \"\\u2967\": 'ldrdhar',\n    \"\\u2968\": 'ruluhar',\n    \"\\u2969\": 'rdldhar',\n    \"\\u296A\": 'lharul',\n    \"\\u296B\": 'llhard',\n    \"\\u296C\": 'rharul',\n    \"\\u296D\": 'lrhard',\n    \"\\u296E\": 'udhar',\n    \"\\u296F\": 'duhar',\n    \"\\u2970\": 'RoundImplies',\n    \"\\u2971\": 'erarr',\n    \"\\u2972\": 'simrarr',\n    \"\\u2973\": 'larrsim',\n    \"\\u2974\": 'rarrsim',\n    \"\\u2975\": 'rarrap',\n    \"\\u2976\": 'ltlarr',\n    \"\\u2978\": 'gtrarr',\n    \"\\u2979\": 'subrarr',\n    \"\\u297B\": 'suplarr',\n    \"\\u297C\": 'lfisht',\n    \"\\u297D\": 'rfisht',\n    \"\\u297E\": 'ufisht',\n    \"\\u297F\": 'dfisht',\n    \"\\u299A\": 'vzigzag',\n    \"\\u299C\": 'vangrt',\n    \"\\u299D\": 'angrtvbd',\n    \"\\u29A4\": 'ange',\n    \"\\u29A5\": 'range',\n    \"\\u29A6\": 'dwangle',\n    \"\\u29A7\": 'uwangle',\n    \"\\u29A8\": 'angmsdaa',\n    \"\\u29A9\": 'angmsdab',\n    \"\\u29AA\": 'angmsdac',\n    \"\\u29AB\": 'angmsdad',\n    \"\\u29AC\": 'angmsdae',\n    \"\\u29AD\": 'angmsdaf',\n    \"\\u29AE\": 'angmsdag',\n    \"\\u29AF\": 'angmsdah',\n    \"\\u29B0\": 'bemptyv',\n    \"\\u29B1\": 'demptyv',\n    \"\\u29B2\": 'cemptyv',\n    \"\\u29B3\": 'raemptyv',\n    \"\\u29B4\": 'laemptyv',\n    \"\\u29B5\": 'ohbar',\n    \"\\u29B6\": 'omid',\n    \"\\u29B7\": 'opar',\n    \"\\u29B9\": 'operp',\n    \"\\u29BB\": 'olcross',\n    \"\\u29BC\": 'odsold',\n    \"\\u29BE\": 'olcir',\n    \"\\u29BF\": 'ofcir',\n    \"\\u29C0\": 'olt',\n    \"\\u29C1\": 'ogt',\n    \"\\u29C2\": 'cirscir',\n    \"\\u29C3\": 'cirE',\n    \"\\u29C4\": 'solb',\n    \"\\u29C5\": 'bsolb',\n    \"\\u29C9\": 'boxbox',\n    \"\\u29CD\": 'trisb',\n    \"\\u29CE\": 'rtriltri',\n    \"\\u29CF\": 'LeftTriangleBar',\n    \"\\u29CF\\u0338\": 'NotLeftTriangleBar',\n    \"\\u29D0\": 'RightTriangleBar',\n    \"\\u29D0\\u0338\": 'NotRightTriangleBar',\n    \"\\u29DC\": 'iinfin',\n    \"\\u29DD\": 'infintie',\n    \"\\u29DE\": 'nvinfin',\n    \"\\u29E3\": 'eparsl',\n    \"\\u29E4\": 'smeparsl',\n    \"\\u29E5\": 'eqvparsl',\n    \"\\u29EB\": 'lozf',\n    \"\\u29F4\": 'RuleDelayed',\n    \"\\u29F6\": 'dsol',\n    \"\\u2A00\": 'xodot',\n    \"\\u2A01\": 'xoplus',\n    \"\\u2A02\": 'xotime',\n    \"\\u2A04\": 'xuplus',\n    \"\\u2A06\": 'xsqcup',\n    \"\\u2A0D\": 'fpartint',\n    \"\\u2A10\": 'cirfnint',\n    \"\\u2A11\": 'awint',\n    \"\\u2A12\": 'rppolint',\n    \"\\u2A13\": 'scpolint',\n    \"\\u2A14\": 'npolint',\n    \"\\u2A15\": 'pointint',\n    \"\\u2A16\": 'quatint',\n    \"\\u2A17\": 'intlarhk',\n    \"\\u2A22\": 'pluscir',\n    \"\\u2A23\": 'plusacir',\n    \"\\u2A24\": 'simplus',\n    \"\\u2A25\": 'plusdu',\n    \"\\u2A26\": 'plussim',\n    \"\\u2A27\": 'plustwo',\n    \"\\u2A29\": 'mcomma',\n    \"\\u2A2A\": 'minusdu',\n    \"\\u2A2D\": 'loplus',\n    \"\\u2A2E\": 'roplus',\n    \"\\u2A2F\": 'Cross',\n    \"\\u2A30\": 'timesd',\n    \"\\u2A31\": 'timesbar',\n    \"\\u2A33\": 'smashp',\n    \"\\u2A34\": 'lotimes',\n    \"\\u2A35\": 'rotimes',\n    \"\\u2A36\": 'otimesas',\n    \"\\u2A37\": 'Otimes',\n    \"\\u2A38\": 'odiv',\n    \"\\u2A39\": 'triplus',\n    \"\\u2A3A\": 'triminus',\n    \"\\u2A3B\": 'tritime',\n    \"\\u2A3C\": 'iprod',\n    \"\\u2A3F\": 'amalg',\n    \"\\u2A40\": 'capdot',\n    \"\\u2A42\": 'ncup',\n    \"\\u2A43\": 'ncap',\n    \"\\u2A44\": 'capand',\n    \"\\u2A45\": 'cupor',\n    \"\\u2A46\": 'cupcap',\n    \"\\u2A47\": 'capcup',\n    \"\\u2A48\": 'cupbrcap',\n    \"\\u2A49\": 'capbrcup',\n    \"\\u2A4A\": 'cupcup',\n    \"\\u2A4B\": 'capcap',\n    \"\\u2A4C\": 'ccups',\n    \"\\u2A4D\": 'ccaps',\n    \"\\u2A50\": 'ccupssm',\n    \"\\u2A53\": 'And',\n    \"\\u2A54\": 'Or',\n    \"\\u2A55\": 'andand',\n    \"\\u2A56\": 'oror',\n    \"\\u2A57\": 'orslope',\n    \"\\u2A58\": 'andslope',\n    \"\\u2A5A\": 'andv',\n    \"\\u2A5B\": 'orv',\n    \"\\u2A5C\": 'andd',\n    \"\\u2A5D\": 'ord',\n    \"\\u2A5F\": 'wedbar',\n    \"\\u2A66\": 'sdote',\n    \"\\u2A6A\": 'simdot',\n    \"\\u2A6D\": 'congdot',\n    \"\\u2A6D\\u0338\": 'ncongdot',\n    \"\\u2A6E\": 'easter',\n    \"\\u2A6F\": 'apacir',\n    \"\\u2A70\": 'apE',\n    \"\\u2A70\\u0338\": 'napE',\n    \"\\u2A71\": 'eplus',\n    \"\\u2A72\": 'pluse',\n    \"\\u2A73\": 'Esim',\n    \"\\u2A77\": 'eDDot',\n    \"\\u2A78\": 'equivDD',\n    \"\\u2A79\": 'ltcir',\n    \"\\u2A7A\": 'gtcir',\n    \"\\u2A7B\": 'ltquest',\n    \"\\u2A7C\": 'gtquest',\n    \"\\u2A7D\": 'les',\n    \"\\u2A7D\\u0338\": 'nles',\n    \"\\u2A7E\": 'ges',\n    \"\\u2A7E\\u0338\": 'nges',\n    \"\\u2A7F\": 'lesdot',\n    \"\\u2A80\": 'gesdot',\n    \"\\u2A81\": 'lesdoto',\n    \"\\u2A82\": 'gesdoto',\n    \"\\u2A83\": 'lesdotor',\n    \"\\u2A84\": 'gesdotol',\n    \"\\u2A85\": 'lap',\n    \"\\u2A86\": 'gap',\n    \"\\u2A87\": 'lne',\n    \"\\u2A88\": 'gne',\n    \"\\u2A89\": 'lnap',\n    \"\\u2A8A\": 'gnap',\n    \"\\u2A8B\": 'lEg',\n    \"\\u2A8C\": 'gEl',\n    \"\\u2A8D\": 'lsime',\n    \"\\u2A8E\": 'gsime',\n    \"\\u2A8F\": 'lsimg',\n    \"\\u2A90\": 'gsiml',\n    \"\\u2A91\": 'lgE',\n    \"\\u2A92\": 'glE',\n    \"\\u2A93\": 'lesges',\n    \"\\u2A94\": 'gesles',\n    \"\\u2A95\": 'els',\n    \"\\u2A96\": 'egs',\n    \"\\u2A97\": 'elsdot',\n    \"\\u2A98\": 'egsdot',\n    \"\\u2A99\": 'el',\n    \"\\u2A9A\": 'eg',\n    \"\\u2A9D\": 'siml',\n    \"\\u2A9E\": 'simg',\n    \"\\u2A9F\": 'simlE',\n    \"\\u2AA0\": 'simgE',\n    \"\\u2AA1\": 'LessLess',\n    \"\\u2AA1\\u0338\": 'NotNestedLessLess',\n    \"\\u2AA2\": 'GreaterGreater',\n    \"\\u2AA2\\u0338\": 'NotNestedGreaterGreater',\n    \"\\u2AA4\": 'glj',\n    \"\\u2AA5\": 'gla',\n    \"\\u2AA6\": 'ltcc',\n    \"\\u2AA7\": 'gtcc',\n    \"\\u2AA8\": 'lescc',\n    \"\\u2AA9\": 'gescc',\n    \"\\u2AAA\": 'smt',\n    \"\\u2AAB\": 'lat',\n    \"\\u2AAC\": 'smte',\n    \"\\u2AAC\\uFE00\": 'smtes',\n    \"\\u2AAD\": 'late',\n    \"\\u2AAD\\uFE00\": 'lates',\n    \"\\u2AAE\": 'bumpE',\n    \"\\u2AAF\": 'pre',\n    \"\\u2AAF\\u0338\": 'npre',\n    \"\\u2AB0\": 'sce',\n    \"\\u2AB0\\u0338\": 'nsce',\n    \"\\u2AB3\": 'prE',\n    \"\\u2AB4\": 'scE',\n    \"\\u2AB5\": 'prnE',\n    \"\\u2AB6\": 'scnE',\n    \"\\u2AB7\": 'prap',\n    \"\\u2AB8\": 'scap',\n    \"\\u2AB9\": 'prnap',\n    \"\\u2ABA\": 'scnap',\n    \"\\u2ABB\": 'Pr',\n    \"\\u2ABC\": 'Sc',\n    \"\\u2ABD\": 'subdot',\n    \"\\u2ABE\": 'supdot',\n    \"\\u2ABF\": 'subplus',\n    \"\\u2AC0\": 'supplus',\n    \"\\u2AC1\": 'submult',\n    \"\\u2AC2\": 'supmult',\n    \"\\u2AC3\": 'subedot',\n    \"\\u2AC4\": 'supedot',\n    \"\\u2AC5\": 'subE',\n    \"\\u2AC5\\u0338\": 'nsubE',\n    \"\\u2AC6\": 'supE',\n    \"\\u2AC6\\u0338\": 'nsupE',\n    \"\\u2AC7\": 'subsim',\n    \"\\u2AC8\": 'supsim',\n    \"\\u2ACB\\uFE00\": 'vsubnE',\n    \"\\u2ACB\": 'subnE',\n    \"\\u2ACC\\uFE00\": 'vsupnE',\n    \"\\u2ACC\": 'supnE',\n    \"\\u2ACF\": 'csub',\n    \"\\u2AD0\": 'csup',\n    \"\\u2AD1\": 'csube',\n    \"\\u2AD2\": 'csupe',\n    \"\\u2AD3\": 'subsup',\n    \"\\u2AD4\": 'supsub',\n    \"\\u2AD5\": 'subsub',\n    \"\\u2AD6\": 'supsup',\n    \"\\u2AD7\": 'suphsub',\n    \"\\u2AD8\": 'supdsub',\n    \"\\u2AD9\": 'forkv',\n    \"\\u2ADA\": 'topfork',\n    \"\\u2ADB\": 'mlcp',\n    \"\\u2AE4\": 'Dashv',\n    \"\\u2AE6\": 'Vdashl',\n    \"\\u2AE7\": 'Barv',\n    \"\\u2AE8\": 'vBar',\n    \"\\u2AE9\": 'vBarv',\n    \"\\u2AEB\": 'Vbar',\n    \"\\u2AEC\": 'Not',\n    \"\\u2AED\": 'bNot',\n    \"\\u2AEE\": 'rnmid',\n    \"\\u2AEF\": 'cirmid',\n    \"\\u2AF0\": 'midcir',\n    \"\\u2AF1\": 'topcir',\n    \"\\u2AF2\": 'nhpar',\n    \"\\u2AF3\": 'parsim',\n    \"\\u2AFD\": 'parsl',\n    \"\\u2AFD\\u20E5\": 'nparsl',\n    \"\\u266D\": 'flat',\n    \"\\u266E\": 'natur',\n    \"\\u266F\": 'sharp',\n    '\\xA4': 'curren',\n    '\\xA2': 'cent',\n    '$': 'dollar',\n    '\\xA3': 'pound',\n    '\\xA5': 'yen',\n    \"\\u20AC\": 'euro',\n    '\\xB9': 'sup1',\n    '\\xBD': 'half',\n    \"\\u2153\": 'frac13',\n    '\\xBC': 'frac14',\n    \"\\u2155\": 'frac15',\n    \"\\u2159\": 'frac16',\n    \"\\u215B\": 'frac18',\n    '\\xB2': 'sup2',\n    \"\\u2154\": 'frac23',\n    \"\\u2156\": 'frac25',\n    '\\xB3': 'sup3',\n    '\\xBE': 'frac34',\n    \"\\u2157\": 'frac35',\n    \"\\u215C\": 'frac38',\n    \"\\u2158\": 'frac45',\n    \"\\u215A\": 'frac56',\n    \"\\u215D\": 'frac58',\n    \"\\u215E\": 'frac78',\n    \"\\uD835\\uDCB6\": 'ascr',\n    \"\\uD835\\uDD52\": 'aopf',\n    \"\\uD835\\uDD1E\": 'afr',\n    \"\\uD835\\uDD38\": 'Aopf',\n    \"\\uD835\\uDD04\": 'Afr',\n    \"\\uD835\\uDC9C\": 'Ascr',\n    '\\xAA': 'ordf',\n    '\\xE1': 'aacute',\n    '\\xC1': 'Aacute',\n    '\\xE0': 'agrave',\n    '\\xC0': 'Agrave',\n    \"\\u0103\": 'abreve',\n    \"\\u0102\": 'Abreve',\n    '\\xE2': 'acirc',\n    '\\xC2': 'Acirc',\n    '\\xE5': 'aring',\n    '\\xC5': 'angst',\n    '\\xE4': 'auml',\n    '\\xC4': 'Auml',\n    '\\xE3': 'atilde',\n    '\\xC3': 'Atilde',\n    \"\\u0105\": 'aogon',\n    \"\\u0104\": 'Aogon',\n    \"\\u0101\": 'amacr',\n    \"\\u0100\": 'Amacr',\n    '\\xE6': 'aelig',\n    '\\xC6': 'AElig',\n    \"\\uD835\\uDCB7\": 'bscr',\n    \"\\uD835\\uDD53\": 'bopf',\n    \"\\uD835\\uDD1F\": 'bfr',\n    \"\\uD835\\uDD39\": 'Bopf',\n    \"\\u212C\": 'Bscr',\n    \"\\uD835\\uDD05\": 'Bfr',\n    \"\\uD835\\uDD20\": 'cfr',\n    \"\\uD835\\uDCB8\": 'cscr',\n    \"\\uD835\\uDD54\": 'copf',\n    \"\\u212D\": 'Cfr',\n    \"\\uD835\\uDC9E\": 'Cscr',\n    \"\\u2102\": 'Copf',\n    \"\\u0107\": 'cacute',\n    \"\\u0106\": 'Cacute',\n    \"\\u0109\": 'ccirc',\n    \"\\u0108\": 'Ccirc',\n    \"\\u010D\": 'ccaron',\n    \"\\u010C\": 'Ccaron',\n    \"\\u010B\": 'cdot',\n    \"\\u010A\": 'Cdot',\n    '\\xE7': 'ccedil',\n    '\\xC7': 'Ccedil',\n    \"\\u2105\": 'incare',\n    \"\\uD835\\uDD21\": 'dfr',\n    \"\\u2146\": 'dd',\n    \"\\uD835\\uDD55\": 'dopf',\n    \"\\uD835\\uDCB9\": 'dscr',\n    \"\\uD835\\uDC9F\": 'Dscr',\n    \"\\uD835\\uDD07\": 'Dfr',\n    \"\\u2145\": 'DD',\n    \"\\uD835\\uDD3B\": 'Dopf',\n    \"\\u010F\": 'dcaron',\n    \"\\u010E\": 'Dcaron',\n    \"\\u0111\": 'dstrok',\n    \"\\u0110\": 'Dstrok',\n    '\\xF0': 'eth',\n    '\\xD0': 'ETH',\n    \"\\u2147\": 'ee',\n    \"\\u212F\": 'escr',\n    \"\\uD835\\uDD22\": 'efr',\n    \"\\uD835\\uDD56\": 'eopf',\n    \"\\u2130\": 'Escr',\n    \"\\uD835\\uDD08\": 'Efr',\n    \"\\uD835\\uDD3C\": 'Eopf',\n    '\\xE9': 'eacute',\n    '\\xC9': 'Eacute',\n    '\\xE8': 'egrave',\n    '\\xC8': 'Egrave',\n    '\\xEA': 'ecirc',\n    '\\xCA': 'Ecirc',\n    \"\\u011B\": 'ecaron',\n    \"\\u011A\": 'Ecaron',\n    '\\xEB': 'euml',\n    '\\xCB': 'Euml',\n    \"\\u0117\": 'edot',\n    \"\\u0116\": 'Edot',\n    \"\\u0119\": 'eogon',\n    \"\\u0118\": 'Eogon',\n    \"\\u0113\": 'emacr',\n    \"\\u0112\": 'Emacr',\n    \"\\uD835\\uDD23\": 'ffr',\n    \"\\uD835\\uDD57\": 'fopf',\n    \"\\uD835\\uDCBB\": 'fscr',\n    \"\\uD835\\uDD09\": 'Ffr',\n    \"\\uD835\\uDD3D\": 'Fopf',\n    \"\\u2131\": 'Fscr',\n    \"\\uFB00\": 'fflig',\n    \"\\uFB03\": 'ffilig',\n    \"\\uFB04\": 'ffllig',\n    \"\\uFB01\": 'filig',\n    'fj': 'fjlig',\n    \"\\uFB02\": 'fllig',\n    \"\\u0192\": 'fnof',\n    \"\\u210A\": 'gscr',\n    \"\\uD835\\uDD58\": 'gopf',\n    \"\\uD835\\uDD24\": 'gfr',\n    \"\\uD835\\uDCA2\": 'Gscr',\n    \"\\uD835\\uDD3E\": 'Gopf',\n    \"\\uD835\\uDD0A\": 'Gfr',\n    \"\\u01F5\": 'gacute',\n    \"\\u011F\": 'gbreve',\n    \"\\u011E\": 'Gbreve',\n    \"\\u011D\": 'gcirc',\n    \"\\u011C\": 'Gcirc',\n    \"\\u0121\": 'gdot',\n    \"\\u0120\": 'Gdot',\n    \"\\u0122\": 'Gcedil',\n    \"\\uD835\\uDD25\": 'hfr',\n    \"\\u210E\": 'planckh',\n    \"\\uD835\\uDCBD\": 'hscr',\n    \"\\uD835\\uDD59\": 'hopf',\n    \"\\u210B\": 'Hscr',\n    \"\\u210C\": 'Hfr',\n    \"\\u210D\": 'Hopf',\n    \"\\u0125\": 'hcirc',\n    \"\\u0124\": 'Hcirc',\n    \"\\u210F\": 'hbar',\n    \"\\u0127\": 'hstrok',\n    \"\\u0126\": 'Hstrok',\n    \"\\uD835\\uDD5A\": 'iopf',\n    \"\\uD835\\uDD26\": 'ifr',\n    \"\\uD835\\uDCBE\": 'iscr',\n    \"\\u2148\": 'ii',\n    \"\\uD835\\uDD40\": 'Iopf',\n    \"\\u2110\": 'Iscr',\n    \"\\u2111\": 'Im',\n    '\\xED': 'iacute',\n    '\\xCD': 'Iacute',\n    '\\xEC': 'igrave',\n    '\\xCC': 'Igrave',\n    '\\xEE': 'icirc',\n    '\\xCE': 'Icirc',\n    '\\xEF': 'iuml',\n    '\\xCF': 'Iuml',\n    \"\\u0129\": 'itilde',\n    \"\\u0128\": 'Itilde',\n    \"\\u0130\": 'Idot',\n    \"\\u012F\": 'iogon',\n    \"\\u012E\": 'Iogon',\n    \"\\u012B\": 'imacr',\n    \"\\u012A\": 'Imacr',\n    \"\\u0133\": 'ijlig',\n    \"\\u0132\": 'IJlig',\n    \"\\u0131\": 'imath',\n    \"\\uD835\\uDCBF\": 'jscr',\n    \"\\uD835\\uDD5B\": 'jopf',\n    \"\\uD835\\uDD27\": 'jfr',\n    \"\\uD835\\uDCA5\": 'Jscr',\n    \"\\uD835\\uDD0D\": 'Jfr',\n    \"\\uD835\\uDD41\": 'Jopf',\n    \"\\u0135\": 'jcirc',\n    \"\\u0134\": 'Jcirc',\n    \"\\u0237\": 'jmath',\n    \"\\uD835\\uDD5C\": 'kopf',\n    \"\\uD835\\uDCC0\": 'kscr',\n    \"\\uD835\\uDD28\": 'kfr',\n    \"\\uD835\\uDCA6\": 'Kscr',\n    \"\\uD835\\uDD42\": 'Kopf',\n    \"\\uD835\\uDD0E\": 'Kfr',\n    \"\\u0137\": 'kcedil',\n    \"\\u0136\": 'Kcedil',\n    \"\\uD835\\uDD29\": 'lfr',\n    \"\\uD835\\uDCC1\": 'lscr',\n    \"\\u2113\": 'ell',\n    \"\\uD835\\uDD5D\": 'lopf',\n    \"\\u2112\": 'Lscr',\n    \"\\uD835\\uDD0F\": 'Lfr',\n    \"\\uD835\\uDD43\": 'Lopf',\n    \"\\u013A\": 'lacute',\n    \"\\u0139\": 'Lacute',\n    \"\\u013E\": 'lcaron',\n    \"\\u013D\": 'Lcaron',\n    \"\\u013C\": 'lcedil',\n    \"\\u013B\": 'Lcedil',\n    \"\\u0142\": 'lstrok',\n    \"\\u0141\": 'Lstrok',\n    \"\\u0140\": 'lmidot',\n    \"\\u013F\": 'Lmidot',\n    \"\\uD835\\uDD2A\": 'mfr',\n    \"\\uD835\\uDD5E\": 'mopf',\n    \"\\uD835\\uDCC2\": 'mscr',\n    \"\\uD835\\uDD10\": 'Mfr',\n    \"\\uD835\\uDD44\": 'Mopf',\n    \"\\u2133\": 'Mscr',\n    \"\\uD835\\uDD2B\": 'nfr',\n    \"\\uD835\\uDD5F\": 'nopf',\n    \"\\uD835\\uDCC3\": 'nscr',\n    \"\\u2115\": 'Nopf',\n    \"\\uD835\\uDCA9\": 'Nscr',\n    \"\\uD835\\uDD11\": 'Nfr',\n    \"\\u0144\": 'nacute',\n    \"\\u0143\": 'Nacute',\n    \"\\u0148\": 'ncaron',\n    \"\\u0147\": 'Ncaron',\n    '\\xF1': 'ntilde',\n    '\\xD1': 'Ntilde',\n    \"\\u0146\": 'ncedil',\n    \"\\u0145\": 'Ncedil',\n    \"\\u2116\": 'numero',\n    \"\\u014B\": 'eng',\n    \"\\u014A\": 'ENG',\n    \"\\uD835\\uDD60\": 'oopf',\n    \"\\uD835\\uDD2C\": 'ofr',\n    \"\\u2134\": 'oscr',\n    \"\\uD835\\uDCAA\": 'Oscr',\n    \"\\uD835\\uDD12\": 'Ofr',\n    \"\\uD835\\uDD46\": 'Oopf',\n    '\\xBA': 'ordm',\n    '\\xF3': 'oacute',\n    '\\xD3': 'Oacute',\n    '\\xF2': 'ograve',\n    '\\xD2': 'Ograve',\n    '\\xF4': 'ocirc',\n    '\\xD4': 'Ocirc',\n    '\\xF6': 'ouml',\n    '\\xD6': 'Ouml',\n    \"\\u0151\": 'odblac',\n    \"\\u0150\": 'Odblac',\n    '\\xF5': 'otilde',\n    '\\xD5': 'Otilde',\n    '\\xF8': 'oslash',\n    '\\xD8': 'Oslash',\n    \"\\u014D\": 'omacr',\n    \"\\u014C\": 'Omacr',\n    \"\\u0153\": 'oelig',\n    \"\\u0152\": 'OElig',\n    \"\\uD835\\uDD2D\": 'pfr',\n    \"\\uD835\\uDCC5\": 'pscr',\n    \"\\uD835\\uDD61\": 'popf',\n    \"\\u2119\": 'Popf',\n    \"\\uD835\\uDD13\": 'Pfr',\n    \"\\uD835\\uDCAB\": 'Pscr',\n    \"\\uD835\\uDD62\": 'qopf',\n    \"\\uD835\\uDD2E\": 'qfr',\n    \"\\uD835\\uDCC6\": 'qscr',\n    \"\\uD835\\uDCAC\": 'Qscr',\n    \"\\uD835\\uDD14\": 'Qfr',\n    \"\\u211A\": 'Qopf',\n    \"\\u0138\": 'kgreen',\n    \"\\uD835\\uDD2F\": 'rfr',\n    \"\\uD835\\uDD63\": 'ropf',\n    \"\\uD835\\uDCC7\": 'rscr',\n    \"\\u211B\": 'Rscr',\n    \"\\u211C\": 'Re',\n    \"\\u211D\": 'Ropf',\n    \"\\u0155\": 'racute',\n    \"\\u0154\": 'Racute',\n    \"\\u0159\": 'rcaron',\n    \"\\u0158\": 'Rcaron',\n    \"\\u0157\": 'rcedil',\n    \"\\u0156\": 'Rcedil',\n    \"\\uD835\\uDD64\": 'sopf',\n    \"\\uD835\\uDCC8\": 'sscr',\n    \"\\uD835\\uDD30\": 'sfr',\n    \"\\uD835\\uDD4A\": 'Sopf',\n    \"\\uD835\\uDD16\": 'Sfr',\n    \"\\uD835\\uDCAE\": 'Sscr',\n    \"\\u24C8\": 'oS',\n    \"\\u015B\": 'sacute',\n    \"\\u015A\": 'Sacute',\n    \"\\u015D\": 'scirc',\n    \"\\u015C\": 'Scirc',\n    \"\\u0161\": 'scaron',\n    \"\\u0160\": 'Scaron',\n    \"\\u015F\": 'scedil',\n    \"\\u015E\": 'Scedil',\n    '\\xDF': 'szlig',\n    \"\\uD835\\uDD31\": 'tfr',\n    \"\\uD835\\uDCC9\": 'tscr',\n    \"\\uD835\\uDD65\": 'topf',\n    \"\\uD835\\uDCAF\": 'Tscr',\n    \"\\uD835\\uDD17\": 'Tfr',\n    \"\\uD835\\uDD4B\": 'Topf',\n    \"\\u0165\": 'tcaron',\n    \"\\u0164\": 'Tcaron',\n    \"\\u0163\": 'tcedil',\n    \"\\u0162\": 'Tcedil',\n    \"\\u2122\": 'trade',\n    \"\\u0167\": 'tstrok',\n    \"\\u0166\": 'Tstrok',\n    \"\\uD835\\uDCCA\": 'uscr',\n    \"\\uD835\\uDD66\": 'uopf',\n    \"\\uD835\\uDD32\": 'ufr',\n    \"\\uD835\\uDD4C\": 'Uopf',\n    \"\\uD835\\uDD18\": 'Ufr',\n    \"\\uD835\\uDCB0\": 'Uscr',\n    '\\xFA': 'uacute',\n    '\\xDA': 'Uacute',\n    '\\xF9': 'ugrave',\n    '\\xD9': 'Ugrave',\n    \"\\u016D\": 'ubreve',\n    \"\\u016C\": 'Ubreve',\n    '\\xFB': 'ucirc',\n    '\\xDB': 'Ucirc',\n    \"\\u016F\": 'uring',\n    \"\\u016E\": 'Uring',\n    '\\xFC': 'uuml',\n    '\\xDC': 'Uuml',\n    \"\\u0171\": 'udblac',\n    \"\\u0170\": 'Udblac',\n    \"\\u0169\": 'utilde',\n    \"\\u0168\": 'Utilde',\n    \"\\u0173\": 'uogon',\n    \"\\u0172\": 'Uogon',\n    \"\\u016B\": 'umacr',\n    \"\\u016A\": 'Umacr',\n    \"\\uD835\\uDD33\": 'vfr',\n    \"\\uD835\\uDD67\": 'vopf',\n    \"\\uD835\\uDCCB\": 'vscr',\n    \"\\uD835\\uDD19\": 'Vfr',\n    \"\\uD835\\uDD4D\": 'Vopf',\n    \"\\uD835\\uDCB1\": 'Vscr',\n    \"\\uD835\\uDD68\": 'wopf',\n    \"\\uD835\\uDCCC\": 'wscr',\n    \"\\uD835\\uDD34\": 'wfr',\n    \"\\uD835\\uDCB2\": 'Wscr',\n    \"\\uD835\\uDD4E\": 'Wopf',\n    \"\\uD835\\uDD1A\": 'Wfr',\n    \"\\u0175\": 'wcirc',\n    \"\\u0174\": 'Wcirc',\n    \"\\uD835\\uDD35\": 'xfr',\n    \"\\uD835\\uDCCD\": 'xscr',\n    \"\\uD835\\uDD69\": 'xopf',\n    \"\\uD835\\uDD4F\": 'Xopf',\n    \"\\uD835\\uDD1B\": 'Xfr',\n    \"\\uD835\\uDCB3\": 'Xscr',\n    \"\\uD835\\uDD36\": 'yfr',\n    \"\\uD835\\uDCCE\": 'yscr',\n    \"\\uD835\\uDD6A\": 'yopf',\n    \"\\uD835\\uDCB4\": 'Yscr',\n    \"\\uD835\\uDD1C\": 'Yfr',\n    \"\\uD835\\uDD50\": 'Yopf',\n    '\\xFD': 'yacute',\n    '\\xDD': 'Yacute',\n    \"\\u0177\": 'ycirc',\n    \"\\u0176\": 'Ycirc',\n    '\\xFF': 'yuml',\n    \"\\u0178\": 'Yuml',\n    \"\\uD835\\uDCCF\": 'zscr',\n    \"\\uD835\\uDD37\": 'zfr',\n    \"\\uD835\\uDD6B\": 'zopf',\n    \"\\u2128\": 'Zfr',\n    \"\\u2124\": 'Zopf',\n    \"\\uD835\\uDCB5\": 'Zscr',\n    \"\\u017A\": 'zacute',\n    \"\\u0179\": 'Zacute',\n    \"\\u017E\": 'zcaron',\n    \"\\u017D\": 'Zcaron',\n    \"\\u017C\": 'zdot',\n    \"\\u017B\": 'Zdot',\n    \"\\u01B5\": 'imped',\n    '\\xFE': 'thorn',\n    '\\xDE': 'THORN',\n    \"\\u0149\": 'napos',\n    \"\\u03B1\": 'alpha',\n    \"\\u0391\": 'Alpha',\n    \"\\u03B2\": 'beta',\n    \"\\u0392\": 'Beta',\n    \"\\u03B3\": 'gamma',\n    \"\\u0393\": 'Gamma',\n    \"\\u03B4\": 'delta',\n    \"\\u0394\": 'Delta',\n    \"\\u03B5\": 'epsi',\n    \"\\u03F5\": 'epsiv',\n    \"\\u0395\": 'Epsilon',\n    \"\\u03DD\": 'gammad',\n    \"\\u03DC\": 'Gammad',\n    \"\\u03B6\": 'zeta',\n    \"\\u0396\": 'Zeta',\n    \"\\u03B7\": 'eta',\n    \"\\u0397\": 'Eta',\n    \"\\u03B8\": 'theta',\n    \"\\u03D1\": 'thetav',\n    \"\\u0398\": 'Theta',\n    \"\\u03B9\": 'iota',\n    \"\\u0399\": 'Iota',\n    \"\\u03BA\": 'kappa',\n    \"\\u03F0\": 'kappav',\n    \"\\u039A\": 'Kappa',\n    \"\\u03BB\": 'lambda',\n    \"\\u039B\": 'Lambda',\n    \"\\u03BC\": 'mu',\n    '\\xB5': 'micro',\n    \"\\u039C\": 'Mu',\n    \"\\u03BD\": 'nu',\n    \"\\u039D\": 'Nu',\n    \"\\u03BE\": 'xi',\n    \"\\u039E\": 'Xi',\n    \"\\u03BF\": 'omicron',\n    \"\\u039F\": 'Omicron',\n    \"\\u03C0\": 'pi',\n    \"\\u03D6\": 'piv',\n    \"\\u03A0\": 'Pi',\n    \"\\u03C1\": 'rho',\n    \"\\u03F1\": 'rhov',\n    \"\\u03A1\": 'Rho',\n    \"\\u03C3\": 'sigma',\n    \"\\u03A3\": 'Sigma',\n    \"\\u03C2\": 'sigmaf',\n    \"\\u03C4\": 'tau',\n    \"\\u03A4\": 'Tau',\n    \"\\u03C5\": 'upsi',\n    \"\\u03A5\": 'Upsilon',\n    \"\\u03D2\": 'Upsi',\n    \"\\u03C6\": 'phi',\n    \"\\u03D5\": 'phiv',\n    \"\\u03A6\": 'Phi',\n    \"\\u03C7\": 'chi',\n    \"\\u03A7\": 'Chi',\n    \"\\u03C8\": 'psi',\n    \"\\u03A8\": 'Psi',\n    \"\\u03C9\": 'omega',\n    \"\\u03A9\": 'ohm',\n    \"\\u0430\": 'acy',\n    \"\\u0410\": 'Acy',\n    \"\\u0431\": 'bcy',\n    \"\\u0411\": 'Bcy',\n    \"\\u0432\": 'vcy',\n    \"\\u0412\": 'Vcy',\n    \"\\u0433\": 'gcy',\n    \"\\u0413\": 'Gcy',\n    \"\\u0453\": 'gjcy',\n    \"\\u0403\": 'GJcy',\n    \"\\u0434\": 'dcy',\n    \"\\u0414\": 'Dcy',\n    \"\\u0452\": 'djcy',\n    \"\\u0402\": 'DJcy',\n    \"\\u0435\": 'iecy',\n    \"\\u0415\": 'IEcy',\n    \"\\u0451\": 'iocy',\n    \"\\u0401\": 'IOcy',\n    \"\\u0454\": 'jukcy',\n    \"\\u0404\": 'Jukcy',\n    \"\\u0436\": 'zhcy',\n    \"\\u0416\": 'ZHcy',\n    \"\\u0437\": 'zcy',\n    \"\\u0417\": 'Zcy',\n    \"\\u0455\": 'dscy',\n    \"\\u0405\": 'DScy',\n    \"\\u0438\": 'icy',\n    \"\\u0418\": 'Icy',\n    \"\\u0456\": 'iukcy',\n    \"\\u0406\": 'Iukcy',\n    \"\\u0457\": 'yicy',\n    \"\\u0407\": 'YIcy',\n    \"\\u0439\": 'jcy',\n    \"\\u0419\": 'Jcy',\n    \"\\u0458\": 'jsercy',\n    \"\\u0408\": 'Jsercy',\n    \"\\u043A\": 'kcy',\n    \"\\u041A\": 'Kcy',\n    \"\\u045C\": 'kjcy',\n    \"\\u040C\": 'KJcy',\n    \"\\u043B\": 'lcy',\n    \"\\u041B\": 'Lcy',\n    \"\\u0459\": 'ljcy',\n    \"\\u0409\": 'LJcy',\n    \"\\u043C\": 'mcy',\n    \"\\u041C\": 'Mcy',\n    \"\\u043D\": 'ncy',\n    \"\\u041D\": 'Ncy',\n    \"\\u045A\": 'njcy',\n    \"\\u040A\": 'NJcy',\n    \"\\u043E\": 'ocy',\n    \"\\u041E\": 'Ocy',\n    \"\\u043F\": 'pcy',\n    \"\\u041F\": 'Pcy',\n    \"\\u0440\": 'rcy',\n    \"\\u0420\": 'Rcy',\n    \"\\u0441\": 'scy',\n    \"\\u0421\": 'Scy',\n    \"\\u0442\": 'tcy',\n    \"\\u0422\": 'Tcy',\n    \"\\u045B\": 'tshcy',\n    \"\\u040B\": 'TSHcy',\n    \"\\u0443\": 'ucy',\n    \"\\u0423\": 'Ucy',\n    \"\\u045E\": 'ubrcy',\n    \"\\u040E\": 'Ubrcy',\n    \"\\u0444\": 'fcy',\n    \"\\u0424\": 'Fcy',\n    \"\\u0445\": 'khcy',\n    \"\\u0425\": 'KHcy',\n    \"\\u0446\": 'tscy',\n    \"\\u0426\": 'TScy',\n    \"\\u0447\": 'chcy',\n    \"\\u0427\": 'CHcy',\n    \"\\u045F\": 'dzcy',\n    \"\\u040F\": 'DZcy',\n    \"\\u0448\": 'shcy',\n    \"\\u0428\": 'SHcy',\n    \"\\u0449\": 'shchcy',\n    \"\\u0429\": 'SHCHcy',\n    \"\\u044A\": 'hardcy',\n    \"\\u042A\": 'HARDcy',\n    \"\\u044B\": 'ycy',\n    \"\\u042B\": 'Ycy',\n    \"\\u044C\": 'softcy',\n    \"\\u042C\": 'SOFTcy',\n    \"\\u044D\": 'ecy',\n    \"\\u042D\": 'Ecy',\n    \"\\u044E\": 'yucy',\n    \"\\u042E\": 'YUcy',\n    \"\\u044F\": 'yacy',\n    \"\\u042F\": 'YAcy',\n    \"\\u2135\": 'aleph',\n    \"\\u2136\": 'beth',\n    \"\\u2137\": 'gimel',\n    \"\\u2138\": 'daleth'\n  };\n  var regexEscape = /[\"&'<>`]/g;\n  var escapeMap = {\n    '\"': '&quot;',\n    '&': '&amp;',\n    '\\'': '&#x27;',\n    '<': '&lt;',\n    // See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n    // following is not strictly necessary unless it’s part of a tag or an\n    // unquoted attribute value. We’re only escaping it to support those\n    // situations, and for XML support.\n    '>': '&gt;',\n    // In Internet Explorer ≤ 8, the backtick character can be used\n    // to break out of (un)quoted attribute values or HTML comments.\n    // See http://html5sec.org/#102, http://html5sec.org/#108, and\n    // http://html5sec.org/#133.\n    '`': '&#x60;'\n  };\n  var regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n  var regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n  var regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;\n  var decodeMap = {\n    'aacute': '\\xE1',\n    'Aacute': '\\xC1',\n    'abreve': \"\\u0103\",\n    'Abreve': \"\\u0102\",\n    'ac': \"\\u223E\",\n    'acd': \"\\u223F\",\n    'acE': \"\\u223E\\u0333\",\n    'acirc': '\\xE2',\n    'Acirc': '\\xC2',\n    'acute': '\\xB4',\n    'acy': \"\\u0430\",\n    'Acy': \"\\u0410\",\n    'aelig': '\\xE6',\n    'AElig': '\\xC6',\n    'af': \"\\u2061\",\n    'afr': \"\\uD835\\uDD1E\",\n    'Afr': \"\\uD835\\uDD04\",\n    'agrave': '\\xE0',\n    'Agrave': '\\xC0',\n    'alefsym': \"\\u2135\",\n    'aleph': \"\\u2135\",\n    'alpha': \"\\u03B1\",\n    'Alpha': \"\\u0391\",\n    'amacr': \"\\u0101\",\n    'Amacr': \"\\u0100\",\n    'amalg': \"\\u2A3F\",\n    'amp': '&',\n    'AMP': '&',\n    'and': \"\\u2227\",\n    'And': \"\\u2A53\",\n    'andand': \"\\u2A55\",\n    'andd': \"\\u2A5C\",\n    'andslope': \"\\u2A58\",\n    'andv': \"\\u2A5A\",\n    'ang': \"\\u2220\",\n    'ange': \"\\u29A4\",\n    'angle': \"\\u2220\",\n    'angmsd': \"\\u2221\",\n    'angmsdaa': \"\\u29A8\",\n    'angmsdab': \"\\u29A9\",\n    'angmsdac': \"\\u29AA\",\n    'angmsdad': \"\\u29AB\",\n    'angmsdae': \"\\u29AC\",\n    'angmsdaf': \"\\u29AD\",\n    'angmsdag': \"\\u29AE\",\n    'angmsdah': \"\\u29AF\",\n    'angrt': \"\\u221F\",\n    'angrtvb': \"\\u22BE\",\n    'angrtvbd': \"\\u299D\",\n    'angsph': \"\\u2222\",\n    'angst': '\\xC5',\n    'angzarr': \"\\u237C\",\n    'aogon': \"\\u0105\",\n    'Aogon': \"\\u0104\",\n    'aopf': \"\\uD835\\uDD52\",\n    'Aopf': \"\\uD835\\uDD38\",\n    'ap': \"\\u2248\",\n    'apacir': \"\\u2A6F\",\n    'ape': \"\\u224A\",\n    'apE': \"\\u2A70\",\n    'apid': \"\\u224B\",\n    'apos': '\\'',\n    'ApplyFunction': \"\\u2061\",\n    'approx': \"\\u2248\",\n    'approxeq': \"\\u224A\",\n    'aring': '\\xE5',\n    'Aring': '\\xC5',\n    'ascr': \"\\uD835\\uDCB6\",\n    'Ascr': \"\\uD835\\uDC9C\",\n    'Assign': \"\\u2254\",\n    'ast': '*',\n    'asymp': \"\\u2248\",\n    'asympeq': \"\\u224D\",\n    'atilde': '\\xE3',\n    'Atilde': '\\xC3',\n    'auml': '\\xE4',\n    'Auml': '\\xC4',\n    'awconint': \"\\u2233\",\n    'awint': \"\\u2A11\",\n    'backcong': \"\\u224C\",\n    'backepsilon': \"\\u03F6\",\n    'backprime': \"\\u2035\",\n    'backsim': \"\\u223D\",\n    'backsimeq': \"\\u22CD\",\n    'Backslash': \"\\u2216\",\n    'Barv': \"\\u2AE7\",\n    'barvee': \"\\u22BD\",\n    'barwed': \"\\u2305\",\n    'Barwed': \"\\u2306\",\n    'barwedge': \"\\u2305\",\n    'bbrk': \"\\u23B5\",\n    'bbrktbrk': \"\\u23B6\",\n    'bcong': \"\\u224C\",\n    'bcy': \"\\u0431\",\n    'Bcy': \"\\u0411\",\n    'bdquo': \"\\u201E\",\n    'becaus': \"\\u2235\",\n    'because': \"\\u2235\",\n    'Because': \"\\u2235\",\n    'bemptyv': \"\\u29B0\",\n    'bepsi': \"\\u03F6\",\n    'bernou': \"\\u212C\",\n    'Bernoullis': \"\\u212C\",\n    'beta': \"\\u03B2\",\n    'Beta': \"\\u0392\",\n    'beth': \"\\u2136\",\n    'between': \"\\u226C\",\n    'bfr': \"\\uD835\\uDD1F\",\n    'Bfr': \"\\uD835\\uDD05\",\n    'bigcap': \"\\u22C2\",\n    'bigcirc': \"\\u25EF\",\n    'bigcup': \"\\u22C3\",\n    'bigodot': \"\\u2A00\",\n    'bigoplus': \"\\u2A01\",\n    'bigotimes': \"\\u2A02\",\n    'bigsqcup': \"\\u2A06\",\n    'bigstar': \"\\u2605\",\n    'bigtriangledown': \"\\u25BD\",\n    'bigtriangleup': \"\\u25B3\",\n    'biguplus': \"\\u2A04\",\n    'bigvee': \"\\u22C1\",\n    'bigwedge': \"\\u22C0\",\n    'bkarow': \"\\u290D\",\n    'blacklozenge': \"\\u29EB\",\n    'blacksquare': \"\\u25AA\",\n    'blacktriangle': \"\\u25B4\",\n    'blacktriangledown': \"\\u25BE\",\n    'blacktriangleleft': \"\\u25C2\",\n    'blacktriangleright': \"\\u25B8\",\n    'blank': \"\\u2423\",\n    'blk12': \"\\u2592\",\n    'blk14': \"\\u2591\",\n    'blk34': \"\\u2593\",\n    'block': \"\\u2588\",\n    'bne': \"=\\u20E5\",\n    'bnequiv': \"\\u2261\\u20E5\",\n    'bnot': \"\\u2310\",\n    'bNot': \"\\u2AED\",\n    'bopf': \"\\uD835\\uDD53\",\n    'Bopf': \"\\uD835\\uDD39\",\n    'bot': \"\\u22A5\",\n    'bottom': \"\\u22A5\",\n    'bowtie': \"\\u22C8\",\n    'boxbox': \"\\u29C9\",\n    'boxdl': \"\\u2510\",\n    'boxdL': \"\\u2555\",\n    'boxDl': \"\\u2556\",\n    'boxDL': \"\\u2557\",\n    'boxdr': \"\\u250C\",\n    'boxdR': \"\\u2552\",\n    'boxDr': \"\\u2553\",\n    'boxDR': \"\\u2554\",\n    'boxh': \"\\u2500\",\n    'boxH': \"\\u2550\",\n    'boxhd': \"\\u252C\",\n    'boxhD': \"\\u2565\",\n    'boxHd': \"\\u2564\",\n    'boxHD': \"\\u2566\",\n    'boxhu': \"\\u2534\",\n    'boxhU': \"\\u2568\",\n    'boxHu': \"\\u2567\",\n    'boxHU': \"\\u2569\",\n    'boxminus': \"\\u229F\",\n    'boxplus': \"\\u229E\",\n    'boxtimes': \"\\u22A0\",\n    'boxul': \"\\u2518\",\n    'boxuL': \"\\u255B\",\n    'boxUl': \"\\u255C\",\n    'boxUL': \"\\u255D\",\n    'boxur': \"\\u2514\",\n    'boxuR': \"\\u2558\",\n    'boxUr': \"\\u2559\",\n    'boxUR': \"\\u255A\",\n    'boxv': \"\\u2502\",\n    'boxV': \"\\u2551\",\n    'boxvh': \"\\u253C\",\n    'boxvH': \"\\u256A\",\n    'boxVh': \"\\u256B\",\n    'boxVH': \"\\u256C\",\n    'boxvl': \"\\u2524\",\n    'boxvL': \"\\u2561\",\n    'boxVl': \"\\u2562\",\n    'boxVL': \"\\u2563\",\n    'boxvr': \"\\u251C\",\n    'boxvR': \"\\u255E\",\n    'boxVr': \"\\u255F\",\n    'boxVR': \"\\u2560\",\n    'bprime': \"\\u2035\",\n    'breve': \"\\u02D8\",\n    'Breve': \"\\u02D8\",\n    'brvbar': '\\xA6',\n    'bscr': \"\\uD835\\uDCB7\",\n    'Bscr': \"\\u212C\",\n    'bsemi': \"\\u204F\",\n    'bsim': \"\\u223D\",\n    'bsime': \"\\u22CD\",\n    'bsol': '\\\\',\n    'bsolb': \"\\u29C5\",\n    'bsolhsub': \"\\u27C8\",\n    'bull': \"\\u2022\",\n    'bullet': \"\\u2022\",\n    'bump': \"\\u224E\",\n    'bumpe': \"\\u224F\",\n    'bumpE': \"\\u2AAE\",\n    'bumpeq': \"\\u224F\",\n    'Bumpeq': \"\\u224E\",\n    'cacute': \"\\u0107\",\n    'Cacute': \"\\u0106\",\n    'cap': \"\\u2229\",\n    'Cap': \"\\u22D2\",\n    'capand': \"\\u2A44\",\n    'capbrcup': \"\\u2A49\",\n    'capcap': \"\\u2A4B\",\n    'capcup': \"\\u2A47\",\n    'capdot': \"\\u2A40\",\n    'CapitalDifferentialD': \"\\u2145\",\n    'caps': \"\\u2229\\uFE00\",\n    'caret': \"\\u2041\",\n    'caron': \"\\u02C7\",\n    'Cayleys': \"\\u212D\",\n    'ccaps': \"\\u2A4D\",\n    'ccaron': \"\\u010D\",\n    'Ccaron': \"\\u010C\",\n    'ccedil': '\\xE7',\n    'Ccedil': '\\xC7',\n    'ccirc': \"\\u0109\",\n    'Ccirc': \"\\u0108\",\n    'Cconint': \"\\u2230\",\n    'ccups': \"\\u2A4C\",\n    'ccupssm': \"\\u2A50\",\n    'cdot': \"\\u010B\",\n    'Cdot': \"\\u010A\",\n    'cedil': '\\xB8',\n    'Cedilla': '\\xB8',\n    'cemptyv': \"\\u29B2\",\n    'cent': '\\xA2',\n    'centerdot': '\\xB7',\n    'CenterDot': '\\xB7',\n    'cfr': \"\\uD835\\uDD20\",\n    'Cfr': \"\\u212D\",\n    'chcy': \"\\u0447\",\n    'CHcy': \"\\u0427\",\n    'check': \"\\u2713\",\n    'checkmark': \"\\u2713\",\n    'chi': \"\\u03C7\",\n    'Chi': \"\\u03A7\",\n    'cir': \"\\u25CB\",\n    'circ': \"\\u02C6\",\n    'circeq': \"\\u2257\",\n    'circlearrowleft': \"\\u21BA\",\n    'circlearrowright': \"\\u21BB\",\n    'circledast': \"\\u229B\",\n    'circledcirc': \"\\u229A\",\n    'circleddash': \"\\u229D\",\n    'CircleDot': \"\\u2299\",\n    'circledR': '\\xAE',\n    'circledS': \"\\u24C8\",\n    'CircleMinus': \"\\u2296\",\n    'CirclePlus': \"\\u2295\",\n    'CircleTimes': \"\\u2297\",\n    'cire': \"\\u2257\",\n    'cirE': \"\\u29C3\",\n    'cirfnint': \"\\u2A10\",\n    'cirmid': \"\\u2AEF\",\n    'cirscir': \"\\u29C2\",\n    'ClockwiseContourIntegral': \"\\u2232\",\n    'CloseCurlyDoubleQuote': \"\\u201D\",\n    'CloseCurlyQuote': \"\\u2019\",\n    'clubs': \"\\u2663\",\n    'clubsuit': \"\\u2663\",\n    'colon': ':',\n    'Colon': \"\\u2237\",\n    'colone': \"\\u2254\",\n    'Colone': \"\\u2A74\",\n    'coloneq': \"\\u2254\",\n    'comma': ',',\n    'commat': '@',\n    'comp': \"\\u2201\",\n    'compfn': \"\\u2218\",\n    'complement': \"\\u2201\",\n    'complexes': \"\\u2102\",\n    'cong': \"\\u2245\",\n    'congdot': \"\\u2A6D\",\n    'Congruent': \"\\u2261\",\n    'conint': \"\\u222E\",\n    'Conint': \"\\u222F\",\n    'ContourIntegral': \"\\u222E\",\n    'copf': \"\\uD835\\uDD54\",\n    'Copf': \"\\u2102\",\n    'coprod': \"\\u2210\",\n    'Coproduct': \"\\u2210\",\n    'copy': '\\xA9',\n    'COPY': '\\xA9',\n    'copysr': \"\\u2117\",\n    'CounterClockwiseContourIntegral': \"\\u2233\",\n    'crarr': \"\\u21B5\",\n    'cross': \"\\u2717\",\n    'Cross': \"\\u2A2F\",\n    'cscr': \"\\uD835\\uDCB8\",\n    'Cscr': \"\\uD835\\uDC9E\",\n    'csub': \"\\u2ACF\",\n    'csube': \"\\u2AD1\",\n    'csup': \"\\u2AD0\",\n    'csupe': \"\\u2AD2\",\n    'ctdot': \"\\u22EF\",\n    'cudarrl': \"\\u2938\",\n    'cudarrr': \"\\u2935\",\n    'cuepr': \"\\u22DE\",\n    'cuesc': \"\\u22DF\",\n    'cularr': \"\\u21B6\",\n    'cularrp': \"\\u293D\",\n    'cup': \"\\u222A\",\n    'Cup': \"\\u22D3\",\n    'cupbrcap': \"\\u2A48\",\n    'cupcap': \"\\u2A46\",\n    'CupCap': \"\\u224D\",\n    'cupcup': \"\\u2A4A\",\n    'cupdot': \"\\u228D\",\n    'cupor': \"\\u2A45\",\n    'cups': \"\\u222A\\uFE00\",\n    'curarr': \"\\u21B7\",\n    'curarrm': \"\\u293C\",\n    'curlyeqprec': \"\\u22DE\",\n    'curlyeqsucc': \"\\u22DF\",\n    'curlyvee': \"\\u22CE\",\n    'curlywedge': \"\\u22CF\",\n    'curren': '\\xA4',\n    'curvearrowleft': \"\\u21B6\",\n    'curvearrowright': \"\\u21B7\",\n    'cuvee': \"\\u22CE\",\n    'cuwed': \"\\u22CF\",\n    'cwconint': \"\\u2232\",\n    'cwint': \"\\u2231\",\n    'cylcty': \"\\u232D\",\n    'dagger': \"\\u2020\",\n    'Dagger': \"\\u2021\",\n    'daleth': \"\\u2138\",\n    'darr': \"\\u2193\",\n    'dArr': \"\\u21D3\",\n    'Darr': \"\\u21A1\",\n    'dash': \"\\u2010\",\n    'dashv': \"\\u22A3\",\n    'Dashv': \"\\u2AE4\",\n    'dbkarow': \"\\u290F\",\n    'dblac': \"\\u02DD\",\n    'dcaron': \"\\u010F\",\n    'Dcaron': \"\\u010E\",\n    'dcy': \"\\u0434\",\n    'Dcy': \"\\u0414\",\n    'dd': \"\\u2146\",\n    'DD': \"\\u2145\",\n    'ddagger': \"\\u2021\",\n    'ddarr': \"\\u21CA\",\n    'DDotrahd': \"\\u2911\",\n    'ddotseq': \"\\u2A77\",\n    'deg': '\\xB0',\n    'Del': \"\\u2207\",\n    'delta': \"\\u03B4\",\n    'Delta': \"\\u0394\",\n    'demptyv': \"\\u29B1\",\n    'dfisht': \"\\u297F\",\n    'dfr': \"\\uD835\\uDD21\",\n    'Dfr': \"\\uD835\\uDD07\",\n    'dHar': \"\\u2965\",\n    'dharl': \"\\u21C3\",\n    'dharr': \"\\u21C2\",\n    'DiacriticalAcute': '\\xB4',\n    'DiacriticalDot': \"\\u02D9\",\n    'DiacriticalDoubleAcute': \"\\u02DD\",\n    'DiacriticalGrave': '`',\n    'DiacriticalTilde': \"\\u02DC\",\n    'diam': \"\\u22C4\",\n    'diamond': \"\\u22C4\",\n    'Diamond': \"\\u22C4\",\n    'diamondsuit': \"\\u2666\",\n    'diams': \"\\u2666\",\n    'die': '\\xA8',\n    'DifferentialD': \"\\u2146\",\n    'digamma': \"\\u03DD\",\n    'disin': \"\\u22F2\",\n    'div': '\\xF7',\n    'divide': '\\xF7',\n    'divideontimes': \"\\u22C7\",\n    'divonx': \"\\u22C7\",\n    'djcy': \"\\u0452\",\n    'DJcy': \"\\u0402\",\n    'dlcorn': \"\\u231E\",\n    'dlcrop': \"\\u230D\",\n    'dollar': '$',\n    'dopf': \"\\uD835\\uDD55\",\n    'Dopf': \"\\uD835\\uDD3B\",\n    'dot': \"\\u02D9\",\n    'Dot': '\\xA8',\n    'DotDot': \"\\u20DC\",\n    'doteq': \"\\u2250\",\n    'doteqdot': \"\\u2251\",\n    'DotEqual': \"\\u2250\",\n    'dotminus': \"\\u2238\",\n    'dotplus': \"\\u2214\",\n    'dotsquare': \"\\u22A1\",\n    'doublebarwedge': \"\\u2306\",\n    'DoubleContourIntegral': \"\\u222F\",\n    'DoubleDot': '\\xA8',\n    'DoubleDownArrow': \"\\u21D3\",\n    'DoubleLeftArrow': \"\\u21D0\",\n    'DoubleLeftRightArrow': \"\\u21D4\",\n    'DoubleLeftTee': \"\\u2AE4\",\n    'DoubleLongLeftArrow': \"\\u27F8\",\n    'DoubleLongLeftRightArrow': \"\\u27FA\",\n    'DoubleLongRightArrow': \"\\u27F9\",\n    'DoubleRightArrow': \"\\u21D2\",\n    'DoubleRightTee': \"\\u22A8\",\n    'DoubleUpArrow': \"\\u21D1\",\n    'DoubleUpDownArrow': \"\\u21D5\",\n    'DoubleVerticalBar': \"\\u2225\",\n    'downarrow': \"\\u2193\",\n    'Downarrow': \"\\u21D3\",\n    'DownArrow': \"\\u2193\",\n    'DownArrowBar': \"\\u2913\",\n    'DownArrowUpArrow': \"\\u21F5\",\n    'DownBreve': \"\\u0311\",\n    'downdownarrows': \"\\u21CA\",\n    'downharpoonleft': \"\\u21C3\",\n    'downharpoonright': \"\\u21C2\",\n    'DownLeftRightVector': \"\\u2950\",\n    'DownLeftTeeVector': \"\\u295E\",\n    'DownLeftVector': \"\\u21BD\",\n    'DownLeftVectorBar': \"\\u2956\",\n    'DownRightTeeVector': \"\\u295F\",\n    'DownRightVector': \"\\u21C1\",\n    'DownRightVectorBar': \"\\u2957\",\n    'DownTee': \"\\u22A4\",\n    'DownTeeArrow': \"\\u21A7\",\n    'drbkarow': \"\\u2910\",\n    'drcorn': \"\\u231F\",\n    'drcrop': \"\\u230C\",\n    'dscr': \"\\uD835\\uDCB9\",\n    'Dscr': \"\\uD835\\uDC9F\",\n    'dscy': \"\\u0455\",\n    'DScy': \"\\u0405\",\n    'dsol': \"\\u29F6\",\n    'dstrok': \"\\u0111\",\n    'Dstrok': \"\\u0110\",\n    'dtdot': \"\\u22F1\",\n    'dtri': \"\\u25BF\",\n    'dtrif': \"\\u25BE\",\n    'duarr': \"\\u21F5\",\n    'duhar': \"\\u296F\",\n    'dwangle': \"\\u29A6\",\n    'dzcy': \"\\u045F\",\n    'DZcy': \"\\u040F\",\n    'dzigrarr': \"\\u27FF\",\n    'eacute': '\\xE9',\n    'Eacute': '\\xC9',\n    'easter': \"\\u2A6E\",\n    'ecaron': \"\\u011B\",\n    'Ecaron': \"\\u011A\",\n    'ecir': \"\\u2256\",\n    'ecirc': '\\xEA',\n    'Ecirc': '\\xCA',\n    'ecolon': \"\\u2255\",\n    'ecy': \"\\u044D\",\n    'Ecy': \"\\u042D\",\n    'eDDot': \"\\u2A77\",\n    'edot': \"\\u0117\",\n    'eDot': \"\\u2251\",\n    'Edot': \"\\u0116\",\n    'ee': \"\\u2147\",\n    'efDot': \"\\u2252\",\n    'efr': \"\\uD835\\uDD22\",\n    'Efr': \"\\uD835\\uDD08\",\n    'eg': \"\\u2A9A\",\n    'egrave': '\\xE8',\n    'Egrave': '\\xC8',\n    'egs': \"\\u2A96\",\n    'egsdot': \"\\u2A98\",\n    'el': \"\\u2A99\",\n    'Element': \"\\u2208\",\n    'elinters': \"\\u23E7\",\n    'ell': \"\\u2113\",\n    'els': \"\\u2A95\",\n    'elsdot': \"\\u2A97\",\n    'emacr': \"\\u0113\",\n    'Emacr': \"\\u0112\",\n    'empty': \"\\u2205\",\n    'emptyset': \"\\u2205\",\n    'EmptySmallSquare': \"\\u25FB\",\n    'emptyv': \"\\u2205\",\n    'EmptyVerySmallSquare': \"\\u25AB\",\n    'emsp': \"\\u2003\",\n    'emsp13': \"\\u2004\",\n    'emsp14': \"\\u2005\",\n    'eng': \"\\u014B\",\n    'ENG': \"\\u014A\",\n    'ensp': \"\\u2002\",\n    'eogon': \"\\u0119\",\n    'Eogon': \"\\u0118\",\n    'eopf': \"\\uD835\\uDD56\",\n    'Eopf': \"\\uD835\\uDD3C\",\n    'epar': \"\\u22D5\",\n    'eparsl': \"\\u29E3\",\n    'eplus': \"\\u2A71\",\n    'epsi': \"\\u03B5\",\n    'epsilon': \"\\u03B5\",\n    'Epsilon': \"\\u0395\",\n    'epsiv': \"\\u03F5\",\n    'eqcirc': \"\\u2256\",\n    'eqcolon': \"\\u2255\",\n    'eqsim': \"\\u2242\",\n    'eqslantgtr': \"\\u2A96\",\n    'eqslantless': \"\\u2A95\",\n    'Equal': \"\\u2A75\",\n    'equals': '=',\n    'EqualTilde': \"\\u2242\",\n    'equest': \"\\u225F\",\n    'Equilibrium': \"\\u21CC\",\n    'equiv': \"\\u2261\",\n    'equivDD': \"\\u2A78\",\n    'eqvparsl': \"\\u29E5\",\n    'erarr': \"\\u2971\",\n    'erDot': \"\\u2253\",\n    'escr': \"\\u212F\",\n    'Escr': \"\\u2130\",\n    'esdot': \"\\u2250\",\n    'esim': \"\\u2242\",\n    'Esim': \"\\u2A73\",\n    'eta': \"\\u03B7\",\n    'Eta': \"\\u0397\",\n    'eth': '\\xF0',\n    'ETH': '\\xD0',\n    'euml': '\\xEB',\n    'Euml': '\\xCB',\n    'euro': \"\\u20AC\",\n    'excl': '!',\n    'exist': \"\\u2203\",\n    'Exists': \"\\u2203\",\n    'expectation': \"\\u2130\",\n    'exponentiale': \"\\u2147\",\n    'ExponentialE': \"\\u2147\",\n    'fallingdotseq': \"\\u2252\",\n    'fcy': \"\\u0444\",\n    'Fcy': \"\\u0424\",\n    'female': \"\\u2640\",\n    'ffilig': \"\\uFB03\",\n    'fflig': \"\\uFB00\",\n    'ffllig': \"\\uFB04\",\n    'ffr': \"\\uD835\\uDD23\",\n    'Ffr': \"\\uD835\\uDD09\",\n    'filig': \"\\uFB01\",\n    'FilledSmallSquare': \"\\u25FC\",\n    'FilledVerySmallSquare': \"\\u25AA\",\n    'fjlig': 'fj',\n    'flat': \"\\u266D\",\n    'fllig': \"\\uFB02\",\n    'fltns': \"\\u25B1\",\n    'fnof': \"\\u0192\",\n    'fopf': \"\\uD835\\uDD57\",\n    'Fopf': \"\\uD835\\uDD3D\",\n    'forall': \"\\u2200\",\n    'ForAll': \"\\u2200\",\n    'fork': \"\\u22D4\",\n    'forkv': \"\\u2AD9\",\n    'Fouriertrf': \"\\u2131\",\n    'fpartint': \"\\u2A0D\",\n    'frac12': '\\xBD',\n    'frac13': \"\\u2153\",\n    'frac14': '\\xBC',\n    'frac15': \"\\u2155\",\n    'frac16': \"\\u2159\",\n    'frac18': \"\\u215B\",\n    'frac23': \"\\u2154\",\n    'frac25': \"\\u2156\",\n    'frac34': '\\xBE',\n    'frac35': \"\\u2157\",\n    'frac38': \"\\u215C\",\n    'frac45': \"\\u2158\",\n    'frac56': \"\\u215A\",\n    'frac58': \"\\u215D\",\n    'frac78': \"\\u215E\",\n    'frasl': \"\\u2044\",\n    'frown': \"\\u2322\",\n    'fscr': \"\\uD835\\uDCBB\",\n    'Fscr': \"\\u2131\",\n    'gacute': \"\\u01F5\",\n    'gamma': \"\\u03B3\",\n    'Gamma': \"\\u0393\",\n    'gammad': \"\\u03DD\",\n    'Gammad': \"\\u03DC\",\n    'gap': \"\\u2A86\",\n    'gbreve': \"\\u011F\",\n    'Gbreve': \"\\u011E\",\n    'Gcedil': \"\\u0122\",\n    'gcirc': \"\\u011D\",\n    'Gcirc': \"\\u011C\",\n    'gcy': \"\\u0433\",\n    'Gcy': \"\\u0413\",\n    'gdot': \"\\u0121\",\n    'Gdot': \"\\u0120\",\n    'ge': \"\\u2265\",\n    'gE': \"\\u2267\",\n    'gel': \"\\u22DB\",\n    'gEl': \"\\u2A8C\",\n    'geq': \"\\u2265\",\n    'geqq': \"\\u2267\",\n    'geqslant': \"\\u2A7E\",\n    'ges': \"\\u2A7E\",\n    'gescc': \"\\u2AA9\",\n    'gesdot': \"\\u2A80\",\n    'gesdoto': \"\\u2A82\",\n    'gesdotol': \"\\u2A84\",\n    'gesl': \"\\u22DB\\uFE00\",\n    'gesles': \"\\u2A94\",\n    'gfr': \"\\uD835\\uDD24\",\n    'Gfr': \"\\uD835\\uDD0A\",\n    'gg': \"\\u226B\",\n    'Gg': \"\\u22D9\",\n    'ggg': \"\\u22D9\",\n    'gimel': \"\\u2137\",\n    'gjcy': \"\\u0453\",\n    'GJcy': \"\\u0403\",\n    'gl': \"\\u2277\",\n    'gla': \"\\u2AA5\",\n    'glE': \"\\u2A92\",\n    'glj': \"\\u2AA4\",\n    'gnap': \"\\u2A8A\",\n    'gnapprox': \"\\u2A8A\",\n    'gne': \"\\u2A88\",\n    'gnE': \"\\u2269\",\n    'gneq': \"\\u2A88\",\n    'gneqq': \"\\u2269\",\n    'gnsim': \"\\u22E7\",\n    'gopf': \"\\uD835\\uDD58\",\n    'Gopf': \"\\uD835\\uDD3E\",\n    'grave': '`',\n    'GreaterEqual': \"\\u2265\",\n    'GreaterEqualLess': \"\\u22DB\",\n    'GreaterFullEqual': \"\\u2267\",\n    'GreaterGreater': \"\\u2AA2\",\n    'GreaterLess': \"\\u2277\",\n    'GreaterSlantEqual': \"\\u2A7E\",\n    'GreaterTilde': \"\\u2273\",\n    'gscr': \"\\u210A\",\n    'Gscr': \"\\uD835\\uDCA2\",\n    'gsim': \"\\u2273\",\n    'gsime': \"\\u2A8E\",\n    'gsiml': \"\\u2A90\",\n    'gt': '>',\n    'Gt': \"\\u226B\",\n    'GT': '>',\n    'gtcc': \"\\u2AA7\",\n    'gtcir': \"\\u2A7A\",\n    'gtdot': \"\\u22D7\",\n    'gtlPar': \"\\u2995\",\n    'gtquest': \"\\u2A7C\",\n    'gtrapprox': \"\\u2A86\",\n    'gtrarr': \"\\u2978\",\n    'gtrdot': \"\\u22D7\",\n    'gtreqless': \"\\u22DB\",\n    'gtreqqless': \"\\u2A8C\",\n    'gtrless': \"\\u2277\",\n    'gtrsim': \"\\u2273\",\n    'gvertneqq': \"\\u2269\\uFE00\",\n    'gvnE': \"\\u2269\\uFE00\",\n    'Hacek': \"\\u02C7\",\n    'hairsp': \"\\u200A\",\n    'half': '\\xBD',\n    'hamilt': \"\\u210B\",\n    'hardcy': \"\\u044A\",\n    'HARDcy': \"\\u042A\",\n    'harr': \"\\u2194\",\n    'hArr': \"\\u21D4\",\n    'harrcir': \"\\u2948\",\n    'harrw': \"\\u21AD\",\n    'Hat': '^',\n    'hbar': \"\\u210F\",\n    'hcirc': \"\\u0125\",\n    'Hcirc': \"\\u0124\",\n    'hearts': \"\\u2665\",\n    'heartsuit': \"\\u2665\",\n    'hellip': \"\\u2026\",\n    'hercon': \"\\u22B9\",\n    'hfr': \"\\uD835\\uDD25\",\n    'Hfr': \"\\u210C\",\n    'HilbertSpace': \"\\u210B\",\n    'hksearow': \"\\u2925\",\n    'hkswarow': \"\\u2926\",\n    'hoarr': \"\\u21FF\",\n    'homtht': \"\\u223B\",\n    'hookleftarrow': \"\\u21A9\",\n    'hookrightarrow': \"\\u21AA\",\n    'hopf': \"\\uD835\\uDD59\",\n    'Hopf': \"\\u210D\",\n    'horbar': \"\\u2015\",\n    'HorizontalLine': \"\\u2500\",\n    'hscr': \"\\uD835\\uDCBD\",\n    'Hscr': \"\\u210B\",\n    'hslash': \"\\u210F\",\n    'hstrok': \"\\u0127\",\n    'Hstrok': \"\\u0126\",\n    'HumpDownHump': \"\\u224E\",\n    'HumpEqual': \"\\u224F\",\n    'hybull': \"\\u2043\",\n    'hyphen': \"\\u2010\",\n    'iacute': '\\xED',\n    'Iacute': '\\xCD',\n    'ic': \"\\u2063\",\n    'icirc': '\\xEE',\n    'Icirc': '\\xCE',\n    'icy': \"\\u0438\",\n    'Icy': \"\\u0418\",\n    'Idot': \"\\u0130\",\n    'iecy': \"\\u0435\",\n    'IEcy': \"\\u0415\",\n    'iexcl': '\\xA1',\n    'iff': \"\\u21D4\",\n    'ifr': \"\\uD835\\uDD26\",\n    'Ifr': \"\\u2111\",\n    'igrave': '\\xEC',\n    'Igrave': '\\xCC',\n    'ii': \"\\u2148\",\n    'iiiint': \"\\u2A0C\",\n    'iiint': \"\\u222D\",\n    'iinfin': \"\\u29DC\",\n    'iiota': \"\\u2129\",\n    'ijlig': \"\\u0133\",\n    'IJlig': \"\\u0132\",\n    'Im': \"\\u2111\",\n    'imacr': \"\\u012B\",\n    'Imacr': \"\\u012A\",\n    'image': \"\\u2111\",\n    'ImaginaryI': \"\\u2148\",\n    'imagline': \"\\u2110\",\n    'imagpart': \"\\u2111\",\n    'imath': \"\\u0131\",\n    'imof': \"\\u22B7\",\n    'imped': \"\\u01B5\",\n    'Implies': \"\\u21D2\",\n    'in': \"\\u2208\",\n    'incare': \"\\u2105\",\n    'infin': \"\\u221E\",\n    'infintie': \"\\u29DD\",\n    'inodot': \"\\u0131\",\n    'int': \"\\u222B\",\n    'Int': \"\\u222C\",\n    'intcal': \"\\u22BA\",\n    'integers': \"\\u2124\",\n    'Integral': \"\\u222B\",\n    'intercal': \"\\u22BA\",\n    'Intersection': \"\\u22C2\",\n    'intlarhk': \"\\u2A17\",\n    'intprod': \"\\u2A3C\",\n    'InvisibleComma': \"\\u2063\",\n    'InvisibleTimes': \"\\u2062\",\n    'iocy': \"\\u0451\",\n    'IOcy': \"\\u0401\",\n    'iogon': \"\\u012F\",\n    'Iogon': \"\\u012E\",\n    'iopf': \"\\uD835\\uDD5A\",\n    'Iopf': \"\\uD835\\uDD40\",\n    'iota': \"\\u03B9\",\n    'Iota': \"\\u0399\",\n    'iprod': \"\\u2A3C\",\n    'iquest': '\\xBF',\n    'iscr': \"\\uD835\\uDCBE\",\n    'Iscr': \"\\u2110\",\n    'isin': \"\\u2208\",\n    'isindot': \"\\u22F5\",\n    'isinE': \"\\u22F9\",\n    'isins': \"\\u22F4\",\n    'isinsv': \"\\u22F3\",\n    'isinv': \"\\u2208\",\n    'it': \"\\u2062\",\n    'itilde': \"\\u0129\",\n    'Itilde': \"\\u0128\",\n    'iukcy': \"\\u0456\",\n    'Iukcy': \"\\u0406\",\n    'iuml': '\\xEF',\n    'Iuml': '\\xCF',\n    'jcirc': \"\\u0135\",\n    'Jcirc': \"\\u0134\",\n    'jcy': \"\\u0439\",\n    'Jcy': \"\\u0419\",\n    'jfr': \"\\uD835\\uDD27\",\n    'Jfr': \"\\uD835\\uDD0D\",\n    'jmath': \"\\u0237\",\n    'jopf': \"\\uD835\\uDD5B\",\n    'Jopf': \"\\uD835\\uDD41\",\n    'jscr': \"\\uD835\\uDCBF\",\n    'Jscr': \"\\uD835\\uDCA5\",\n    'jsercy': \"\\u0458\",\n    'Jsercy': \"\\u0408\",\n    'jukcy': \"\\u0454\",\n    'Jukcy': \"\\u0404\",\n    'kappa': \"\\u03BA\",\n    'Kappa': \"\\u039A\",\n    'kappav': \"\\u03F0\",\n    'kcedil': \"\\u0137\",\n    'Kcedil': \"\\u0136\",\n    'kcy': \"\\u043A\",\n    'Kcy': \"\\u041A\",\n    'kfr': \"\\uD835\\uDD28\",\n    'Kfr': \"\\uD835\\uDD0E\",\n    'kgreen': \"\\u0138\",\n    'khcy': \"\\u0445\",\n    'KHcy': \"\\u0425\",\n    'kjcy': \"\\u045C\",\n    'KJcy': \"\\u040C\",\n    'kopf': \"\\uD835\\uDD5C\",\n    'Kopf': \"\\uD835\\uDD42\",\n    'kscr': \"\\uD835\\uDCC0\",\n    'Kscr': \"\\uD835\\uDCA6\",\n    'lAarr': \"\\u21DA\",\n    'lacute': \"\\u013A\",\n    'Lacute': \"\\u0139\",\n    'laemptyv': \"\\u29B4\",\n    'lagran': \"\\u2112\",\n    'lambda': \"\\u03BB\",\n    'Lambda': \"\\u039B\",\n    'lang': \"\\u27E8\",\n    'Lang': \"\\u27EA\",\n    'langd': \"\\u2991\",\n    'langle': \"\\u27E8\",\n    'lap': \"\\u2A85\",\n    'Laplacetrf': \"\\u2112\",\n    'laquo': '\\xAB',\n    'larr': \"\\u2190\",\n    'lArr': \"\\u21D0\",\n    'Larr': \"\\u219E\",\n    'larrb': \"\\u21E4\",\n    'larrbfs': \"\\u291F\",\n    'larrfs': \"\\u291D\",\n    'larrhk': \"\\u21A9\",\n    'larrlp': \"\\u21AB\",\n    'larrpl': \"\\u2939\",\n    'larrsim': \"\\u2973\",\n    'larrtl': \"\\u21A2\",\n    'lat': \"\\u2AAB\",\n    'latail': \"\\u2919\",\n    'lAtail': \"\\u291B\",\n    'late': \"\\u2AAD\",\n    'lates': \"\\u2AAD\\uFE00\",\n    'lbarr': \"\\u290C\",\n    'lBarr': \"\\u290E\",\n    'lbbrk': \"\\u2772\",\n    'lbrace': '{',\n    'lbrack': '[',\n    'lbrke': \"\\u298B\",\n    'lbrksld': \"\\u298F\",\n    'lbrkslu': \"\\u298D\",\n    'lcaron': \"\\u013E\",\n    'Lcaron': \"\\u013D\",\n    'lcedil': \"\\u013C\",\n    'Lcedil': \"\\u013B\",\n    'lceil': \"\\u2308\",\n    'lcub': '{',\n    'lcy': \"\\u043B\",\n    'Lcy': \"\\u041B\",\n    'ldca': \"\\u2936\",\n    'ldquo': \"\\u201C\",\n    'ldquor': \"\\u201E\",\n    'ldrdhar': \"\\u2967\",\n    'ldrushar': \"\\u294B\",\n    'ldsh': \"\\u21B2\",\n    'le': \"\\u2264\",\n    'lE': \"\\u2266\",\n    'LeftAngleBracket': \"\\u27E8\",\n    'leftarrow': \"\\u2190\",\n    'Leftarrow': \"\\u21D0\",\n    'LeftArrow': \"\\u2190\",\n    'LeftArrowBar': \"\\u21E4\",\n    'LeftArrowRightArrow': \"\\u21C6\",\n    'leftarrowtail': \"\\u21A2\",\n    'LeftCeiling': \"\\u2308\",\n    'LeftDoubleBracket': \"\\u27E6\",\n    'LeftDownTeeVector': \"\\u2961\",\n    'LeftDownVector': \"\\u21C3\",\n    'LeftDownVectorBar': \"\\u2959\",\n    'LeftFloor': \"\\u230A\",\n    'leftharpoondown': \"\\u21BD\",\n    'leftharpoonup': \"\\u21BC\",\n    'leftleftarrows': \"\\u21C7\",\n    'leftrightarrow': \"\\u2194\",\n    'Leftrightarrow': \"\\u21D4\",\n    'LeftRightArrow': \"\\u2194\",\n    'leftrightarrows': \"\\u21C6\",\n    'leftrightharpoons': \"\\u21CB\",\n    'leftrightsquigarrow': \"\\u21AD\",\n    'LeftRightVector': \"\\u294E\",\n    'LeftTee': \"\\u22A3\",\n    'LeftTeeArrow': \"\\u21A4\",\n    'LeftTeeVector': \"\\u295A\",\n    'leftthreetimes': \"\\u22CB\",\n    'LeftTriangle': \"\\u22B2\",\n    'LeftTriangleBar': \"\\u29CF\",\n    'LeftTriangleEqual': \"\\u22B4\",\n    'LeftUpDownVector': \"\\u2951\",\n    'LeftUpTeeVector': \"\\u2960\",\n    'LeftUpVector': \"\\u21BF\",\n    'LeftUpVectorBar': \"\\u2958\",\n    'LeftVector': \"\\u21BC\",\n    'LeftVectorBar': \"\\u2952\",\n    'leg': \"\\u22DA\",\n    'lEg': \"\\u2A8B\",\n    'leq': \"\\u2264\",\n    'leqq': \"\\u2266\",\n    'leqslant': \"\\u2A7D\",\n    'les': \"\\u2A7D\",\n    'lescc': \"\\u2AA8\",\n    'lesdot': \"\\u2A7F\",\n    'lesdoto': \"\\u2A81\",\n    'lesdotor': \"\\u2A83\",\n    'lesg': \"\\u22DA\\uFE00\",\n    'lesges': \"\\u2A93\",\n    'lessapprox': \"\\u2A85\",\n    'lessdot': \"\\u22D6\",\n    'lesseqgtr': \"\\u22DA\",\n    'lesseqqgtr': \"\\u2A8B\",\n    'LessEqualGreater': \"\\u22DA\",\n    'LessFullEqual': \"\\u2266\",\n    'LessGreater': \"\\u2276\",\n    'lessgtr': \"\\u2276\",\n    'LessLess': \"\\u2AA1\",\n    'lesssim': \"\\u2272\",\n    'LessSlantEqual': \"\\u2A7D\",\n    'LessTilde': \"\\u2272\",\n    'lfisht': \"\\u297C\",\n    'lfloor': \"\\u230A\",\n    'lfr': \"\\uD835\\uDD29\",\n    'Lfr': \"\\uD835\\uDD0F\",\n    'lg': \"\\u2276\",\n    'lgE': \"\\u2A91\",\n    'lHar': \"\\u2962\",\n    'lhard': \"\\u21BD\",\n    'lharu': \"\\u21BC\",\n    'lharul': \"\\u296A\",\n    'lhblk': \"\\u2584\",\n    'ljcy': \"\\u0459\",\n    'LJcy': \"\\u0409\",\n    'll': \"\\u226A\",\n    'Ll': \"\\u22D8\",\n    'llarr': \"\\u21C7\",\n    'llcorner': \"\\u231E\",\n    'Lleftarrow': \"\\u21DA\",\n    'llhard': \"\\u296B\",\n    'lltri': \"\\u25FA\",\n    'lmidot': \"\\u0140\",\n    'Lmidot': \"\\u013F\",\n    'lmoust': \"\\u23B0\",\n    'lmoustache': \"\\u23B0\",\n    'lnap': \"\\u2A89\",\n    'lnapprox': \"\\u2A89\",\n    'lne': \"\\u2A87\",\n    'lnE': \"\\u2268\",\n    'lneq': \"\\u2A87\",\n    'lneqq': \"\\u2268\",\n    'lnsim': \"\\u22E6\",\n    'loang': \"\\u27EC\",\n    'loarr': \"\\u21FD\",\n    'lobrk': \"\\u27E6\",\n    'longleftarrow': \"\\u27F5\",\n    'Longleftarrow': \"\\u27F8\",\n    'LongLeftArrow': \"\\u27F5\",\n    'longleftrightarrow': \"\\u27F7\",\n    'Longleftrightarrow': \"\\u27FA\",\n    'LongLeftRightArrow': \"\\u27F7\",\n    'longmapsto': \"\\u27FC\",\n    'longrightarrow': \"\\u27F6\",\n    'Longrightarrow': \"\\u27F9\",\n    'LongRightArrow': \"\\u27F6\",\n    'looparrowleft': \"\\u21AB\",\n    'looparrowright': \"\\u21AC\",\n    'lopar': \"\\u2985\",\n    'lopf': \"\\uD835\\uDD5D\",\n    'Lopf': \"\\uD835\\uDD43\",\n    'loplus': \"\\u2A2D\",\n    'lotimes': \"\\u2A34\",\n    'lowast': \"\\u2217\",\n    'lowbar': '_',\n    'LowerLeftArrow': \"\\u2199\",\n    'LowerRightArrow': \"\\u2198\",\n    'loz': \"\\u25CA\",\n    'lozenge': \"\\u25CA\",\n    'lozf': \"\\u29EB\",\n    'lpar': '(',\n    'lparlt': \"\\u2993\",\n    'lrarr': \"\\u21C6\",\n    'lrcorner': \"\\u231F\",\n    'lrhar': \"\\u21CB\",\n    'lrhard': \"\\u296D\",\n    'lrm': \"\\u200E\",\n    'lrtri': \"\\u22BF\",\n    'lsaquo': \"\\u2039\",\n    'lscr': \"\\uD835\\uDCC1\",\n    'Lscr': \"\\u2112\",\n    'lsh': \"\\u21B0\",\n    'Lsh': \"\\u21B0\",\n    'lsim': \"\\u2272\",\n    'lsime': \"\\u2A8D\",\n    'lsimg': \"\\u2A8F\",\n    'lsqb': '[',\n    'lsquo': \"\\u2018\",\n    'lsquor': \"\\u201A\",\n    'lstrok': \"\\u0142\",\n    'Lstrok': \"\\u0141\",\n    'lt': '<',\n    'Lt': \"\\u226A\",\n    'LT': '<',\n    'ltcc': \"\\u2AA6\",\n    'ltcir': \"\\u2A79\",\n    'ltdot': \"\\u22D6\",\n    'lthree': \"\\u22CB\",\n    'ltimes': \"\\u22C9\",\n    'ltlarr': \"\\u2976\",\n    'ltquest': \"\\u2A7B\",\n    'ltri': \"\\u25C3\",\n    'ltrie': \"\\u22B4\",\n    'ltrif': \"\\u25C2\",\n    'ltrPar': \"\\u2996\",\n    'lurdshar': \"\\u294A\",\n    'luruhar': \"\\u2966\",\n    'lvertneqq': \"\\u2268\\uFE00\",\n    'lvnE': \"\\u2268\\uFE00\",\n    'macr': '\\xAF',\n    'male': \"\\u2642\",\n    'malt': \"\\u2720\",\n    'maltese': \"\\u2720\",\n    'map': \"\\u21A6\",\n    'Map': \"\\u2905\",\n    'mapsto': \"\\u21A6\",\n    'mapstodown': \"\\u21A7\",\n    'mapstoleft': \"\\u21A4\",\n    'mapstoup': \"\\u21A5\",\n    'marker': \"\\u25AE\",\n    'mcomma': \"\\u2A29\",\n    'mcy': \"\\u043C\",\n    'Mcy': \"\\u041C\",\n    'mdash': \"\\u2014\",\n    'mDDot': \"\\u223A\",\n    'measuredangle': \"\\u2221\",\n    'MediumSpace': \"\\u205F\",\n    'Mellintrf': \"\\u2133\",\n    'mfr': \"\\uD835\\uDD2A\",\n    'Mfr': \"\\uD835\\uDD10\",\n    'mho': \"\\u2127\",\n    'micro': '\\xB5',\n    'mid': \"\\u2223\",\n    'midast': '*',\n    'midcir': \"\\u2AF0\",\n    'middot': '\\xB7',\n    'minus': \"\\u2212\",\n    'minusb': \"\\u229F\",\n    'minusd': \"\\u2238\",\n    'minusdu': \"\\u2A2A\",\n    'MinusPlus': \"\\u2213\",\n    'mlcp': \"\\u2ADB\",\n    'mldr': \"\\u2026\",\n    'mnplus': \"\\u2213\",\n    'models': \"\\u22A7\",\n    'mopf': \"\\uD835\\uDD5E\",\n    'Mopf': \"\\uD835\\uDD44\",\n    'mp': \"\\u2213\",\n    'mscr': \"\\uD835\\uDCC2\",\n    'Mscr': \"\\u2133\",\n    'mstpos': \"\\u223E\",\n    'mu': \"\\u03BC\",\n    'Mu': \"\\u039C\",\n    'multimap': \"\\u22B8\",\n    'mumap': \"\\u22B8\",\n    'nabla': \"\\u2207\",\n    'nacute': \"\\u0144\",\n    'Nacute': \"\\u0143\",\n    'nang': \"\\u2220\\u20D2\",\n    'nap': \"\\u2249\",\n    'napE': \"\\u2A70\\u0338\",\n    'napid': \"\\u224B\\u0338\",\n    'napos': \"\\u0149\",\n    'napprox': \"\\u2249\",\n    'natur': \"\\u266E\",\n    'natural': \"\\u266E\",\n    'naturals': \"\\u2115\",\n    'nbsp': '\\xA0',\n    'nbump': \"\\u224E\\u0338\",\n    'nbumpe': \"\\u224F\\u0338\",\n    'ncap': \"\\u2A43\",\n    'ncaron': \"\\u0148\",\n    'Ncaron': \"\\u0147\",\n    'ncedil': \"\\u0146\",\n    'Ncedil': \"\\u0145\",\n    'ncong': \"\\u2247\",\n    'ncongdot': \"\\u2A6D\\u0338\",\n    'ncup': \"\\u2A42\",\n    'ncy': \"\\u043D\",\n    'Ncy': \"\\u041D\",\n    'ndash': \"\\u2013\",\n    'ne': \"\\u2260\",\n    'nearhk': \"\\u2924\",\n    'nearr': \"\\u2197\",\n    'neArr': \"\\u21D7\",\n    'nearrow': \"\\u2197\",\n    'nedot': \"\\u2250\\u0338\",\n    'NegativeMediumSpace': \"\\u200B\",\n    'NegativeThickSpace': \"\\u200B\",\n    'NegativeThinSpace': \"\\u200B\",\n    'NegativeVeryThinSpace': \"\\u200B\",\n    'nequiv': \"\\u2262\",\n    'nesear': \"\\u2928\",\n    'nesim': \"\\u2242\\u0338\",\n    'NestedGreaterGreater': \"\\u226B\",\n    'NestedLessLess': \"\\u226A\",\n    'NewLine': '\\n',\n    'nexist': \"\\u2204\",\n    'nexists': \"\\u2204\",\n    'nfr': \"\\uD835\\uDD2B\",\n    'Nfr': \"\\uD835\\uDD11\",\n    'nge': \"\\u2271\",\n    'ngE': \"\\u2267\\u0338\",\n    'ngeq': \"\\u2271\",\n    'ngeqq': \"\\u2267\\u0338\",\n    'ngeqslant': \"\\u2A7E\\u0338\",\n    'nges': \"\\u2A7E\\u0338\",\n    'nGg': \"\\u22D9\\u0338\",\n    'ngsim': \"\\u2275\",\n    'ngt': \"\\u226F\",\n    'nGt': \"\\u226B\\u20D2\",\n    'ngtr': \"\\u226F\",\n    'nGtv': \"\\u226B\\u0338\",\n    'nharr': \"\\u21AE\",\n    'nhArr': \"\\u21CE\",\n    'nhpar': \"\\u2AF2\",\n    'ni': \"\\u220B\",\n    'nis': \"\\u22FC\",\n    'nisd': \"\\u22FA\",\n    'niv': \"\\u220B\",\n    'njcy': \"\\u045A\",\n    'NJcy': \"\\u040A\",\n    'nlarr': \"\\u219A\",\n    'nlArr': \"\\u21CD\",\n    'nldr': \"\\u2025\",\n    'nle': \"\\u2270\",\n    'nlE': \"\\u2266\\u0338\",\n    'nleftarrow': \"\\u219A\",\n    'nLeftarrow': \"\\u21CD\",\n    'nleftrightarrow': \"\\u21AE\",\n    'nLeftrightarrow': \"\\u21CE\",\n    'nleq': \"\\u2270\",\n    'nleqq': \"\\u2266\\u0338\",\n    'nleqslant': \"\\u2A7D\\u0338\",\n    'nles': \"\\u2A7D\\u0338\",\n    'nless': \"\\u226E\",\n    'nLl': \"\\u22D8\\u0338\",\n    'nlsim': \"\\u2274\",\n    'nlt': \"\\u226E\",\n    'nLt': \"\\u226A\\u20D2\",\n    'nltri': \"\\u22EA\",\n    'nltrie': \"\\u22EC\",\n    'nLtv': \"\\u226A\\u0338\",\n    'nmid': \"\\u2224\",\n    'NoBreak': \"\\u2060\",\n    'NonBreakingSpace': '\\xA0',\n    'nopf': \"\\uD835\\uDD5F\",\n    'Nopf': \"\\u2115\",\n    'not': '\\xAC',\n    'Not': \"\\u2AEC\",\n    'NotCongruent': \"\\u2262\",\n    'NotCupCap': \"\\u226D\",\n    'NotDoubleVerticalBar': \"\\u2226\",\n    'NotElement': \"\\u2209\",\n    'NotEqual': \"\\u2260\",\n    'NotEqualTilde': \"\\u2242\\u0338\",\n    'NotExists': \"\\u2204\",\n    'NotGreater': \"\\u226F\",\n    'NotGreaterEqual': \"\\u2271\",\n    'NotGreaterFullEqual': \"\\u2267\\u0338\",\n    'NotGreaterGreater': \"\\u226B\\u0338\",\n    'NotGreaterLess': \"\\u2279\",\n    'NotGreaterSlantEqual': \"\\u2A7E\\u0338\",\n    'NotGreaterTilde': \"\\u2275\",\n    'NotHumpDownHump': \"\\u224E\\u0338\",\n    'NotHumpEqual': \"\\u224F\\u0338\",\n    'notin': \"\\u2209\",\n    'notindot': \"\\u22F5\\u0338\",\n    'notinE': \"\\u22F9\\u0338\",\n    'notinva': \"\\u2209\",\n    'notinvb': \"\\u22F7\",\n    'notinvc': \"\\u22F6\",\n    'NotLeftTriangle': \"\\u22EA\",\n    'NotLeftTriangleBar': \"\\u29CF\\u0338\",\n    'NotLeftTriangleEqual': \"\\u22EC\",\n    'NotLess': \"\\u226E\",\n    'NotLessEqual': \"\\u2270\",\n    'NotLessGreater': \"\\u2278\",\n    'NotLessLess': \"\\u226A\\u0338\",\n    'NotLessSlantEqual': \"\\u2A7D\\u0338\",\n    'NotLessTilde': \"\\u2274\",\n    'NotNestedGreaterGreater': \"\\u2AA2\\u0338\",\n    'NotNestedLessLess': \"\\u2AA1\\u0338\",\n    'notni': \"\\u220C\",\n    'notniva': \"\\u220C\",\n    'notnivb': \"\\u22FE\",\n    'notnivc': \"\\u22FD\",\n    'NotPrecedes': \"\\u2280\",\n    'NotPrecedesEqual': \"\\u2AAF\\u0338\",\n    'NotPrecedesSlantEqual': \"\\u22E0\",\n    'NotReverseElement': \"\\u220C\",\n    'NotRightTriangle': \"\\u22EB\",\n    'NotRightTriangleBar': \"\\u29D0\\u0338\",\n    'NotRightTriangleEqual': \"\\u22ED\",\n    'NotSquareSubset': \"\\u228F\\u0338\",\n    'NotSquareSubsetEqual': \"\\u22E2\",\n    'NotSquareSuperset': \"\\u2290\\u0338\",\n    'NotSquareSupersetEqual': \"\\u22E3\",\n    'NotSubset': \"\\u2282\\u20D2\",\n    'NotSubsetEqual': \"\\u2288\",\n    'NotSucceeds': \"\\u2281\",\n    'NotSucceedsEqual': \"\\u2AB0\\u0338\",\n    'NotSucceedsSlantEqual': \"\\u22E1\",\n    'NotSucceedsTilde': \"\\u227F\\u0338\",\n    'NotSuperset': \"\\u2283\\u20D2\",\n    'NotSupersetEqual': \"\\u2289\",\n    'NotTilde': \"\\u2241\",\n    'NotTildeEqual': \"\\u2244\",\n    'NotTildeFullEqual': \"\\u2247\",\n    'NotTildeTilde': \"\\u2249\",\n    'NotVerticalBar': \"\\u2224\",\n    'npar': \"\\u2226\",\n    'nparallel': \"\\u2226\",\n    'nparsl': \"\\u2AFD\\u20E5\",\n    'npart': \"\\u2202\\u0338\",\n    'npolint': \"\\u2A14\",\n    'npr': \"\\u2280\",\n    'nprcue': \"\\u22E0\",\n    'npre': \"\\u2AAF\\u0338\",\n    'nprec': \"\\u2280\",\n    'npreceq': \"\\u2AAF\\u0338\",\n    'nrarr': \"\\u219B\",\n    'nrArr': \"\\u21CF\",\n    'nrarrc': \"\\u2933\\u0338\",\n    'nrarrw': \"\\u219D\\u0338\",\n    'nrightarrow': \"\\u219B\",\n    'nRightarrow': \"\\u21CF\",\n    'nrtri': \"\\u22EB\",\n    'nrtrie': \"\\u22ED\",\n    'nsc': \"\\u2281\",\n    'nsccue': \"\\u22E1\",\n    'nsce': \"\\u2AB0\\u0338\",\n    'nscr': \"\\uD835\\uDCC3\",\n    'Nscr': \"\\uD835\\uDCA9\",\n    'nshortmid': \"\\u2224\",\n    'nshortparallel': \"\\u2226\",\n    'nsim': \"\\u2241\",\n    'nsime': \"\\u2244\",\n    'nsimeq': \"\\u2244\",\n    'nsmid': \"\\u2224\",\n    'nspar': \"\\u2226\",\n    'nsqsube': \"\\u22E2\",\n    'nsqsupe': \"\\u22E3\",\n    'nsub': \"\\u2284\",\n    'nsube': \"\\u2288\",\n    'nsubE': \"\\u2AC5\\u0338\",\n    'nsubset': \"\\u2282\\u20D2\",\n    'nsubseteq': \"\\u2288\",\n    'nsubseteqq': \"\\u2AC5\\u0338\",\n    'nsucc': \"\\u2281\",\n    'nsucceq': \"\\u2AB0\\u0338\",\n    'nsup': \"\\u2285\",\n    'nsupe': \"\\u2289\",\n    'nsupE': \"\\u2AC6\\u0338\",\n    'nsupset': \"\\u2283\\u20D2\",\n    'nsupseteq': \"\\u2289\",\n    'nsupseteqq': \"\\u2AC6\\u0338\",\n    'ntgl': \"\\u2279\",\n    'ntilde': '\\xF1',\n    'Ntilde': '\\xD1',\n    'ntlg': \"\\u2278\",\n    'ntriangleleft': \"\\u22EA\",\n    'ntrianglelefteq': \"\\u22EC\",\n    'ntriangleright': \"\\u22EB\",\n    'ntrianglerighteq': \"\\u22ED\",\n    'nu': \"\\u03BD\",\n    'Nu': \"\\u039D\",\n    'num': '#',\n    'numero': \"\\u2116\",\n    'numsp': \"\\u2007\",\n    'nvap': \"\\u224D\\u20D2\",\n    'nvdash': \"\\u22AC\",\n    'nvDash': \"\\u22AD\",\n    'nVdash': \"\\u22AE\",\n    'nVDash': \"\\u22AF\",\n    'nvge': \"\\u2265\\u20D2\",\n    'nvgt': \">\\u20D2\",\n    'nvHarr': \"\\u2904\",\n    'nvinfin': \"\\u29DE\",\n    'nvlArr': \"\\u2902\",\n    'nvle': \"\\u2264\\u20D2\",\n    'nvlt': \"<\\u20D2\",\n    'nvltrie': \"\\u22B4\\u20D2\",\n    'nvrArr': \"\\u2903\",\n    'nvrtrie': \"\\u22B5\\u20D2\",\n    'nvsim': \"\\u223C\\u20D2\",\n    'nwarhk': \"\\u2923\",\n    'nwarr': \"\\u2196\",\n    'nwArr': \"\\u21D6\",\n    'nwarrow': \"\\u2196\",\n    'nwnear': \"\\u2927\",\n    'oacute': '\\xF3',\n    'Oacute': '\\xD3',\n    'oast': \"\\u229B\",\n    'ocir': \"\\u229A\",\n    'ocirc': '\\xF4',\n    'Ocirc': '\\xD4',\n    'ocy': \"\\u043E\",\n    'Ocy': \"\\u041E\",\n    'odash': \"\\u229D\",\n    'odblac': \"\\u0151\",\n    'Odblac': \"\\u0150\",\n    'odiv': \"\\u2A38\",\n    'odot': \"\\u2299\",\n    'odsold': \"\\u29BC\",\n    'oelig': \"\\u0153\",\n    'OElig': \"\\u0152\",\n    'ofcir': \"\\u29BF\",\n    'ofr': \"\\uD835\\uDD2C\",\n    'Ofr': \"\\uD835\\uDD12\",\n    'ogon': \"\\u02DB\",\n    'ograve': '\\xF2',\n    'Ograve': '\\xD2',\n    'ogt': \"\\u29C1\",\n    'ohbar': \"\\u29B5\",\n    'ohm': \"\\u03A9\",\n    'oint': \"\\u222E\",\n    'olarr': \"\\u21BA\",\n    'olcir': \"\\u29BE\",\n    'olcross': \"\\u29BB\",\n    'oline': \"\\u203E\",\n    'olt': \"\\u29C0\",\n    'omacr': \"\\u014D\",\n    'Omacr': \"\\u014C\",\n    'omega': \"\\u03C9\",\n    'Omega': \"\\u03A9\",\n    'omicron': \"\\u03BF\",\n    'Omicron': \"\\u039F\",\n    'omid': \"\\u29B6\",\n    'ominus': \"\\u2296\",\n    'oopf': \"\\uD835\\uDD60\",\n    'Oopf': \"\\uD835\\uDD46\",\n    'opar': \"\\u29B7\",\n    'OpenCurlyDoubleQuote': \"\\u201C\",\n    'OpenCurlyQuote': \"\\u2018\",\n    'operp': \"\\u29B9\",\n    'oplus': \"\\u2295\",\n    'or': \"\\u2228\",\n    'Or': \"\\u2A54\",\n    'orarr': \"\\u21BB\",\n    'ord': \"\\u2A5D\",\n    'order': \"\\u2134\",\n    'orderof': \"\\u2134\",\n    'ordf': '\\xAA',\n    'ordm': '\\xBA',\n    'origof': \"\\u22B6\",\n    'oror': \"\\u2A56\",\n    'orslope': \"\\u2A57\",\n    'orv': \"\\u2A5B\",\n    'oS': \"\\u24C8\",\n    'oscr': \"\\u2134\",\n    'Oscr': \"\\uD835\\uDCAA\",\n    'oslash': '\\xF8',\n    'Oslash': '\\xD8',\n    'osol': \"\\u2298\",\n    'otilde': '\\xF5',\n    'Otilde': '\\xD5',\n    'otimes': \"\\u2297\",\n    'Otimes': \"\\u2A37\",\n    'otimesas': \"\\u2A36\",\n    'ouml': '\\xF6',\n    'Ouml': '\\xD6',\n    'ovbar': \"\\u233D\",\n    'OverBar': \"\\u203E\",\n    'OverBrace': \"\\u23DE\",\n    'OverBracket': \"\\u23B4\",\n    'OverParenthesis': \"\\u23DC\",\n    'par': \"\\u2225\",\n    'para': '\\xB6',\n    'parallel': \"\\u2225\",\n    'parsim': \"\\u2AF3\",\n    'parsl': \"\\u2AFD\",\n    'part': \"\\u2202\",\n    'PartialD': \"\\u2202\",\n    'pcy': \"\\u043F\",\n    'Pcy': \"\\u041F\",\n    'percnt': '%',\n    'period': '.',\n    'permil': \"\\u2030\",\n    'perp': \"\\u22A5\",\n    'pertenk': \"\\u2031\",\n    'pfr': \"\\uD835\\uDD2D\",\n    'Pfr': \"\\uD835\\uDD13\",\n    'phi': \"\\u03C6\",\n    'Phi': \"\\u03A6\",\n    'phiv': \"\\u03D5\",\n    'phmmat': \"\\u2133\",\n    'phone': \"\\u260E\",\n    'pi': \"\\u03C0\",\n    'Pi': \"\\u03A0\",\n    'pitchfork': \"\\u22D4\",\n    'piv': \"\\u03D6\",\n    'planck': \"\\u210F\",\n    'planckh': \"\\u210E\",\n    'plankv': \"\\u210F\",\n    'plus': '+',\n    'plusacir': \"\\u2A23\",\n    'plusb': \"\\u229E\",\n    'pluscir': \"\\u2A22\",\n    'plusdo': \"\\u2214\",\n    'plusdu': \"\\u2A25\",\n    'pluse': \"\\u2A72\",\n    'PlusMinus': '\\xB1',\n    'plusmn': '\\xB1',\n    'plussim': \"\\u2A26\",\n    'plustwo': \"\\u2A27\",\n    'pm': '\\xB1',\n    'Poincareplane': \"\\u210C\",\n    'pointint': \"\\u2A15\",\n    'popf': \"\\uD835\\uDD61\",\n    'Popf': \"\\u2119\",\n    'pound': '\\xA3',\n    'pr': \"\\u227A\",\n    'Pr': \"\\u2ABB\",\n    'prap': \"\\u2AB7\",\n    'prcue': \"\\u227C\",\n    'pre': \"\\u2AAF\",\n    'prE': \"\\u2AB3\",\n    'prec': \"\\u227A\",\n    'precapprox': \"\\u2AB7\",\n    'preccurlyeq': \"\\u227C\",\n    'Precedes': \"\\u227A\",\n    'PrecedesEqual': \"\\u2AAF\",\n    'PrecedesSlantEqual': \"\\u227C\",\n    'PrecedesTilde': \"\\u227E\",\n    'preceq': \"\\u2AAF\",\n    'precnapprox': \"\\u2AB9\",\n    'precneqq': \"\\u2AB5\",\n    'precnsim': \"\\u22E8\",\n    'precsim': \"\\u227E\",\n    'prime': \"\\u2032\",\n    'Prime': \"\\u2033\",\n    'primes': \"\\u2119\",\n    'prnap': \"\\u2AB9\",\n    'prnE': \"\\u2AB5\",\n    'prnsim': \"\\u22E8\",\n    'prod': \"\\u220F\",\n    'Product': \"\\u220F\",\n    'profalar': \"\\u232E\",\n    'profline': \"\\u2312\",\n    'profsurf': \"\\u2313\",\n    'prop': \"\\u221D\",\n    'Proportion': \"\\u2237\",\n    'Proportional': \"\\u221D\",\n    'propto': \"\\u221D\",\n    'prsim': \"\\u227E\",\n    'prurel': \"\\u22B0\",\n    'pscr': \"\\uD835\\uDCC5\",\n    'Pscr': \"\\uD835\\uDCAB\",\n    'psi': \"\\u03C8\",\n    'Psi': \"\\u03A8\",\n    'puncsp': \"\\u2008\",\n    'qfr': \"\\uD835\\uDD2E\",\n    'Qfr': \"\\uD835\\uDD14\",\n    'qint': \"\\u2A0C\",\n    'qopf': \"\\uD835\\uDD62\",\n    'Qopf': \"\\u211A\",\n    'qprime': \"\\u2057\",\n    'qscr': \"\\uD835\\uDCC6\",\n    'Qscr': \"\\uD835\\uDCAC\",\n    'quaternions': \"\\u210D\",\n    'quatint': \"\\u2A16\",\n    'quest': '?',\n    'questeq': \"\\u225F\",\n    'quot': '\"',\n    'QUOT': '\"',\n    'rAarr': \"\\u21DB\",\n    'race': \"\\u223D\\u0331\",\n    'racute': \"\\u0155\",\n    'Racute': \"\\u0154\",\n    'radic': \"\\u221A\",\n    'raemptyv': \"\\u29B3\",\n    'rang': \"\\u27E9\",\n    'Rang': \"\\u27EB\",\n    'rangd': \"\\u2992\",\n    'range': \"\\u29A5\",\n    'rangle': \"\\u27E9\",\n    'raquo': '\\xBB',\n    'rarr': \"\\u2192\",\n    'rArr': \"\\u21D2\",\n    'Rarr': \"\\u21A0\",\n    'rarrap': \"\\u2975\",\n    'rarrb': \"\\u21E5\",\n    'rarrbfs': \"\\u2920\",\n    'rarrc': \"\\u2933\",\n    'rarrfs': \"\\u291E\",\n    'rarrhk': \"\\u21AA\",\n    'rarrlp': \"\\u21AC\",\n    'rarrpl': \"\\u2945\",\n    'rarrsim': \"\\u2974\",\n    'rarrtl': \"\\u21A3\",\n    'Rarrtl': \"\\u2916\",\n    'rarrw': \"\\u219D\",\n    'ratail': \"\\u291A\",\n    'rAtail': \"\\u291C\",\n    'ratio': \"\\u2236\",\n    'rationals': \"\\u211A\",\n    'rbarr': \"\\u290D\",\n    'rBarr': \"\\u290F\",\n    'RBarr': \"\\u2910\",\n    'rbbrk': \"\\u2773\",\n    'rbrace': '}',\n    'rbrack': ']',\n    'rbrke': \"\\u298C\",\n    'rbrksld': \"\\u298E\",\n    'rbrkslu': \"\\u2990\",\n    'rcaron': \"\\u0159\",\n    'Rcaron': \"\\u0158\",\n    'rcedil': \"\\u0157\",\n    'Rcedil': \"\\u0156\",\n    'rceil': \"\\u2309\",\n    'rcub': '}',\n    'rcy': \"\\u0440\",\n    'Rcy': \"\\u0420\",\n    'rdca': \"\\u2937\",\n    'rdldhar': \"\\u2969\",\n    'rdquo': \"\\u201D\",\n    'rdquor': \"\\u201D\",\n    'rdsh': \"\\u21B3\",\n    'Re': \"\\u211C\",\n    'real': \"\\u211C\",\n    'realine': \"\\u211B\",\n    'realpart': \"\\u211C\",\n    'reals': \"\\u211D\",\n    'rect': \"\\u25AD\",\n    'reg': '\\xAE',\n    'REG': '\\xAE',\n    'ReverseElement': \"\\u220B\",\n    'ReverseEquilibrium': \"\\u21CB\",\n    'ReverseUpEquilibrium': \"\\u296F\",\n    'rfisht': \"\\u297D\",\n    'rfloor': \"\\u230B\",\n    'rfr': \"\\uD835\\uDD2F\",\n    'Rfr': \"\\u211C\",\n    'rHar': \"\\u2964\",\n    'rhard': \"\\u21C1\",\n    'rharu': \"\\u21C0\",\n    'rharul': \"\\u296C\",\n    'rho': \"\\u03C1\",\n    'Rho': \"\\u03A1\",\n    'rhov': \"\\u03F1\",\n    'RightAngleBracket': \"\\u27E9\",\n    'rightarrow': \"\\u2192\",\n    'Rightarrow': \"\\u21D2\",\n    'RightArrow': \"\\u2192\",\n    'RightArrowBar': \"\\u21E5\",\n    'RightArrowLeftArrow': \"\\u21C4\",\n    'rightarrowtail': \"\\u21A3\",\n    'RightCeiling': \"\\u2309\",\n    'RightDoubleBracket': \"\\u27E7\",\n    'RightDownTeeVector': \"\\u295D\",\n    'RightDownVector': \"\\u21C2\",\n    'RightDownVectorBar': \"\\u2955\",\n    'RightFloor': \"\\u230B\",\n    'rightharpoondown': \"\\u21C1\",\n    'rightharpoonup': \"\\u21C0\",\n    'rightleftarrows': \"\\u21C4\",\n    'rightleftharpoons': \"\\u21CC\",\n    'rightrightarrows': \"\\u21C9\",\n    'rightsquigarrow': \"\\u219D\",\n    'RightTee': \"\\u22A2\",\n    'RightTeeArrow': \"\\u21A6\",\n    'RightTeeVector': \"\\u295B\",\n    'rightthreetimes': \"\\u22CC\",\n    'RightTriangle': \"\\u22B3\",\n    'RightTriangleBar': \"\\u29D0\",\n    'RightTriangleEqual': \"\\u22B5\",\n    'RightUpDownVector': \"\\u294F\",\n    'RightUpTeeVector': \"\\u295C\",\n    'RightUpVector': \"\\u21BE\",\n    'RightUpVectorBar': \"\\u2954\",\n    'RightVector': \"\\u21C0\",\n    'RightVectorBar': \"\\u2953\",\n    'ring': \"\\u02DA\",\n    'risingdotseq': \"\\u2253\",\n    'rlarr': \"\\u21C4\",\n    'rlhar': \"\\u21CC\",\n    'rlm': \"\\u200F\",\n    'rmoust': \"\\u23B1\",\n    'rmoustache': \"\\u23B1\",\n    'rnmid': \"\\u2AEE\",\n    'roang': \"\\u27ED\",\n    'roarr': \"\\u21FE\",\n    'robrk': \"\\u27E7\",\n    'ropar': \"\\u2986\",\n    'ropf': \"\\uD835\\uDD63\",\n    'Ropf': \"\\u211D\",\n    'roplus': \"\\u2A2E\",\n    'rotimes': \"\\u2A35\",\n    'RoundImplies': \"\\u2970\",\n    'rpar': ')',\n    'rpargt': \"\\u2994\",\n    'rppolint': \"\\u2A12\",\n    'rrarr': \"\\u21C9\",\n    'Rrightarrow': \"\\u21DB\",\n    'rsaquo': \"\\u203A\",\n    'rscr': \"\\uD835\\uDCC7\",\n    'Rscr': \"\\u211B\",\n    'rsh': \"\\u21B1\",\n    'Rsh': \"\\u21B1\",\n    'rsqb': ']',\n    'rsquo': \"\\u2019\",\n    'rsquor': \"\\u2019\",\n    'rthree': \"\\u22CC\",\n    'rtimes': \"\\u22CA\",\n    'rtri': \"\\u25B9\",\n    'rtrie': \"\\u22B5\",\n    'rtrif': \"\\u25B8\",\n    'rtriltri': \"\\u29CE\",\n    'RuleDelayed': \"\\u29F4\",\n    'ruluhar': \"\\u2968\",\n    'rx': \"\\u211E\",\n    'sacute': \"\\u015B\",\n    'Sacute': \"\\u015A\",\n    'sbquo': \"\\u201A\",\n    'sc': \"\\u227B\",\n    'Sc': \"\\u2ABC\",\n    'scap': \"\\u2AB8\",\n    'scaron': \"\\u0161\",\n    'Scaron': \"\\u0160\",\n    'sccue': \"\\u227D\",\n    'sce': \"\\u2AB0\",\n    'scE': \"\\u2AB4\",\n    'scedil': \"\\u015F\",\n    'Scedil': \"\\u015E\",\n    'scirc': \"\\u015D\",\n    'Scirc': \"\\u015C\",\n    'scnap': \"\\u2ABA\",\n    'scnE': \"\\u2AB6\",\n    'scnsim': \"\\u22E9\",\n    'scpolint': \"\\u2A13\",\n    'scsim': \"\\u227F\",\n    'scy': \"\\u0441\",\n    'Scy': \"\\u0421\",\n    'sdot': \"\\u22C5\",\n    'sdotb': \"\\u22A1\",\n    'sdote': \"\\u2A66\",\n    'searhk': \"\\u2925\",\n    'searr': \"\\u2198\",\n    'seArr': \"\\u21D8\",\n    'searrow': \"\\u2198\",\n    'sect': '\\xA7',\n    'semi': ';',\n    'seswar': \"\\u2929\",\n    'setminus': \"\\u2216\",\n    'setmn': \"\\u2216\",\n    'sext': \"\\u2736\",\n    'sfr': \"\\uD835\\uDD30\",\n    'Sfr': \"\\uD835\\uDD16\",\n    'sfrown': \"\\u2322\",\n    'sharp': \"\\u266F\",\n    'shchcy': \"\\u0449\",\n    'SHCHcy': \"\\u0429\",\n    'shcy': \"\\u0448\",\n    'SHcy': \"\\u0428\",\n    'ShortDownArrow': \"\\u2193\",\n    'ShortLeftArrow': \"\\u2190\",\n    'shortmid': \"\\u2223\",\n    'shortparallel': \"\\u2225\",\n    'ShortRightArrow': \"\\u2192\",\n    'ShortUpArrow': \"\\u2191\",\n    'shy': '\\xAD',\n    'sigma': \"\\u03C3\",\n    'Sigma': \"\\u03A3\",\n    'sigmaf': \"\\u03C2\",\n    'sigmav': \"\\u03C2\",\n    'sim': \"\\u223C\",\n    'simdot': \"\\u2A6A\",\n    'sime': \"\\u2243\",\n    'simeq': \"\\u2243\",\n    'simg': \"\\u2A9E\",\n    'simgE': \"\\u2AA0\",\n    'siml': \"\\u2A9D\",\n    'simlE': \"\\u2A9F\",\n    'simne': \"\\u2246\",\n    'simplus': \"\\u2A24\",\n    'simrarr': \"\\u2972\",\n    'slarr': \"\\u2190\",\n    'SmallCircle': \"\\u2218\",\n    'smallsetminus': \"\\u2216\",\n    'smashp': \"\\u2A33\",\n    'smeparsl': \"\\u29E4\",\n    'smid': \"\\u2223\",\n    'smile': \"\\u2323\",\n    'smt': \"\\u2AAA\",\n    'smte': \"\\u2AAC\",\n    'smtes': \"\\u2AAC\\uFE00\",\n    'softcy': \"\\u044C\",\n    'SOFTcy': \"\\u042C\",\n    'sol': '/',\n    'solb': \"\\u29C4\",\n    'solbar': \"\\u233F\",\n    'sopf': \"\\uD835\\uDD64\",\n    'Sopf': \"\\uD835\\uDD4A\",\n    'spades': \"\\u2660\",\n    'spadesuit': \"\\u2660\",\n    'spar': \"\\u2225\",\n    'sqcap': \"\\u2293\",\n    'sqcaps': \"\\u2293\\uFE00\",\n    'sqcup': \"\\u2294\",\n    'sqcups': \"\\u2294\\uFE00\",\n    'Sqrt': \"\\u221A\",\n    'sqsub': \"\\u228F\",\n    'sqsube': \"\\u2291\",\n    'sqsubset': \"\\u228F\",\n    'sqsubseteq': \"\\u2291\",\n    'sqsup': \"\\u2290\",\n    'sqsupe': \"\\u2292\",\n    'sqsupset': \"\\u2290\",\n    'sqsupseteq': \"\\u2292\",\n    'squ': \"\\u25A1\",\n    'square': \"\\u25A1\",\n    'Square': \"\\u25A1\",\n    'SquareIntersection': \"\\u2293\",\n    'SquareSubset': \"\\u228F\",\n    'SquareSubsetEqual': \"\\u2291\",\n    'SquareSuperset': \"\\u2290\",\n    'SquareSupersetEqual': \"\\u2292\",\n    'SquareUnion': \"\\u2294\",\n    'squarf': \"\\u25AA\",\n    'squf': \"\\u25AA\",\n    'srarr': \"\\u2192\",\n    'sscr': \"\\uD835\\uDCC8\",\n    'Sscr': \"\\uD835\\uDCAE\",\n    'ssetmn': \"\\u2216\",\n    'ssmile': \"\\u2323\",\n    'sstarf': \"\\u22C6\",\n    'star': \"\\u2606\",\n    'Star': \"\\u22C6\",\n    'starf': \"\\u2605\",\n    'straightepsilon': \"\\u03F5\",\n    'straightphi': \"\\u03D5\",\n    'strns': '\\xAF',\n    'sub': \"\\u2282\",\n    'Sub': \"\\u22D0\",\n    'subdot': \"\\u2ABD\",\n    'sube': \"\\u2286\",\n    'subE': \"\\u2AC5\",\n    'subedot': \"\\u2AC3\",\n    'submult': \"\\u2AC1\",\n    'subne': \"\\u228A\",\n    'subnE': \"\\u2ACB\",\n    'subplus': \"\\u2ABF\",\n    'subrarr': \"\\u2979\",\n    'subset': \"\\u2282\",\n    'Subset': \"\\u22D0\",\n    'subseteq': \"\\u2286\",\n    'subseteqq': \"\\u2AC5\",\n    'SubsetEqual': \"\\u2286\",\n    'subsetneq': \"\\u228A\",\n    'subsetneqq': \"\\u2ACB\",\n    'subsim': \"\\u2AC7\",\n    'subsub': \"\\u2AD5\",\n    'subsup': \"\\u2AD3\",\n    'succ': \"\\u227B\",\n    'succapprox': \"\\u2AB8\",\n    'succcurlyeq': \"\\u227D\",\n    'Succeeds': \"\\u227B\",\n    'SucceedsEqual': \"\\u2AB0\",\n    'SucceedsSlantEqual': \"\\u227D\",\n    'SucceedsTilde': \"\\u227F\",\n    'succeq': \"\\u2AB0\",\n    'succnapprox': \"\\u2ABA\",\n    'succneqq': \"\\u2AB6\",\n    'succnsim': \"\\u22E9\",\n    'succsim': \"\\u227F\",\n    'SuchThat': \"\\u220B\",\n    'sum': \"\\u2211\",\n    'Sum': \"\\u2211\",\n    'sung': \"\\u266A\",\n    'sup': \"\\u2283\",\n    'Sup': \"\\u22D1\",\n    'sup1': '\\xB9',\n    'sup2': '\\xB2',\n    'sup3': '\\xB3',\n    'supdot': \"\\u2ABE\",\n    'supdsub': \"\\u2AD8\",\n    'supe': \"\\u2287\",\n    'supE': \"\\u2AC6\",\n    'supedot': \"\\u2AC4\",\n    'Superset': \"\\u2283\",\n    'SupersetEqual': \"\\u2287\",\n    'suphsol': \"\\u27C9\",\n    'suphsub': \"\\u2AD7\",\n    'suplarr': \"\\u297B\",\n    'supmult': \"\\u2AC2\",\n    'supne': \"\\u228B\",\n    'supnE': \"\\u2ACC\",\n    'supplus': \"\\u2AC0\",\n    'supset': \"\\u2283\",\n    'Supset': \"\\u22D1\",\n    'supseteq': \"\\u2287\",\n    'supseteqq': \"\\u2AC6\",\n    'supsetneq': \"\\u228B\",\n    'supsetneqq': \"\\u2ACC\",\n    'supsim': \"\\u2AC8\",\n    'supsub': \"\\u2AD4\",\n    'supsup': \"\\u2AD6\",\n    'swarhk': \"\\u2926\",\n    'swarr': \"\\u2199\",\n    'swArr': \"\\u21D9\",\n    'swarrow': \"\\u2199\",\n    'swnwar': \"\\u292A\",\n    'szlig': '\\xDF',\n    'Tab': '\\t',\n    'target': \"\\u2316\",\n    'tau': \"\\u03C4\",\n    'Tau': \"\\u03A4\",\n    'tbrk': \"\\u23B4\",\n    'tcaron': \"\\u0165\",\n    'Tcaron': \"\\u0164\",\n    'tcedil': \"\\u0163\",\n    'Tcedil': \"\\u0162\",\n    'tcy': \"\\u0442\",\n    'Tcy': \"\\u0422\",\n    'tdot': \"\\u20DB\",\n    'telrec': \"\\u2315\",\n    'tfr': \"\\uD835\\uDD31\",\n    'Tfr': \"\\uD835\\uDD17\",\n    'there4': \"\\u2234\",\n    'therefore': \"\\u2234\",\n    'Therefore': \"\\u2234\",\n    'theta': \"\\u03B8\",\n    'Theta': \"\\u0398\",\n    'thetasym': \"\\u03D1\",\n    'thetav': \"\\u03D1\",\n    'thickapprox': \"\\u2248\",\n    'thicksim': \"\\u223C\",\n    'ThickSpace': \"\\u205F\\u200A\",\n    'thinsp': \"\\u2009\",\n    'ThinSpace': \"\\u2009\",\n    'thkap': \"\\u2248\",\n    'thksim': \"\\u223C\",\n    'thorn': '\\xFE',\n    'THORN': '\\xDE',\n    'tilde': \"\\u02DC\",\n    'Tilde': \"\\u223C\",\n    'TildeEqual': \"\\u2243\",\n    'TildeFullEqual': \"\\u2245\",\n    'TildeTilde': \"\\u2248\",\n    'times': '\\xD7',\n    'timesb': \"\\u22A0\",\n    'timesbar': \"\\u2A31\",\n    'timesd': \"\\u2A30\",\n    'tint': \"\\u222D\",\n    'toea': \"\\u2928\",\n    'top': \"\\u22A4\",\n    'topbot': \"\\u2336\",\n    'topcir': \"\\u2AF1\",\n    'topf': \"\\uD835\\uDD65\",\n    'Topf': \"\\uD835\\uDD4B\",\n    'topfork': \"\\u2ADA\",\n    'tosa': \"\\u2929\",\n    'tprime': \"\\u2034\",\n    'trade': \"\\u2122\",\n    'TRADE': \"\\u2122\",\n    'triangle': \"\\u25B5\",\n    'triangledown': \"\\u25BF\",\n    'triangleleft': \"\\u25C3\",\n    'trianglelefteq': \"\\u22B4\",\n    'triangleq': \"\\u225C\",\n    'triangleright': \"\\u25B9\",\n    'trianglerighteq': \"\\u22B5\",\n    'tridot': \"\\u25EC\",\n    'trie': \"\\u225C\",\n    'triminus': \"\\u2A3A\",\n    'TripleDot': \"\\u20DB\",\n    'triplus': \"\\u2A39\",\n    'trisb': \"\\u29CD\",\n    'tritime': \"\\u2A3B\",\n    'trpezium': \"\\u23E2\",\n    'tscr': \"\\uD835\\uDCC9\",\n    'Tscr': \"\\uD835\\uDCAF\",\n    'tscy': \"\\u0446\",\n    'TScy': \"\\u0426\",\n    'tshcy': \"\\u045B\",\n    'TSHcy': \"\\u040B\",\n    'tstrok': \"\\u0167\",\n    'Tstrok': \"\\u0166\",\n    'twixt': \"\\u226C\",\n    'twoheadleftarrow': \"\\u219E\",\n    'twoheadrightarrow': \"\\u21A0\",\n    'uacute': '\\xFA',\n    'Uacute': '\\xDA',\n    'uarr': \"\\u2191\",\n    'uArr': \"\\u21D1\",\n    'Uarr': \"\\u219F\",\n    'Uarrocir': \"\\u2949\",\n    'ubrcy': \"\\u045E\",\n    'Ubrcy': \"\\u040E\",\n    'ubreve': \"\\u016D\",\n    'Ubreve': \"\\u016C\",\n    'ucirc': '\\xFB',\n    'Ucirc': '\\xDB',\n    'ucy': \"\\u0443\",\n    'Ucy': \"\\u0423\",\n    'udarr': \"\\u21C5\",\n    'udblac': \"\\u0171\",\n    'Udblac': \"\\u0170\",\n    'udhar': \"\\u296E\",\n    'ufisht': \"\\u297E\",\n    'ufr': \"\\uD835\\uDD32\",\n    'Ufr': \"\\uD835\\uDD18\",\n    'ugrave': '\\xF9',\n    'Ugrave': '\\xD9',\n    'uHar': \"\\u2963\",\n    'uharl': \"\\u21BF\",\n    'uharr': \"\\u21BE\",\n    'uhblk': \"\\u2580\",\n    'ulcorn': \"\\u231C\",\n    'ulcorner': \"\\u231C\",\n    'ulcrop': \"\\u230F\",\n    'ultri': \"\\u25F8\",\n    'umacr': \"\\u016B\",\n    'Umacr': \"\\u016A\",\n    'uml': '\\xA8',\n    'UnderBar': '_',\n    'UnderBrace': \"\\u23DF\",\n    'UnderBracket': \"\\u23B5\",\n    'UnderParenthesis': \"\\u23DD\",\n    'Union': \"\\u22C3\",\n    'UnionPlus': \"\\u228E\",\n    'uogon': \"\\u0173\",\n    'Uogon': \"\\u0172\",\n    'uopf': \"\\uD835\\uDD66\",\n    'Uopf': \"\\uD835\\uDD4C\",\n    'uparrow': \"\\u2191\",\n    'Uparrow': \"\\u21D1\",\n    'UpArrow': \"\\u2191\",\n    'UpArrowBar': \"\\u2912\",\n    'UpArrowDownArrow': \"\\u21C5\",\n    'updownarrow': \"\\u2195\",\n    'Updownarrow': \"\\u21D5\",\n    'UpDownArrow': \"\\u2195\",\n    'UpEquilibrium': \"\\u296E\",\n    'upharpoonleft': \"\\u21BF\",\n    'upharpoonright': \"\\u21BE\",\n    'uplus': \"\\u228E\",\n    'UpperLeftArrow': \"\\u2196\",\n    'UpperRightArrow': \"\\u2197\",\n    'upsi': \"\\u03C5\",\n    'Upsi': \"\\u03D2\",\n    'upsih': \"\\u03D2\",\n    'upsilon': \"\\u03C5\",\n    'Upsilon': \"\\u03A5\",\n    'UpTee': \"\\u22A5\",\n    'UpTeeArrow': \"\\u21A5\",\n    'upuparrows': \"\\u21C8\",\n    'urcorn': \"\\u231D\",\n    'urcorner': \"\\u231D\",\n    'urcrop': \"\\u230E\",\n    'uring': \"\\u016F\",\n    'Uring': \"\\u016E\",\n    'urtri': \"\\u25F9\",\n    'uscr': \"\\uD835\\uDCCA\",\n    'Uscr': \"\\uD835\\uDCB0\",\n    'utdot': \"\\u22F0\",\n    'utilde': \"\\u0169\",\n    'Utilde': \"\\u0168\",\n    'utri': \"\\u25B5\",\n    'utrif': \"\\u25B4\",\n    'uuarr': \"\\u21C8\",\n    'uuml': '\\xFC',\n    'Uuml': '\\xDC',\n    'uwangle': \"\\u29A7\",\n    'vangrt': \"\\u299C\",\n    'varepsilon': \"\\u03F5\",\n    'varkappa': \"\\u03F0\",\n    'varnothing': \"\\u2205\",\n    'varphi': \"\\u03D5\",\n    'varpi': \"\\u03D6\",\n    'varpropto': \"\\u221D\",\n    'varr': \"\\u2195\",\n    'vArr': \"\\u21D5\",\n    'varrho': \"\\u03F1\",\n    'varsigma': \"\\u03C2\",\n    'varsubsetneq': \"\\u228A\\uFE00\",\n    'varsubsetneqq': \"\\u2ACB\\uFE00\",\n    'varsupsetneq': \"\\u228B\\uFE00\",\n    'varsupsetneqq': \"\\u2ACC\\uFE00\",\n    'vartheta': \"\\u03D1\",\n    'vartriangleleft': \"\\u22B2\",\n    'vartriangleright': \"\\u22B3\",\n    'vBar': \"\\u2AE8\",\n    'Vbar': \"\\u2AEB\",\n    'vBarv': \"\\u2AE9\",\n    'vcy': \"\\u0432\",\n    'Vcy': \"\\u0412\",\n    'vdash': \"\\u22A2\",\n    'vDash': \"\\u22A8\",\n    'Vdash': \"\\u22A9\",\n    'VDash': \"\\u22AB\",\n    'Vdashl': \"\\u2AE6\",\n    'vee': \"\\u2228\",\n    'Vee': \"\\u22C1\",\n    'veebar': \"\\u22BB\",\n    'veeeq': \"\\u225A\",\n    'vellip': \"\\u22EE\",\n    'verbar': '|',\n    'Verbar': \"\\u2016\",\n    'vert': '|',\n    'Vert': \"\\u2016\",\n    'VerticalBar': \"\\u2223\",\n    'VerticalLine': '|',\n    'VerticalSeparator': \"\\u2758\",\n    'VerticalTilde': \"\\u2240\",\n    'VeryThinSpace': \"\\u200A\",\n    'vfr': \"\\uD835\\uDD33\",\n    'Vfr': \"\\uD835\\uDD19\",\n    'vltri': \"\\u22B2\",\n    'vnsub': \"\\u2282\\u20D2\",\n    'vnsup': \"\\u2283\\u20D2\",\n    'vopf': \"\\uD835\\uDD67\",\n    'Vopf': \"\\uD835\\uDD4D\",\n    'vprop': \"\\u221D\",\n    'vrtri': \"\\u22B3\",\n    'vscr': \"\\uD835\\uDCCB\",\n    'Vscr': \"\\uD835\\uDCB1\",\n    'vsubne': \"\\u228A\\uFE00\",\n    'vsubnE': \"\\u2ACB\\uFE00\",\n    'vsupne': \"\\u228B\\uFE00\",\n    'vsupnE': \"\\u2ACC\\uFE00\",\n    'Vvdash': \"\\u22AA\",\n    'vzigzag': \"\\u299A\",\n    'wcirc': \"\\u0175\",\n    'Wcirc': \"\\u0174\",\n    'wedbar': \"\\u2A5F\",\n    'wedge': \"\\u2227\",\n    'Wedge': \"\\u22C0\",\n    'wedgeq': \"\\u2259\",\n    'weierp': \"\\u2118\",\n    'wfr': \"\\uD835\\uDD34\",\n    'Wfr': \"\\uD835\\uDD1A\",\n    'wopf': \"\\uD835\\uDD68\",\n    'Wopf': \"\\uD835\\uDD4E\",\n    'wp': \"\\u2118\",\n    'wr': \"\\u2240\",\n    'wreath': \"\\u2240\",\n    'wscr': \"\\uD835\\uDCCC\",\n    'Wscr': \"\\uD835\\uDCB2\",\n    'xcap': \"\\u22C2\",\n    'xcirc': \"\\u25EF\",\n    'xcup': \"\\u22C3\",\n    'xdtri': \"\\u25BD\",\n    'xfr': \"\\uD835\\uDD35\",\n    'Xfr': \"\\uD835\\uDD1B\",\n    'xharr': \"\\u27F7\",\n    'xhArr': \"\\u27FA\",\n    'xi': \"\\u03BE\",\n    'Xi': \"\\u039E\",\n    'xlarr': \"\\u27F5\",\n    'xlArr': \"\\u27F8\",\n    'xmap': \"\\u27FC\",\n    'xnis': \"\\u22FB\",\n    'xodot': \"\\u2A00\",\n    'xopf': \"\\uD835\\uDD69\",\n    'Xopf': \"\\uD835\\uDD4F\",\n    'xoplus': \"\\u2A01\",\n    'xotime': \"\\u2A02\",\n    'xrarr': \"\\u27F6\",\n    'xrArr': \"\\u27F9\",\n    'xscr': \"\\uD835\\uDCCD\",\n    'Xscr': \"\\uD835\\uDCB3\",\n    'xsqcup': \"\\u2A06\",\n    'xuplus': \"\\u2A04\",\n    'xutri': \"\\u25B3\",\n    'xvee': \"\\u22C1\",\n    'xwedge': \"\\u22C0\",\n    'yacute': '\\xFD',\n    'Yacute': '\\xDD',\n    'yacy': \"\\u044F\",\n    'YAcy': \"\\u042F\",\n    'ycirc': \"\\u0177\",\n    'Ycirc': \"\\u0176\",\n    'ycy': \"\\u044B\",\n    'Ycy': \"\\u042B\",\n    'yen': '\\xA5',\n    'yfr': \"\\uD835\\uDD36\",\n    'Yfr': \"\\uD835\\uDD1C\",\n    'yicy': \"\\u0457\",\n    'YIcy': \"\\u0407\",\n    'yopf': \"\\uD835\\uDD6A\",\n    'Yopf': \"\\uD835\\uDD50\",\n    'yscr': \"\\uD835\\uDCCE\",\n    'Yscr': \"\\uD835\\uDCB4\",\n    'yucy': \"\\u044E\",\n    'YUcy': \"\\u042E\",\n    'yuml': '\\xFF',\n    'Yuml': \"\\u0178\",\n    'zacute': \"\\u017A\",\n    'Zacute': \"\\u0179\",\n    'zcaron': \"\\u017E\",\n    'Zcaron': \"\\u017D\",\n    'zcy': \"\\u0437\",\n    'Zcy': \"\\u0417\",\n    'zdot': \"\\u017C\",\n    'Zdot': \"\\u017B\",\n    'zeetrf': \"\\u2128\",\n    'ZeroWidthSpace': \"\\u200B\",\n    'zeta': \"\\u03B6\",\n    'Zeta': \"\\u0396\",\n    'zfr': \"\\uD835\\uDD37\",\n    'Zfr': \"\\u2128\",\n    'zhcy': \"\\u0436\",\n    'ZHcy': \"\\u0416\",\n    'zigrarr': \"\\u21DD\",\n    'zopf': \"\\uD835\\uDD6B\",\n    'Zopf': \"\\u2124\",\n    'zscr': \"\\uD835\\uDCCF\",\n    'Zscr': \"\\uD835\\uDCB5\",\n    'zwj': \"\\u200D\",\n    'zwnj': \"\\u200C\"\n  };\n  var decodeMapLegacy = {\n    'aacute': '\\xE1',\n    'Aacute': '\\xC1',\n    'acirc': '\\xE2',\n    'Acirc': '\\xC2',\n    'acute': '\\xB4',\n    'aelig': '\\xE6',\n    'AElig': '\\xC6',\n    'agrave': '\\xE0',\n    'Agrave': '\\xC0',\n    'amp': '&',\n    'AMP': '&',\n    'aring': '\\xE5',\n    'Aring': '\\xC5',\n    'atilde': '\\xE3',\n    'Atilde': '\\xC3',\n    'auml': '\\xE4',\n    'Auml': '\\xC4',\n    'brvbar': '\\xA6',\n    'ccedil': '\\xE7',\n    'Ccedil': '\\xC7',\n    'cedil': '\\xB8',\n    'cent': '\\xA2',\n    'copy': '\\xA9',\n    'COPY': '\\xA9',\n    'curren': '\\xA4',\n    'deg': '\\xB0',\n    'divide': '\\xF7',\n    'eacute': '\\xE9',\n    'Eacute': '\\xC9',\n    'ecirc': '\\xEA',\n    'Ecirc': '\\xCA',\n    'egrave': '\\xE8',\n    'Egrave': '\\xC8',\n    'eth': '\\xF0',\n    'ETH': '\\xD0',\n    'euml': '\\xEB',\n    'Euml': '\\xCB',\n    'frac12': '\\xBD',\n    'frac14': '\\xBC',\n    'frac34': '\\xBE',\n    'gt': '>',\n    'GT': '>',\n    'iacute': '\\xED',\n    'Iacute': '\\xCD',\n    'icirc': '\\xEE',\n    'Icirc': '\\xCE',\n    'iexcl': '\\xA1',\n    'igrave': '\\xEC',\n    'Igrave': '\\xCC',\n    'iquest': '\\xBF',\n    'iuml': '\\xEF',\n    'Iuml': '\\xCF',\n    'laquo': '\\xAB',\n    'lt': '<',\n    'LT': '<',\n    'macr': '\\xAF',\n    'micro': '\\xB5',\n    'middot': '\\xB7',\n    'nbsp': '\\xA0',\n    'not': '\\xAC',\n    'ntilde': '\\xF1',\n    'Ntilde': '\\xD1',\n    'oacute': '\\xF3',\n    'Oacute': '\\xD3',\n    'ocirc': '\\xF4',\n    'Ocirc': '\\xD4',\n    'ograve': '\\xF2',\n    'Ograve': '\\xD2',\n    'ordf': '\\xAA',\n    'ordm': '\\xBA',\n    'oslash': '\\xF8',\n    'Oslash': '\\xD8',\n    'otilde': '\\xF5',\n    'Otilde': '\\xD5',\n    'ouml': '\\xF6',\n    'Ouml': '\\xD6',\n    'para': '\\xB6',\n    'plusmn': '\\xB1',\n    'pound': '\\xA3',\n    'quot': '\"',\n    'QUOT': '\"',\n    'raquo': '\\xBB',\n    'reg': '\\xAE',\n    'REG': '\\xAE',\n    'sect': '\\xA7',\n    'shy': '\\xAD',\n    'sup1': '\\xB9',\n    'sup2': '\\xB2',\n    'sup3': '\\xB3',\n    'szlig': '\\xDF',\n    'thorn': '\\xFE',\n    'THORN': '\\xDE',\n    'times': '\\xD7',\n    'uacute': '\\xFA',\n    'Uacute': '\\xDA',\n    'ucirc': '\\xFB',\n    'Ucirc': '\\xDB',\n    'ugrave': '\\xF9',\n    'Ugrave': '\\xD9',\n    'uml': '\\xA8',\n    'uuml': '\\xFC',\n    'Uuml': '\\xDC',\n    'yacute': '\\xFD',\n    'Yacute': '\\xDD',\n    'yen': '\\xA5',\n    'yuml': '\\xFF'\n  };\n  var decodeMapNumeric = {\n    '0': \"\\uFFFD\",\n    '128': \"\\u20AC\",\n    '130': \"\\u201A\",\n    '131': \"\\u0192\",\n    '132': \"\\u201E\",\n    '133': \"\\u2026\",\n    '134': \"\\u2020\",\n    '135': \"\\u2021\",\n    '136': \"\\u02C6\",\n    '137': \"\\u2030\",\n    '138': \"\\u0160\",\n    '139': \"\\u2039\",\n    '140': \"\\u0152\",\n    '142': \"\\u017D\",\n    '145': \"\\u2018\",\n    '146': \"\\u2019\",\n    '147': \"\\u201C\",\n    '148': \"\\u201D\",\n    '149': \"\\u2022\",\n    '150': \"\\u2013\",\n    '151': \"\\u2014\",\n    '152': \"\\u02DC\",\n    '153': \"\\u2122\",\n    '154': \"\\u0161\",\n    '155': \"\\u203A\",\n    '156': \"\\u0153\",\n    '158': \"\\u017E\",\n    '159': \"\\u0178\"\n  };\n  var invalidReferenceCodePoints = [1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 64976, 64977, 64978, 64979, 64980, 64981, 64982, 64983, 64984, 64985, 64986, 64987, 64988, 64989, 64990, 64991, 64992, 64993, 64994, 64995, 64996, 64997, 64998, 64999, 65000, 65001, 65002, 65003, 65004, 65005, 65006, 65007, 65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214, 393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894, 720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574, 1048575, 1114110, 1114111];\n  /*--------------------------------------------------------------------------*/\n\n  var stringFromCharCode = String.fromCharCode;\n  var object = {};\n  var hasOwnProperty = object.hasOwnProperty;\n\n  var has = function has(object, propertyName) {\n    return hasOwnProperty.call(object, propertyName);\n  };\n\n  var contains = function contains(array, value) {\n    var index = -1;\n    var length = array.length;\n\n    while (++index < length) {\n      if (array[index] == value) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var merge = function merge(options, defaults) {\n    if (!options) {\n      return defaults;\n    }\n\n    var result = {};\n    var key;\n\n    for (key in defaults) {\n      // A `hasOwnProperty` check is not needed here, since only recognized\n      // option names are used anyway. Any others are ignored.\n      result[key] = has(options, key) ? options[key] : defaults[key];\n    }\n\n    return result;\n  }; // Modified version of `ucs2encode`; see https://mths.be/punycode.\n\n\n  var codePointToSymbol = function codePointToSymbol(codePoint, strict) {\n    var output = '';\n\n    if (codePoint >= 0xD800 && codePoint <= 0xDFFF || codePoint > 0x10FFFF) {\n      // See issue #4:\n      // “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n      // greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n      // REPLACEMENT CHARACTER.”\n      if (strict) {\n        parseError('character reference outside the permissible Unicode range');\n      }\n\n      return \"\\uFFFD\";\n    }\n\n    if (has(decodeMapNumeric, codePoint)) {\n      if (strict) {\n        parseError('disallowed character reference');\n      }\n\n      return decodeMapNumeric[codePoint];\n    }\n\n    if (strict && contains(invalidReferenceCodePoints, codePoint)) {\n      parseError('disallowed character reference');\n    }\n\n    if (codePoint > 0xFFFF) {\n      codePoint -= 0x10000;\n      output += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    output += stringFromCharCode(codePoint);\n    return output;\n  };\n\n  var hexEscape = function hexEscape(codePoint) {\n    return '&#x' + codePoint.toString(16).toUpperCase() + ';';\n  };\n\n  var decEscape = function decEscape(codePoint) {\n    return '&#' + codePoint + ';';\n  };\n\n  var parseError = function parseError(message) {\n    throw Error('Parse error: ' + message);\n  };\n  /*--------------------------------------------------------------------------*/\n\n\n  var encode = function encode(string, options) {\n    options = merge(options, encode.options);\n    var strict = options.strict;\n\n    if (strict && regexInvalidRawCodePoint.test(string)) {\n      parseError('forbidden code point');\n    }\n\n    var encodeEverything = options.encodeEverything;\n    var useNamedReferences = options.useNamedReferences;\n    var allowUnsafeSymbols = options.allowUnsafeSymbols;\n    var escapeCodePoint = options.decimal ? decEscape : hexEscape;\n\n    var escapeBmpSymbol = function escapeBmpSymbol(symbol) {\n      return escapeCodePoint(symbol.charCodeAt(0));\n    };\n\n    if (encodeEverything) {\n      // Encode ASCII symbols.\n      string = string.replace(regexAsciiWhitelist, function (symbol) {\n        // Use named references if requested & possible.\n        if (useNamedReferences && has(encodeMap, symbol)) {\n          return '&' + encodeMap[symbol] + ';';\n        }\n\n        return escapeBmpSymbol(symbol);\n      }); // Shorten a few escapes that represent two symbols, of which at least one\n      // is within the ASCII range.\n\n      if (useNamedReferences) {\n        string = string.replace(/&gt;\\u20D2/g, '&nvgt;').replace(/&lt;\\u20D2/g, '&nvlt;').replace(/&#x66;&#x6A;/g, '&fjlig;');\n      } // Encode non-ASCII symbols.\n\n\n      if (useNamedReferences) {\n        // Encode non-ASCII symbols that can be replaced with a named reference.\n        string = string.replace(regexEncodeNonAscii, function (string) {\n          // Note: there is no need to check `has(encodeMap, string)` here.\n          return '&' + encodeMap[string] + ';';\n        });\n      } // Note: any remaining non-ASCII symbols are handled outside of the `if`.\n\n    } else if (useNamedReferences) {\n      // Apply named character references.\n      // Encode `<>\"'&` using named character references.\n      if (!allowUnsafeSymbols) {\n        string = string.replace(regexEscape, function (string) {\n          return '&' + encodeMap[string] + ';'; // no need to check `has()` here\n        });\n      } // Shorten escapes that represent two symbols, of which at least one is\n      // `<>\"'&`.\n\n\n      string = string.replace(/&gt;\\u20D2/g, '&nvgt;').replace(/&lt;\\u20D2/g, '&nvlt;'); // Encode non-ASCII symbols that can be replaced with a named reference.\n\n      string = string.replace(regexEncodeNonAscii, function (string) {\n        // Note: there is no need to check `has(encodeMap, string)` here.\n        return '&' + encodeMap[string] + ';';\n      });\n    } else if (!allowUnsafeSymbols) {\n      // Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n      // using named character references.\n      string = string.replace(regexEscape, escapeBmpSymbol);\n    }\n\n    return string // Encode astral symbols.\n    .replace(regexAstralSymbols, function ($0) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      var high = $0.charCodeAt(0);\n      var low = $0.charCodeAt(1);\n      var codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n      return escapeCodePoint(codePoint);\n    }) // Encode any remaining BMP symbols that are not printable ASCII symbols\n    // using a hexadecimal escape.\n    .replace(regexBmpWhitelist, escapeBmpSymbol);\n  }; // Expose default options (so they can be overridden globally).\n\n\n  encode.options = {\n    'allowUnsafeSymbols': false,\n    'encodeEverything': false,\n    'strict': false,\n    'useNamedReferences': false,\n    'decimal': false\n  };\n\n  var decode = function decode(html, options) {\n    options = merge(options, decode.options);\n    var strict = options.strict;\n\n    if (strict && regexInvalidEntity.test(html)) {\n      parseError('malformed character reference');\n    }\n\n    return html.replace(regexDecode, function ($0, $1, $2, $3, $4, $5, $6, $7, $8) {\n      var codePoint;\n      var semicolon;\n      var decDigits;\n      var hexDigits;\n      var reference;\n      var next;\n\n      if ($1) {\n        reference = $1; // Note: there is no need to check `has(decodeMap, reference)`.\n\n        return decodeMap[reference];\n      }\n\n      if ($2) {\n        // Decode named character references without trailing `;`, e.g. `&amp`.\n        // This is only a parse error if it gets converted to `&`, or if it is\n        // followed by `=` in an attribute context.\n        reference = $2;\n        next = $3;\n\n        if (next && options.isAttributeValue) {\n          if (strict && next == '=') {\n            parseError('`&` did not start a character reference');\n          }\n\n          return $0;\n        } else {\n          if (strict) {\n            parseError('named character reference was not terminated by a semicolon');\n          } // Note: there is no need to check `has(decodeMapLegacy, reference)`.\n\n\n          return decodeMapLegacy[reference] + (next || '');\n        }\n      }\n\n      if ($4) {\n        // Decode decimal escapes, e.g. `&#119558;`.\n        decDigits = $4;\n        semicolon = $5;\n\n        if (strict && !semicolon) {\n          parseError('character reference was not terminated by a semicolon');\n        }\n\n        codePoint = parseInt(decDigits, 10);\n        return codePointToSymbol(codePoint, strict);\n      }\n\n      if ($6) {\n        // Decode hexadecimal escapes, e.g. `&#x1D306;`.\n        hexDigits = $6;\n        semicolon = $7;\n\n        if (strict && !semicolon) {\n          parseError('character reference was not terminated by a semicolon');\n        }\n\n        codePoint = parseInt(hexDigits, 16);\n        return codePointToSymbol(codePoint, strict);\n      } // If we’re still here, `if ($7)` is implied; it’s an ambiguous\n      // ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n\n\n      if (strict) {\n        parseError('named character reference was not terminated by a semicolon');\n      }\n\n      return $0;\n    });\n  }; // Expose default options (so they can be overridden globally).\n\n\n  decode.options = {\n    'isAttributeValue': false,\n    'strict': false\n  };\n\n  var escape = function escape(string) {\n    return string.replace(regexEscape, function ($0) {\n      // Note: there is no need to check `has(escapeMap, $0)` here.\n      return escapeMap[$0];\n    });\n  };\n  /*--------------------------------------------------------------------------*/\n\n\n  var he = {\n    'version': '1.2.0',\n    'encode': encode,\n    'decode': decode,\n    'escape': escape,\n    'unescape': decode\n  }; // Some AMD build optimizers, like r.js, check for specific condition patterns\n  // like the following:\n\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    define(function () {\n      return he;\n    });\n  } else if (freeExports && !freeExports.nodeType) {\n    if (freeModule) {\n      // in Node.js, io.js, or RingoJS v0.8.0+\n      freeModule.exports = he;\n    } else {\n      // in Narwhal or RingoJS v0.7.0-\n      for (var key in he) {\n        has(he, key) && (freeExports[key] = he[key]);\n      }\n    }\n  } else {\n    // in Rhino or a web browser\n    root.he = he;\n  }\n})(this);","/* ===================================================\n * bootstrap-markdown.js v2.10.0\n * http://github.com/toopay/bootstrap-markdown\n * ===================================================\n * Copyright 2013-2016 Taufan Aditya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ========================================================== */\n(function (factory) {\n  if (typeof define === \"function\" && define.amd) {\n    //RequireJS\n    define([\"jquery\"], factory);\n  } else if (typeof exports === 'object') {\n    //Backbone.js\n    factory(require('jquery'));\n  } else {\n    //Jquery plugin\n    factory(jQuery);\n  }\n})(function ($) {\n  \"use strict\"; // jshint ;_;\n\n  /* MARKDOWN CLASS DEFINITION\n   * ========================== */\n\n  var Markdown = function Markdown(element, options) {\n    // @TODO : remove this BC on next major release\n    // @see : https://github.com/toopay/bootstrap-markdown/issues/109\n    var opts = ['autofocus', 'savable', 'hideable', 'width', 'height', 'resize', 'iconlibrary', 'language', 'footer', 'fullscreen', 'hiddenButtons', 'disabledButtons'];\n    $.each(opts, function (_, opt) {\n      if (typeof $(element).data(opt) !== 'undefined') {\n        options = typeof options == 'object' ? options : {};\n        options[opt] = $(element).data(opt);\n      }\n    }); // End BC\n    // Class Properties\n\n    this.$ns = 'bootstrap-markdown';\n    this.$element = $(element);\n    this.$editable = {\n      el: null,\n      type: null,\n      attrKeys: [],\n      attrValues: [],\n      content: null\n    };\n    this.$options = $.extend(true, {}, $.fn.markdown.defaults, options, this.$element.data('options'));\n    this.$oldContent = null;\n    this.$isPreview = false;\n    this.$isFullscreen = false;\n    this.$editor = null;\n    this.$textarea = null;\n    this.$handler = [];\n    this.$callback = [];\n    this.$nextTab = [];\n    this.showEditor();\n  };\n\n  Markdown.prototype = {\n    constructor: Markdown,\n    __alterButtons: function __alterButtons(name, alter) {\n      var handler = this.$handler,\n          isAll = name == 'all',\n          that = this;\n      $.each(handler, function (k, v) {\n        var halt = true;\n\n        if (isAll) {\n          halt = false;\n        } else {\n          halt = v.indexOf(name) < 0;\n        }\n\n        if (halt === false) {\n          alter(that.$editor.find('button[data-handler=\"' + v + '\"]'));\n        }\n      });\n    },\n    __buildButtons: function __buildButtons(buttonsArray, container) {\n      var i,\n          ns = this.$ns,\n          handler = this.$handler,\n          callback = this.$callback;\n\n      for (i = 0; i < buttonsArray.length; i++) {\n        // Build each group container\n        var y,\n            btnGroups = buttonsArray[i];\n\n        for (y = 0; y < btnGroups.length; y++) {\n          // Build each button group\n          var z,\n              buttons = btnGroups[y].data,\n              btnGroupContainer = $('<div/>', {\n            'class': 'btn-group'\n          });\n\n          for (z = 0; z < buttons.length; z++) {\n            var button = buttons[z],\n                buttonContainer,\n                buttonIconContainer,\n                buttonHandler = ns + '-' + button.name,\n                buttonIcon = this.__getIcon(button.icon),\n                btnText = button.btnText ? button.btnText : '',\n                btnClass = button.btnClass ? button.btnClass : 'btn',\n                tabIndex = button.tabIndex ? button.tabIndex : '-1',\n                hotkey = typeof button.hotkey !== 'undefined' ? button.hotkey : '',\n                hotkeyCaption = typeof jQuery.hotkeys !== 'undefined' && hotkey !== '' ? ' (' + hotkey + ')' : ''; // Construct the button object\n\n\n            buttonContainer = $('<button></button>');\n            buttonContainer.text(' ' + this.__localize(btnText)).addClass('btn-default btn-sm').addClass(btnClass);\n\n            if (btnClass.match(/btn\\-(primary|success|info|warning|danger|link)/)) {\n              buttonContainer.removeClass('btn-default');\n            }\n\n            buttonContainer.attr({\n              'type': 'button',\n              'title': this.__localize(button.title) + hotkeyCaption,\n              'tabindex': tabIndex,\n              'data-provider': ns,\n              'data-handler': buttonHandler,\n              'data-hotkey': hotkey\n            });\n\n            if (button.toggle === true) {\n              buttonContainer.attr('data-toggle', 'button');\n            }\n\n            buttonIconContainer = $('<span/>');\n            buttonIconContainer.addClass(buttonIcon);\n            buttonIconContainer.prependTo(buttonContainer); // Attach the button object\n\n            btnGroupContainer.append(buttonContainer); // Register handler and callback\n\n            handler.push(buttonHandler);\n            callback.push(button.callback);\n          } // Attach the button group into container dom\n\n\n          container.append(btnGroupContainer);\n        }\n      }\n\n      return container;\n    },\n    __setListener: function __setListener() {\n      // Set size and resizable Properties\n      var hasRows = typeof this.$textarea.attr('rows') !== 'undefined',\n          maxRows = this.$textarea.val().split(\"\\n\").length > 5 ? this.$textarea.val().split(\"\\n\").length : '5',\n          rowsVal = hasRows ? this.$textarea.attr('rows') : maxRows;\n      this.$textarea.attr('rows', rowsVal);\n\n      if (this.$options.resize) {\n        this.$textarea.css('resize', this.$options.resize);\n      }\n\n      this.$textarea.on({\n        'focus': $.proxy(this.focus, this),\n        'keyup': $.proxy(this.keyup, this),\n        'change': $.proxy(this.change, this),\n        'select': $.proxy(this.select, this)\n      });\n\n      if (this.eventSupported('keydown')) {\n        this.$textarea.on('keydown', $.proxy(this.keydown, this));\n      }\n\n      if (this.eventSupported('keypress')) {\n        this.$textarea.on('keypress', $.proxy(this.keypress, this));\n      } // Re-attach markdown data\n\n\n      this.$textarea.data('markdown', this);\n    },\n    __handle: function __handle(e) {\n      var target = $(e.currentTarget),\n          handler = this.$handler,\n          callback = this.$callback,\n          handlerName = target.attr('data-handler'),\n          callbackIndex = handler.indexOf(handlerName),\n          callbackHandler = callback[callbackIndex]; // Trigger the focusin\n\n      $(e.currentTarget).focus();\n      callbackHandler(this); // Trigger onChange for each button handle\n\n      this.change(this); // Unless it was the save handler,\n      // focusin the textarea\n\n      if (handlerName.indexOf('cmdSave') < 0) {\n        this.$textarea.focus();\n      }\n\n      e.preventDefault();\n    },\n    __localize: function __localize(string) {\n      var messages = $.fn.markdown.messages,\n          language = this.$options.language;\n\n      if (typeof messages !== 'undefined' && typeof messages[language] !== 'undefined' && typeof messages[language][string] !== 'undefined') {\n        return messages[language][string];\n      }\n\n      return string;\n    },\n    __getIcon: function __getIcon(src) {\n      return typeof src == 'object' ? src[this.$options.iconlibrary] : src;\n    },\n    setFullscreen: function setFullscreen(mode) {\n      var $editor = this.$editor,\n          $textarea = this.$textarea;\n\n      if (mode === true) {\n        $editor.addClass('md-fullscreen-mode');\n        $('body').addClass('md-nooverflow');\n        this.$options.onFullscreen(this);\n      } else {\n        $editor.removeClass('md-fullscreen-mode');\n        $('body').removeClass('md-nooverflow');\n        if (this.$isPreview == true) this.hidePreview().showPreview();\n      }\n\n      this.$isFullscreen = mode;\n      $textarea.focus();\n    },\n    showEditor: function showEditor() {\n      var instance = this,\n          textarea,\n          ns = this.$ns,\n          container = this.$element,\n          originalHeigth = container.css('height'),\n          originalWidth = container.css('width'),\n          editable = this.$editable,\n          handler = this.$handler,\n          callback = this.$callback,\n          options = this.$options,\n          editor = $('<div/>', {\n        'class': 'md-editor',\n        click: function click() {\n          instance.focus();\n        }\n      }); // Prepare the editor\n\n      if (this.$editor === null) {\n        // Create the panel\n        var editorHeader = $('<div/>', {\n          'class': 'md-header btn-toolbar'\n        }); // Merge the main & additional button groups together\n\n        var allBtnGroups = [];\n        if (options.buttons.length > 0) allBtnGroups = allBtnGroups.concat(options.buttons[0]);\n\n        if (options.additionalButtons.length > 0) {\n          // iterate the additional button groups\n          $.each(options.additionalButtons[0], function (idx, buttonGroup) {\n            // see if the group name of the addional group matches an existing group\n            var matchingGroups = $.grep(allBtnGroups, function (allButtonGroup, allIdx) {\n              return allButtonGroup.name === buttonGroup.name;\n            }); // if it matches add the addional buttons to that group, if not just add it to the all buttons group\n\n            if (matchingGroups.length > 0) {\n              matchingGroups[0].data = matchingGroups[0].data.concat(buttonGroup.data);\n            } else {\n              allBtnGroups.push(options.additionalButtons[0][idx]);\n            }\n          });\n        } // Reduce and/or reorder the button groups\n\n\n        if (options.reorderButtonGroups.length > 0) {\n          allBtnGroups = allBtnGroups.filter(function (btnGroup) {\n            return options.reorderButtonGroups.indexOf(btnGroup.name) > -1;\n          }).sort(function (a, b) {\n            if (options.reorderButtonGroups.indexOf(a.name) < options.reorderButtonGroups.indexOf(b.name)) return -1;\n            if (options.reorderButtonGroups.indexOf(a.name) > options.reorderButtonGroups.indexOf(b.name)) return 1;\n            return 0;\n          });\n        } // Build the buttons\n\n\n        if (allBtnGroups.length > 0) {\n          editorHeader = this.__buildButtons([allBtnGroups], editorHeader);\n        }\n\n        if (options.fullscreen.enable) {\n          editorHeader.append('<div class=\"md-controls\"><a class=\"md-control md-control-fullscreen\" href=\"#\"><span class=\"' + this.__getIcon(options.fullscreen.icons.fullscreenOn) + '\"></span></a></div>').on('click', '.md-control-fullscreen', function (e) {\n            e.preventDefault();\n            instance.setFullscreen(true);\n          });\n        }\n\n        editor.append(editorHeader); // Wrap the textarea\n\n        if (container.is('textarea')) {\n          container.before(editor);\n          textarea = container;\n          textarea.addClass('md-input');\n          editor.append(textarea);\n        } else {\n          var rawContent = typeof toMarkdown == 'function' ? toMarkdown(container.html()) : container.html(),\n              currentContent = $.trim(rawContent); // This is some arbitrary content that could be edited\n\n          textarea = $('<textarea/>', {\n            'class': 'md-input',\n            'val': currentContent\n          });\n          editor.append(textarea); // Save the editable\n\n          editable.el = container;\n          editable.type = container.prop('tagName').toLowerCase();\n          editable.content = container.html();\n          $(container[0].attributes).each(function () {\n            editable.attrKeys.push(this.nodeName);\n            editable.attrValues.push(this.nodeValue);\n          }); // Set editor to blocked the original container\n\n          container.replaceWith(editor);\n        }\n\n        var editorFooter = $('<div/>', {\n          'class': 'md-footer'\n        }),\n            createFooter = false,\n            footer = ''; // Create the footer if savable\n\n        if (options.savable) {\n          createFooter = true;\n          var saveHandler = 'cmdSave'; // Register handler and callback\n\n          handler.push(saveHandler);\n          callback.push(options.onSave);\n          editorFooter.append('<button class=\"btn btn-success\" data-provider=\"' + ns + '\" data-handler=\"' + saveHandler + '\"><i class=\"icon icon-white icon-ok\"></i> ' + this.__localize('Save') + '</button>');\n        }\n\n        footer = typeof options.footer === 'function' ? options.footer(this) : options.footer;\n\n        if ($.trim(footer) !== '') {\n          createFooter = true;\n          editorFooter.append(footer);\n        }\n\n        if (createFooter) editor.append(editorFooter); // Set width\n\n        if (options.width && options.width !== 'inherit') {\n          if (jQuery.isNumeric(options.width)) {\n            editor.css('display', 'table');\n            textarea.css('width', options.width + 'px');\n          } else {\n            editor.addClass(options.width);\n          }\n        } // Set height\n\n\n        if (options.height && options.height !== 'inherit') {\n          if (jQuery.isNumeric(options.height)) {\n            var height = options.height;\n            if (editorHeader) height = Math.max(0, height - editorHeader.outerHeight());\n            if (editorFooter) height = Math.max(0, height - editorFooter.outerHeight());\n            textarea.css('height', height + 'px');\n          } else {\n            editor.addClass(options.height);\n          }\n        } // Reference\n\n\n        this.$editor = editor;\n        this.$textarea = textarea;\n        this.$editable = editable;\n        this.$oldContent = this.getContent();\n\n        this.__setListener(); // Set editor attributes, data short-hand API and listener\n\n\n        this.$editor.attr('id', new Date().getTime());\n        this.$editor.on('click', '[data-provider=\"bootstrap-markdown\"]', $.proxy(this.__handle, this));\n\n        if (this.$element.is(':disabled') || this.$element.is('[readonly]')) {\n          this.$editor.addClass('md-editor-disabled');\n          this.disableButtons('all');\n        }\n\n        if (this.eventSupported('keydown') && typeof jQuery.hotkeys === 'object') {\n          editorHeader.find('[data-provider=\"bootstrap-markdown\"]').each(function () {\n            var $button = $(this),\n                hotkey = $button.attr('data-hotkey');\n\n            if (hotkey.toLowerCase() !== '') {\n              textarea.bind('keydown', hotkey, function () {\n                $button.trigger('click');\n                return false;\n              });\n            }\n          });\n        }\n\n        if (options.initialstate === 'preview') {\n          this.showPreview();\n        } else if (options.initialstate === 'fullscreen' && options.fullscreen.enable) {\n          this.setFullscreen(true);\n        }\n      } else {\n        this.$editor.show();\n      }\n\n      if (options.autofocus) {\n        this.$textarea.focus();\n        this.$editor.addClass('active');\n      }\n\n      if (options.fullscreen.enable && options.fullscreen !== false) {\n        this.$editor.append('<div class=\"md-fullscreen-controls\">' + '<a href=\"#\" class=\"exit-fullscreen\" title=\"Exit fullscreen\"><span class=\"' + this.__getIcon(options.fullscreen.icons.fullscreenOff) + '\">' + '</span></a>' + '</div>');\n        this.$editor.on('click', '.exit-fullscreen', function (e) {\n          e.preventDefault();\n          instance.setFullscreen(false);\n        });\n      } // hide hidden buttons from options\n\n\n      this.hideButtons(options.hiddenButtons); // disable disabled buttons from options\n\n      this.disableButtons(options.disabledButtons); // Trigger the onShow hook\n\n      options.onShow(this);\n      return this;\n    },\n    parseContent: function parseContent(val) {\n      var content; // parse with supported markdown parser\n\n      var val = val || this.$textarea.val();\n\n      if (this.$options.parser) {\n        content = this.$options.parser(val);\n      } else if (typeof markdown == 'object') {\n        content = markdown.toHTML(val);\n      } else if (typeof marked == 'function') {\n        content = marked(val);\n      } else {\n        content = val;\n      }\n\n      return content;\n    },\n    showPreview: function showPreview() {\n      var options = this.$options,\n          container = this.$textarea,\n          afterContainer = container.next(),\n          replacementContainer = $('<div/>', {\n        'class': 'md-preview',\n        'data-provider': 'markdown-preview'\n      }),\n          content,\n          callbackContent;\n\n      if (this.$isPreview == true) {\n        // Avoid sequenced element creation on missused scenario\n        // @see https://github.com/toopay/bootstrap-markdown/issues/170\n        return this;\n      } // Give flag that tell the editor enter preview mode\n\n\n      this.$isPreview = true; // Disable all buttons\n\n      this.disableButtons('all').enableButtons('cmdPreview'); // Try to get the content from callback\n\n      callbackContent = options.onPreview(this); // Set the content based from the callback content if string otherwise parse value from textarea\n\n      content = typeof callbackContent == 'string' ? callbackContent : this.parseContent(); // Build preview element\n\n      replacementContainer.html(content);\n\n      if (afterContainer && afterContainer.attr('class') == 'md-footer') {\n        // If there is footer element, insert the preview container before it\n        replacementContainer.insertBefore(afterContainer);\n      } else {\n        // Otherwise, just append it after textarea\n        container.parent().append(replacementContainer);\n      } // Set the preview element dimensions\n\n\n      replacementContainer.css({\n        width: container.outerWidth() + 'px',\n        height: container.outerHeight() + 'px'\n      });\n\n      if (this.$options.resize) {\n        replacementContainer.css('resize', this.$options.resize);\n      } // Hide the last-active textarea\n\n\n      container.hide(); // Attach the editor instances\n\n      replacementContainer.data('markdown', this);\n\n      if (this.$element.is(':disabled') || this.$element.is('[readonly]')) {\n        this.$editor.addClass('md-editor-disabled');\n        this.disableButtons('all');\n      }\n\n      return this;\n    },\n    hidePreview: function hidePreview() {\n      // Give flag that tell the editor quit preview mode\n      this.$isPreview = false; // Obtain the preview container\n\n      var container = this.$editor.find('div[data-provider=\"markdown-preview\"]'); // Remove the preview container\n\n      container.remove(); // Enable all buttons\n\n      this.enableButtons('all'); // Disable configured disabled buttons\n\n      this.disableButtons(this.$options.disabledButtons); // Back to the editor\n\n      this.$textarea.show();\n\n      this.__setListener();\n\n      return this;\n    },\n    isDirty: function isDirty() {\n      return this.$oldContent != this.getContent();\n    },\n    getContent: function getContent() {\n      return this.$textarea.val();\n    },\n    setContent: function setContent(content) {\n      this.$textarea.val(content);\n      return this;\n    },\n    findSelection: function findSelection(chunk) {\n      var content = this.getContent(),\n          startChunkPosition;\n\n      if (startChunkPosition = content.indexOf(chunk), startChunkPosition >= 0 && chunk.length > 0) {\n        var oldSelection = this.getSelection(),\n            selection;\n        this.setSelection(startChunkPosition, startChunkPosition + chunk.length);\n        selection = this.getSelection();\n        this.setSelection(oldSelection.start, oldSelection.end);\n        return selection;\n      } else {\n        return null;\n      }\n    },\n    getSelection: function getSelection() {\n      var e = this.$textarea[0];\n      return ('selectionStart' in e && function () {\n        var l = e.selectionEnd - e.selectionStart;\n        return {\n          start: e.selectionStart,\n          end: e.selectionEnd,\n          length: l,\n          text: e.value.substr(e.selectionStart, l)\n        };\n      } ||\n      /* browser not supported */\n      function () {\n        return null;\n      })();\n    },\n    setSelection: function setSelection(start, end) {\n      var e = this.$textarea[0];\n      return ('selectionStart' in e && function () {\n        e.selectionStart = start;\n        e.selectionEnd = end;\n        return;\n      } ||\n      /* browser not supported */\n      function () {\n        return null;\n      })();\n    },\n    replaceSelection: function replaceSelection(text) {\n      var e = this.$textarea[0];\n      return ('selectionStart' in e && function () {\n        e.value = e.value.substr(0, e.selectionStart) + text + e.value.substr(e.selectionEnd, e.value.length); // Set cursor to the last replacement end\n\n        e.selectionStart = e.value.length;\n        return this;\n      } ||\n      /* browser not supported */\n      function () {\n        e.value += text;\n        return jQuery(e);\n      })();\n    },\n    getNextTab: function getNextTab() {\n      // Shift the nextTab\n      if (this.$nextTab.length === 0) {\n        return null;\n      } else {\n        var nextTab,\n            tab = this.$nextTab.shift();\n\n        if (typeof tab == 'function') {\n          nextTab = tab();\n        } else if (typeof tab == 'object' && tab.length > 0) {\n          nextTab = tab;\n        }\n\n        return nextTab;\n      }\n    },\n    setNextTab: function setNextTab(start, end) {\n      // Push new selection into nextTab collections\n      if (typeof start == 'string') {\n        var that = this;\n        this.$nextTab.push(function () {\n          return that.findSelection(start);\n        });\n      } else if (typeof start == 'number' && typeof end == 'number') {\n        var oldSelection = this.getSelection();\n        this.setSelection(start, end);\n        this.$nextTab.push(this.getSelection());\n        this.setSelection(oldSelection.start, oldSelection.end);\n      }\n\n      return;\n    },\n    __parseButtonNameParam: function __parseButtonNameParam(names) {\n      return typeof names == 'string' ? names.split(' ') : names;\n    },\n    enableButtons: function enableButtons(name) {\n      var buttons = this.__parseButtonNameParam(name),\n          that = this;\n\n      $.each(buttons, function (i, v) {\n        that.__alterButtons(buttons[i], function (el) {\n          el.removeAttr('disabled');\n        });\n      });\n      return this;\n    },\n    disableButtons: function disableButtons(name) {\n      var buttons = this.__parseButtonNameParam(name),\n          that = this;\n\n      $.each(buttons, function (i, v) {\n        that.__alterButtons(buttons[i], function (el) {\n          el.attr('disabled', 'disabled');\n        });\n      });\n      return this;\n    },\n    hideButtons: function hideButtons(name) {\n      var buttons = this.__parseButtonNameParam(name),\n          that = this;\n\n      $.each(buttons, function (i, v) {\n        that.__alterButtons(buttons[i], function (el) {\n          el.addClass('hidden');\n        });\n      });\n      return this;\n    },\n    showButtons: function showButtons(name) {\n      var buttons = this.__parseButtonNameParam(name),\n          that = this;\n\n      $.each(buttons, function (i, v) {\n        that.__alterButtons(buttons[i], function (el) {\n          el.removeClass('hidden');\n        });\n      });\n      return this;\n    },\n    eventSupported: function eventSupported(eventName) {\n      var isSupported = eventName in this.$element;\n\n      if (!isSupported) {\n        this.$element.setAttribute(eventName, 'return;');\n        isSupported = typeof this.$element[eventName] === 'function';\n      }\n\n      return isSupported;\n    },\n    keyup: function keyup(e) {\n      var blocked = false;\n\n      switch (e.keyCode) {\n        case 40: // down arrow\n\n        case 38: // up arrow\n\n        case 16: // shift\n\n        case 17: // ctrl\n\n        case 18:\n          // alt\n          break;\n\n        case 9:\n          // tab\n          var nextTab;\n\n          if (nextTab = this.getNextTab(), nextTab !== null) {\n            // Get the nextTab if exists\n            var that = this;\n            setTimeout(function () {\n              that.setSelection(nextTab.start, nextTab.end);\n            }, 500);\n            blocked = true;\n          } else {\n            // The next tab memory contains nothing...\n            // check the cursor position to determine tab action\n            var cursor = this.getSelection();\n\n            if (cursor.start == cursor.end && cursor.end == this.getContent().length) {\n              // The cursor already reach the end of the content\n              blocked = false;\n            } else {\n              // Put the cursor to the end\n              this.setSelection(this.getContent().length, this.getContent().length);\n              blocked = true;\n            }\n          }\n\n          break;\n\n        case 13:\n          // enter\n          blocked = false;\n          break;\n\n        case 27:\n          // escape\n          if (this.$isFullscreen) this.setFullscreen(false);\n          blocked = false;\n          break;\n\n        default:\n          blocked = false;\n      }\n\n      if (blocked) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      this.$options.onChange(this);\n    },\n    change: function change(e) {\n      this.$options.onChange(this);\n      return this;\n    },\n    select: function select(e) {\n      this.$options.onSelect(this);\n      return this;\n    },\n    focus: function focus(e) {\n      var options = this.$options,\n          isHideable = options.hideable,\n          editor = this.$editor;\n      editor.addClass('active'); // Blur other markdown(s)\n\n      $(document).find('.md-editor').each(function () {\n        if ($(this).attr('id') !== editor.attr('id')) {\n          var attachedMarkdown;\n\n          if (attachedMarkdown = $(this).find('textarea').data('markdown'), attachedMarkdown === null) {\n            attachedMarkdown = $(this).find('div[data-provider=\"markdown-preview\"]').data('markdown');\n          }\n\n          if (attachedMarkdown) {\n            attachedMarkdown.blur();\n          }\n        }\n      }); // Trigger the onFocus hook\n\n      options.onFocus(this);\n      return this;\n    },\n    blur: function blur(e) {\n      var options = this.$options,\n          isHideable = options.hideable,\n          editor = this.$editor,\n          editable = this.$editable;\n\n      if (editor.hasClass('active') || this.$element.parent().length === 0) {\n        editor.removeClass('active');\n\n        if (isHideable) {\n          // Check for editable elements\n          if (editable.el !== null) {\n            // Build the original element\n            var oldElement = $('<' + editable.type + '/>'),\n                content = this.getContent(),\n                currentContent = this.parseContent(content);\n            $(editable.attrKeys).each(function (k, v) {\n              oldElement.attr(editable.attrKeys[k], editable.attrValues[k]);\n            }); // Get the editor content\n\n            oldElement.html(currentContent);\n            editor.replaceWith(oldElement);\n          } else {\n            editor.hide();\n          }\n        } // Trigger the onBlur hook\n\n\n        options.onBlur(this);\n      }\n\n      return this;\n    }\n  };\n  /* MARKDOWN PLUGIN DEFINITION\n   * ========================== */\n\n  var old = $.fn.markdown;\n\n  $.fn.markdown = function (option) {\n    return this.each(function () {\n      var $this = $(this),\n          data = $this.data('markdown'),\n          options = typeof option == 'object' && option;\n      if (!data) $this.data('markdown', data = new Markdown(this, options));\n    });\n  };\n\n  $.fn.markdown.messages = {};\n  $.fn.markdown.defaults = {\n    /* Editor Properties */\n    autofocus: false,\n    hideable: false,\n    savable: false,\n    width: 'inherit',\n    height: 'inherit',\n    resize: 'none',\n    iconlibrary: 'glyph',\n    language: 'en',\n    initialstate: 'editor',\n    parser: null,\n\n    /* Buttons Properties */\n    buttons: [[{\n      name: 'groupFont',\n      data: [{\n        name: 'cmdBold',\n        hotkey: 'Ctrl+B',\n        title: 'Bold',\n        icon: {\n          glyph: 'glyphicon glyphicon-bold',\n          fa: 'fa fa-bold',\n          'fa-3': 'icon-bold'\n        },\n        callback: function callback(e) {\n          // Give/remove ** surround the selection\n          var chunk,\n              cursor,\n              selected = e.getSelection(),\n              content = e.getContent();\n\n          if (selected.length === 0) {\n            // Give extra word\n            chunk = e.__localize('strong text');\n          } else {\n            chunk = selected.text;\n          } // transform selection and set the cursor into chunked text\n\n\n          if (content.substr(selected.start - 2, 2) === '**' && content.substr(selected.end, 2) === '**') {\n            e.setSelection(selected.start - 2, selected.end + 2);\n            e.replaceSelection(chunk);\n            cursor = selected.start - 2;\n          } else {\n            e.replaceSelection('**' + chunk + '**');\n            cursor = selected.start + 2;\n          } // Set the cursor\n\n\n          e.setSelection(cursor, cursor + chunk.length);\n        }\n      }, {\n        name: 'cmdItalic',\n        title: 'Italic',\n        hotkey: 'Ctrl+I',\n        icon: {\n          glyph: 'glyphicon glyphicon-italic',\n          fa: 'fa fa-italic',\n          'fa-3': 'icon-italic'\n        },\n        callback: function callback(e) {\n          // Give/remove * surround the selection\n          var chunk,\n              cursor,\n              selected = e.getSelection(),\n              content = e.getContent();\n\n          if (selected.length === 0) {\n            // Give extra word\n            chunk = e.__localize('emphasized text');\n          } else {\n            chunk = selected.text;\n          } // transform selection and set the cursor into chunked text\n\n\n          if (content.substr(selected.start - 1, 1) === '_' && content.substr(selected.end, 1) === '_') {\n            e.setSelection(selected.start - 1, selected.end + 1);\n            e.replaceSelection(chunk);\n            cursor = selected.start - 1;\n          } else {\n            e.replaceSelection('_' + chunk + '_');\n            cursor = selected.start + 1;\n          } // Set the cursor\n\n\n          e.setSelection(cursor, cursor + chunk.length);\n        }\n      }, {\n        name: 'cmdHeading',\n        title: 'Heading',\n        hotkey: 'Ctrl+H',\n        icon: {\n          glyph: 'glyphicon glyphicon-header',\n          fa: 'fa fa-header',\n          'fa-3': 'icon-font'\n        },\n        callback: function callback(e) {\n          // Append/remove ### surround the selection\n          var chunk,\n              cursor,\n              selected = e.getSelection(),\n              content = e.getContent(),\n              pointer,\n              prevChar;\n\n          if (selected.length === 0) {\n            // Give extra word\n            chunk = e.__localize('heading text');\n          } else {\n            chunk = selected.text + '\\n';\n          } // transform selection and set the cursor into chunked text\n\n\n          if ((pointer = 4, content.substr(selected.start - pointer, pointer) === '### ') || (pointer = 3, content.substr(selected.start - pointer, pointer) === '###')) {\n            e.setSelection(selected.start - pointer, selected.end);\n            e.replaceSelection(chunk);\n            cursor = selected.start - pointer;\n          } else if (selected.start > 0 && (prevChar = content.substr(selected.start - 1, 1), !!prevChar && prevChar != '\\n')) {\n            e.replaceSelection('\\n\\n### ' + chunk);\n            cursor = selected.start + 6;\n          } else {\n            // Empty string before element\n            e.replaceSelection('### ' + chunk);\n            cursor = selected.start + 4;\n          } // Set the cursor\n\n\n          e.setSelection(cursor, cursor + chunk.length);\n        }\n      }]\n    }, {\n      name: 'groupLink',\n      data: [{\n        name: 'cmdUrl',\n        title: 'URL/Link',\n        hotkey: 'Ctrl+L',\n        icon: {\n          glyph: 'glyphicon glyphicon-link',\n          fa: 'fa fa-link',\n          'fa-3': 'icon-link'\n        },\n        callback: function callback(e) {\n          // Give [] surround the selection and prepend the link\n          var chunk,\n              cursor,\n              selected = e.getSelection(),\n              content = e.getContent(),\n              link;\n\n          if (selected.length === 0) {\n            // Give extra word\n            chunk = e.__localize('enter link description here');\n          } else {\n            chunk = selected.text;\n          }\n\n          link = prompt(e.__localize('Insert Hyperlink'), 'http://');\n          var urlRegex = new RegExp('^((http|https)://|(mailto:)|(//))[a-z0-9]', 'i');\n\n          if (link !== null && link !== '' && link !== 'http://' && urlRegex.test(link)) {\n            var sanitizedLink = $('<div>' + link + '</div>').text(); // transform selection and set the cursor into chunked text\n\n            e.replaceSelection('[' + chunk + '](' + sanitizedLink + ')');\n            cursor = selected.start + 1; // Set the cursor\n\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }\n      }, {\n        name: 'cmdImage',\n        title: 'Image',\n        hotkey: 'Ctrl+G',\n        icon: {\n          glyph: 'glyphicon glyphicon-picture',\n          fa: 'fa fa-picture-o',\n          'fa-3': 'icon-picture'\n        },\n        callback: function callback(e) {\n          // Give ![] surround the selection and prepend the image link\n          var chunk,\n              cursor,\n              selected = e.getSelection(),\n              content = e.getContent(),\n              link;\n\n          if (selected.length === 0) {\n            // Give extra word\n            chunk = e.__localize('enter image description here');\n          } else {\n            chunk = selected.text;\n          }\n\n          link = prompt(e.__localize('Insert Image Hyperlink'), 'http://');\n          var urlRegex = new RegExp('^((http|https)://|(//))[a-z0-9]', 'i');\n\n          if (link !== null && link !== '' && link !== 'http://' && urlRegex.test(link)) {\n            var sanitizedLink = $('<div>' + link + '</div>').text(); // transform selection and set the cursor into chunked text\n\n            e.replaceSelection('![' + chunk + '](' + sanitizedLink + ' \"' + e.__localize('enter image title here') + '\")');\n            cursor = selected.start + 2; // Set the next tab\n\n            e.setNextTab(e.__localize('enter image title here')); // Set the cursor\n\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }\n      }]\n    }, {\n      name: 'groupMisc',\n      data: [{\n        name: 'cmdList',\n        hotkey: 'Ctrl+U',\n        title: 'Unordered List',\n        icon: {\n          glyph: 'glyphicon glyphicon-list',\n          fa: 'fa fa-list',\n          'fa-3': 'icon-list-ul'\n        },\n        callback: function callback(e) {\n          // Prepend/Give - surround the selection\n          var chunk,\n              cursor,\n              selected = e.getSelection(),\n              content = e.getContent(); // transform selection and set the cursor into chunked text\n\n          if (selected.length === 0) {\n            // Give extra word\n            chunk = e.__localize('list text here');\n            e.replaceSelection('- ' + chunk); // Set the cursor\n\n            cursor = selected.start + 2;\n          } else {\n            if (selected.text.indexOf('\\n') < 0) {\n              chunk = selected.text;\n              e.replaceSelection('- ' + chunk); // Set the cursor\n\n              cursor = selected.start + 2;\n            } else {\n              var list = [];\n              list = selected.text.split('\\n');\n              chunk = list[0];\n              $.each(list, function (k, v) {\n                list[k] = '- ' + v;\n              });\n              e.replaceSelection('\\n\\n' + list.join('\\n')); // Set the cursor\n\n              cursor = selected.start + 4;\n            }\n          } // Set the cursor\n\n\n          e.setSelection(cursor, cursor + chunk.length);\n        }\n      }, {\n        name: 'cmdListO',\n        hotkey: 'Ctrl+O',\n        title: 'Ordered List',\n        icon: {\n          glyph: 'glyphicon glyphicon-th-list',\n          fa: 'fa fa-list-ol',\n          'fa-3': 'icon-list-ol'\n        },\n        callback: function callback(e) {\n          // Prepend/Give - surround the selection\n          var chunk,\n              cursor,\n              selected = e.getSelection(),\n              content = e.getContent(); // transform selection and set the cursor into chunked text\n\n          if (selected.length === 0) {\n            // Give extra word\n            chunk = e.__localize('list text here');\n            e.replaceSelection('1. ' + chunk); // Set the cursor\n\n            cursor = selected.start + 3;\n          } else {\n            if (selected.text.indexOf('\\n') < 0) {\n              chunk = selected.text;\n              e.replaceSelection('1. ' + chunk); // Set the cursor\n\n              cursor = selected.start + 3;\n            } else {\n              var list = [];\n              list = selected.text.split('\\n');\n              chunk = list[0];\n              $.each(list, function (k, v) {\n                list[k] = '1. ' + v;\n              });\n              e.replaceSelection('\\n\\n' + list.join('\\n')); // Set the cursor\n\n              cursor = selected.start + 5;\n            }\n          } // Set the cursor\n\n\n          e.setSelection(cursor, cursor + chunk.length);\n        }\n      }, {\n        name: 'cmdCode',\n        hotkey: 'Ctrl+K',\n        title: 'Code',\n        icon: {\n          glyph: 'glyphicon glyphicon-asterisk',\n          fa: 'fa fa-code',\n          'fa-3': 'icon-code'\n        },\n        callback: function callback(e) {\n          // Give/remove ** surround the selection\n          var chunk,\n              cursor,\n              selected = e.getSelection(),\n              content = e.getContent();\n\n          if (selected.length === 0) {\n            // Give extra word\n            chunk = e.__localize('code text here');\n          } else {\n            chunk = selected.text;\n          } // transform selection and set the cursor into chunked text\n\n\n          if (content.substr(selected.start - 4, 4) === '```\\n' && content.substr(selected.end, 4) === '\\n```') {\n            e.setSelection(selected.start - 4, selected.end + 4);\n            e.replaceSelection(chunk);\n            cursor = selected.start - 4;\n          } else if (content.substr(selected.start - 1, 1) === '`' && content.substr(selected.end, 1) === '`') {\n            e.setSelection(selected.start - 1, selected.end + 1);\n            e.replaceSelection(chunk);\n            cursor = selected.start - 1;\n          } else if (content.indexOf('\\n') > -1) {\n            e.replaceSelection('```\\n' + chunk + '\\n```');\n            cursor = selected.start + 4;\n          } else {\n            e.replaceSelection('`' + chunk + '`');\n            cursor = selected.start + 1;\n          } // Set the cursor\n\n\n          e.setSelection(cursor, cursor + chunk.length);\n        }\n      }, {\n        name: 'cmdQuote',\n        hotkey: 'Ctrl+Q',\n        title: 'Quote',\n        icon: {\n          glyph: 'glyphicon glyphicon-comment',\n          fa: 'fa fa-quote-left',\n          'fa-3': 'icon-quote-left'\n        },\n        callback: function callback(e) {\n          // Prepend/Give - surround the selection\n          var chunk,\n              cursor,\n              selected = e.getSelection(),\n              content = e.getContent(); // transform selection and set the cursor into chunked text\n\n          if (selected.length === 0) {\n            // Give extra word\n            chunk = e.__localize('quote here');\n            e.replaceSelection('> ' + chunk); // Set the cursor\n\n            cursor = selected.start + 2;\n          } else {\n            if (selected.text.indexOf('\\n') < 0) {\n              chunk = selected.text;\n              e.replaceSelection('> ' + chunk); // Set the cursor\n\n              cursor = selected.start + 2;\n            } else {\n              var list = [];\n              list = selected.text.split('\\n');\n              chunk = list[0];\n              $.each(list, function (k, v) {\n                list[k] = '> ' + v;\n              });\n              e.replaceSelection('\\n\\n' + list.join('\\n')); // Set the cursor\n\n              cursor = selected.start + 4;\n            }\n          } // Set the cursor\n\n\n          e.setSelection(cursor, cursor + chunk.length);\n        }\n      }]\n    }, {\n      name: 'groupUtil',\n      data: [{\n        name: 'cmdPreview',\n        toggle: true,\n        hotkey: 'Ctrl+P',\n        title: 'Preview',\n        btnText: 'Preview',\n        btnClass: 'btn btn-primary btn-sm',\n        icon: {\n          glyph: 'glyphicon glyphicon-search',\n          fa: 'fa fa-search',\n          'fa-3': 'icon-search'\n        },\n        callback: function callback(e) {\n          // Check the preview mode and toggle based on this flag\n          var isPreview = e.$isPreview,\n              content;\n\n          if (isPreview === false) {\n            // Give flag that tell the editor enter preview mode\n            e.showPreview();\n          } else {\n            e.hidePreview();\n          }\n        }\n      }]\n    }]],\n    additionalButtons: [],\n    // Place to hook more buttons by code\n    reorderButtonGroups: [],\n    hiddenButtons: [],\n    // Default hidden buttons\n    disabledButtons: [],\n    // Default disabled buttons\n    footer: '',\n    fullscreen: {\n      enable: true,\n      icons: {\n        fullscreenOn: {\n          fa: 'fa fa-expand',\n          glyph: 'glyphicon glyphicon-fullscreen',\n          'fa-3': 'icon-resize-full'\n        },\n        fullscreenOff: {\n          fa: 'fa fa-compress',\n          glyph: 'glyphicon glyphicon-fullscreen',\n          'fa-3': 'icon-resize-small'\n        }\n      }\n    },\n\n    /* Events hook */\n    onShow: function onShow(e) {},\n    onPreview: function onPreview(e) {},\n    onSave: function onSave(e) {},\n    onBlur: function onBlur(e) {},\n    onFocus: function onFocus(e) {},\n    onChange: function onChange(e) {},\n    onFullscreen: function onFullscreen(e) {},\n    onSelect: function onSelect(e) {}\n  };\n  $.fn.markdown.Constructor = Markdown;\n  /* MARKDOWN NO CONFLICT\n   * ==================== */\n\n  $.fn.markdown.noConflict = function () {\n    $.fn.markdown = old;\n    return this;\n  };\n  /* MARKDOWN GLOBAL FUNCTION & DATA-API\n  * ==================================== */\n\n\n  var initMarkdown = function initMarkdown(el) {\n    var $this = el;\n\n    if ($this.data('markdown')) {\n      $this.data('markdown').showEditor();\n      return;\n    }\n\n    $this.markdown();\n  };\n\n  var blurNonFocused = function blurNonFocused(e) {\n    var $activeElement = $(document.activeElement); // Blur event\n\n    $(document).find('.md-editor').each(function () {\n      var $this = $(this),\n          focused = $activeElement.closest('.md-editor')[0] === this,\n          attachedMarkdown = $this.find('textarea').data('markdown') || $this.find('div[data-provider=\"markdown-preview\"]').data('markdown');\n\n      if (attachedMarkdown && !focused) {\n        attachedMarkdown.blur();\n      }\n    });\n  };\n\n  $(document).on('click.markdown.data-api', '[data-provide=\"markdown-editable\"]', function (e) {\n    initMarkdown($(this));\n    e.preventDefault();\n  }).on('click focusin', function (e) {\n    blurNonFocused(e);\n  }).ready(function () {\n    $('textarea[data-provide=\"markdown\"]').each(function () {\n      initMarkdown($(this));\n    });\n  });\n});"],"sourceRoot":""}