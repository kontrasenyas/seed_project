{"version":3,"sources":["common/index.js","common/graphs/dygraphs/components/DygraphsChart.js","views/graphs/components/Dygraphs.js"],"names":["_layout__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_navigation__WEBPACK_IMPORTED_MODULE_1__","_utils__WEBPACK_IMPORTED_MODULE_2__","_widgets__WEBPACK_IMPORTED_MODULE_3__","defaultOptions","DygraphsChart","this","renderChart","props","data","prevProps","JSON","stringify","Dygraph","refs","dygraph","options","Object","objectSpread","react_default","a","createElement","style","ref","React","Component","Dygraphs","state","_this2","getJSON","then","setState","id","className","common","items","icon","editbutton","DygraphsChart_DygraphsChart","customBars","title","ylabel","legend","showRangeSelector","width","height","rollPeriod","showRoller","rangeSelectorHeight","rangeSelectorPlotStrokeColor","rangeSelectorPlotFillColor"],"mappings":"2FAAA,IAAAA,EAAAC,EAAA,IAAAA,EAAAC,EAAAC,EAAA,sBAAAH,EAAA,QAAAI,EAAAH,EAAA,GAAAA,EAAAC,EAAAC,EAAA,sBAAAC,EAAA,QAAAC,EAAAJ,EAAA,IAAAA,EAAAC,EAAAC,EAAA,sBAAAE,EAAA,QAAAC,EAAAL,EAAA,KAAAA,EAAAC,EAAAC,EAAA,sBAAAG,EAAA,IAAAL,EAAAC,EAAAC,EAAA,sBAAAG,EAAA,uICGMC,EAAiB,GACFC,8LAEjBC,KAAKC,YAAYD,KAAKE,MAAMC,iDAGXC,GACbC,KAAKC,UAAUF,EAAUD,QAAUE,KAAKC,UAAUN,KAAKE,MAAMC,OAC/DH,KAAKC,YAAYD,KAAKE,MAAMC,0CAGpBA,GACNA,GACF,IAAII,IACFP,KAAKQ,KAAKC,QACVN,EACAH,KAAKE,MAAMQ,QAAXC,OAAAC,EAAA,EAAAD,CAAA,GAESb,EACAE,KAAKE,MAAMQ,SAEhBZ,oCAMR,OAAOe,EAAAC,EAAAC,cAAA,OAAKC,MAAOhB,KAAKE,MAAMc,MAAOC,IAAI,mBA1BFC,IAAMC,qDCO5BC,6MACnBC,MAAQ,sFACY,IAAAC,EAAAtB,KAClBuB,YAAQ,mCAAmCC,KAAK,SAAArB,GAC9CmB,EAAKG,SAAStB,sCAIhB,OACEU,EAAAC,EAAAC,cAAA,OAAKW,GAAG,WACNb,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACbd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEC,MAAO,CAAC,YACRC,KAAK,0BACLH,UAAU,yCAEZd,EAAAC,EAAAC,cAACa,EAAA,EAAD,OAGFf,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACbd,EAAAC,EAAAC,cAAA,WAASY,UAAU,iCACjBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,oBACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,yCACbd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,aAAd,yEAIAd,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,qBACUF,EAAAC,EAAAC,cAAA,gCADV,oEAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,4CADF,gDAIAF,EAAAC,EAAAC,cAAA,gCACqBF,EAAAC,EAAAC,cAAA,4BADrB,4BAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,qCADF,mFAKAF,EAAAC,EAAAC,cAAA,yBACcF,EAAAC,EAAAC,cAAA,mCADd,iEAEsD,IACpDF,EAAAC,EAAAC,cAAA,+BAHF,8BAKAF,EAAAC,EAAAC,cAAA,wBACaF,EAAAC,EAAAC,cAAA,kCADb,0CAOJF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,yCACbd,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,6BAAf,iRAaNd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAcF,GAAG,WAAWK,YAAY,GACtClB,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,QAAMY,UAAU,eACb,IACDd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,sBAAuB,KAEtCd,EAAAC,EAAAC,cAAA,6BAEFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACbd,EAAAC,EAAAC,cAACiB,EAAD,CACE7B,KAAMH,KAAKqB,MAAMlB,KACjBO,QAAS,CACPuB,YAAY,EACZC,MACE,mDACFC,OAAQ,kBACRC,OAAQ,SACRC,mBAAmB,GAErBrB,MAAO,CAAEsB,MAAO,OAAQC,OAAQ,cAMxC1B,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAcF,GAAG,WAAWK,YAAY,GACtClB,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,QAAMY,UAAU,eACb,IACDd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,sBAAuB,KAEtCd,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACbd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,uBAAb,6EAMAd,EAAAC,EAAAC,cAACiB,EAAD,CACE7B,KAAMH,KAAKqB,MAAMlB,KACjBO,QAAS,CACP8B,WAAY,GACZC,YAAY,EACZR,YAAY,EACZE,OAAQ,kBACRC,OAAQ,SAERC,mBAAmB,EACnBK,oBAAqB,GACrBC,6BAA8B,SAC9BC,2BAA4B,eAE9B5B,MAAO,CAAEsB,MAAO,OAAQC,OAAQ,yBAnIhBrB,IAAMC","file":"static/js/41.fc2a4626.chunk.js","sourcesContent":["export * from './layout'\nexport * from './navigation'\nexport * from './utils'\nexport * from './widgets'","import React from \"react\";\nimport Dygraph from \"dygraphs/index.es5\";\n\nconst defaultOptions = {};\nexport default class DygraphsChart extends React.Component {\n  componentDidMount() {\n    this.renderChart(this.props.data);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (JSON.stringify(prevProps.data) !== JSON.stringify(this.props.data)) {\n      this.renderChart(this.props.data);\n    }\n  }\n  renderChart(data) {\n    if (data) {\n      new Dygraph(\n        this.refs.dygraph,\n        data,\n        this.props.options\n          ? {\n              ...defaultOptions,\n              ...this.props.options\n            }\n          : defaultOptions\n      );\n    }\n  }\n\n  render() {\n    return <div style={this.props.style} ref=\"dygraph\" />;\n  }\n}\n","import React from \"react\";\n\nimport {\n  Stats,\n  BigBreadcrumbs,\n  WidgetGrid,\n  JarvisWidget,\n  getJSON\n} from \"../../../common\";\nimport { DygraphsChart } from \"../../../common/graphs/dygraphs\";\n\nexport default class Dygraphs extends React.Component {\n  state = {};\n  componentDidMount() {\n    getJSON(\"assets/api/graphs/dygraphs.json\").then(data => {\n      this.setState(data);\n    });\n  }\n  render() {\n    return (\n      <div id=\"content\">\n        <div className=\"row\">\n          <BigBreadcrumbs\n            items={[\"Dygraphs\"]}\n            icon=\"fa fa-fw fa-bar-chart-o\"\n            className=\"col-xs-12 col-sm-7 col-md-7 col-lg-4\"\n          />\n          <Stats />\n        </div>\n\n        <WidgetGrid>\n          <div className=\"row\">\n            <article className=\"col-sm-12 col-md-12 col-lg-12\">\n              <div className=\"alert alert-info\">\n                <div className=\"row\">\n                  <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\n                    <h3 className=\"no-margin\">\n                      Dygraphs is a fast, flexible open source JavaScript\n                      charting library.\n                    </h3>\n                    <h5>Features</h5>\n                    <ul>\n                      <li>\n                        Handles <strong>huge data sets</strong>: dygraphs plots\n                        millions of points without getting bogged down.\n                      </li>\n                      <li>\n                        <strong>Interactive out of the box</strong>: zoom, pan\n                        and mouseover are on by default.\n                      </li>\n                      <li>\n                        Strong support for <strong>error bars</strong> /\n                        confidence intervals.\n                      </li>\n                      <li>\n                        <strong>Highly customizable</strong>: using options and\n                        custom callbacks, you can make dygraphs do almost\n                        anything.\n                      </li>\n                      <li>\n                        dygraphs is <strong>highly compatible</strong>: it works\n                        in all major browsers (including IE8). You can even{\" \"}\n                        <strong>pinch to zoom</strong> on mobile/tablet devices!\n                      </li>\n                      <li>\n                        There's an <strong>active community</strong> developing\n                        and supporting dygraphs.\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\n                    <h4>JSX Example</h4>\n                    <pre className=\"prettyprint margin-top-10\">\n                      {`<DygraphsChart data={this.state.data} options={{\n    customBars: true,\n    title: 'Daily Temperatures in New York vs. San Francisco',\n    ylabel: 'Temperature (F)',\n    legend: 'always',\n    showRangeSelector: true\n}} style={{width: '100%', height: '300px'}}/>`}\n                    </pre>\n                  </div>\n                </div>\n              </div>\n\n              <JarvisWidget id=\"wid-id-0\" editbutton={false}>\n                <header>\n                  <span className=\"widget-icon\">\n                    {\" \"}\n                    <i className=\"fa fa-bar-chart-o\" />{\" \"}\n                  </span>\n                  <h2>No roll period</h2>\n                </header>\n                <div>\n                  <div className=\"widget-body\">\n                    <DygraphsChart\n                      data={this.state.data}\n                      options={{\n                        customBars: true,\n                        title:\n                          \"Daily Temperatures in New York vs. San Francisco\",\n                        ylabel: \"Temperature (F)\",\n                        legend: \"always\",\n                        showRangeSelector: true\n                      }}\n                      style={{ width: \"100%\", height: \"300px\" }}\n                    />\n                  </div>\n                </div>\n              </JarvisWidget>\n\n              <JarvisWidget id=\"wid-id-1\" editbutton={false}>\n                <header>\n                  <span className=\"widget-icon\">\n                    {\" \"}\n                    <i className=\"fa fa-bar-chart-o\" />{\" \"}\n                  </span>\n                  <h2>No roll (timestamp)</h2>\n                </header>\n                <div>\n                  <div className=\"widget-body\">\n                    <p className=\"alert alert-success\">\n                      Roll period of 14 timesteps, custom range selector height\n                      and plot color.\n                    </p>\n                    {/* this is what the user will see */}\n\n                    <DygraphsChart\n                      data={this.state.data}\n                      options={{\n                        rollPeriod: 14,\n                        showRoller: true,\n                        customBars: true,\n                        ylabel: \"Temperature (F)\",\n                        legend: \"always\",\n\n                        showRangeSelector: true,\n                        rangeSelectorHeight: 30,\n                        rangeSelectorPlotStrokeColor: \"yellow\",\n                        rangeSelectorPlotFillColor: \"lightyellow\"\n                      }}\n                      style={{ width: \"100%\", height: \"300px\" }}\n                    />\n                  </div>\n                </div>\n              </JarvisWidget>\n            </article>\n          </div>\n        </WidgetGrid>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}