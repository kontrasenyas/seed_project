{"version":3,"sources":["../node_modules/chart.js/src/helpers/index.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/elements/index.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/chart.js/src/chart.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/color-convert/index.js","../node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js"],"names":["module","exports","__webpack_require__","easing","canvas","options","helpers","_set","scope","values","merge","this","color","Element","configuration","extend","initialize","apply","arguments","prototype","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","i","ilen","key","actual","origin","target","type","c0","c1","keys","Object","length","hasOwnProperty","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","defaults","layouts","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","undefined","getScaleDefaults","scale","updateScaleDefaults","additions","addScalesToLayout","chart","each","scales","fullWidth","position","weight","addBox","Arc","Line","Point","Rectangle","filterByPosition","array","where","v","sortByWeight","reverse","forEach","_tmpIndex_","sort","a","b","v0","v1","item","boxes","push","removeBox","layoutItem","index","indexOf","splice","configure","prop","props","update","width","height","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","concat","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","Math","max","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","Ticks","labelsFromTicks","ticks","labels","label","getLineValue","offsetGridLines","lineValue","getPixelForTick","computeTextSize","context","tick","font","isArray","longestText","measureText","parseFontOptions","valueOrDefault","globalDefaults","global","size","fontSize","defaultFontSize","style","fontStyle","defaultFontStyle","family","fontFamily","defaultFontFamily","fontString","parseLineHeight","toLineHeight","lineHeight","display","offset","gridLines","lineWidth","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","borderDash","borderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","callback","formatters","minor","major","paddingLeft","paddingTop","paddingRight","paddingBottom","getTicks","_ticks","mergeTicksOptions","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","noop","tickOpts","map","userCallback","ctx","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","cos","sin","opts","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","min","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","isNullOrUndef","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","round","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","result","maxTicksLimit","floor","draw","optionMajorTicks","isRotated","tickFontColor","fontColor","defaultFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","zeroLineIndex","valueAtIndexOrDefault","textAlign","textBaseline","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","save","strokeStyle","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","rotate","fillStyle","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","PI","value","linear","tickValue","delta","abs","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","pow","uid","id","Array","toString","call","isObject","defaultValue","fn","args","thisArg","loopable","len","arrayEquals","a0","a1","source","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","convert","string","Color","obj","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","degrees","mixinColor","p","w1","w2","toJSON","slice","console","error","spaces","maxes","getValues","space","charAt","capped","chans","sname","svalues","window","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","defineProperty","get","set","animation","duration","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","count","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","data","datasets","isDatasetVisible","getDatasetMeta","element","skip","getIntersectItems","elements","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","dataset","datasetIndex","_index","modes","single","_datasetIndex","x-axis","point","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","plugins","_plugins","_cacheId","register","plugin","unregister","idx","clear","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","config","_invalidate","tooltips","enabled","custom","mode","backgroundColor","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","borderColor","borderWidth","callbacks","beforeTitle","title","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","_options","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","el","pos","eventPosition","nearestElement","d","distanceBetweenPoints","tp","mergeOpacity","colorString","opacity","pushOrConcat","base","toPush","splitNewlines","str","String","split","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getBeforeAfterBodyLines","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","_data","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","filter","itemSort","_chart","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","line","getTooltipSize","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","radius","quadraticCurveTo","closePath","fill","hasTooltipContent","handleEvent","getElementsAtEventForMode","Chart","Animation","animationService","Interaction","platform","Scale","scaleService","Tooltip","Legend","legend","_element","Title","pluginService","PluginBase","canvasHelpers","layoutService","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","animationDuration","onClick","defaultColor","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","clearRect","roundedRect","arcTo","rect","drawPoint","edgeLength","xOffset","yOffset","isNaN","arc","SQRT2","leftX","topY","sideSize","drawImage","clipArea","area","clip","unclipArea","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","matches","match","resolve","inputs","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","configMerge","scaleMerge","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","n","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","func","arg","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","inLabelRange","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","borderCapStyle","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","xRange","hitRadius","pointStyle","hoverBorderWidth","isVertical","bar","getBarBounds","halfWidth","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","_addEventListener","listener","_removeEventListener","createEvent","nativeEvent","addResizeListener","expando","resizer","createElement","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","injectCSS","getElementById","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","event","fromNativeEvent","addEvent","removeEvent","positionIsHorizontal","types","instances","controllers","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","Error","resetElements","reset","newOptions","updateConfig","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","destroy","unbindEvents","toBase64Image","toDataURL","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","configurable","enumerable","res","object","resyncElements","removeHoverStyle","$previousStyle","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","stepSize","fixedStepSize","generationOptions","dataRange","factor","spacing","niceRange","ceil","niceMin","niceMax","numSpaces","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","_fit","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","categoryPercentage","barPercentage","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","horizontalBar","dataPoint","bubble","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","elementOpts","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","halfBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","Bar","Bubble","Doughnut","PolarArea","Radar","Scatter","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock"],"mappings":"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","file":"static/js/75.05c82f15.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","'use strict';\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = typeof target;\n\n    if (type === typeof origin) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n  // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n  // use the new chart options to grab the correct scale\n  constructors: {},\n  // Use a registration function so that we can move to an ES6 map when we no longer need to support\n  // old browsers\n  // Scale config defaults\n  defaults: {},\n  registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n    this.constructors[type] = scaleConstructor;\n    this.defaults[type] = helpers.clone(scaleDefaults);\n  },\n  getScaleConstructor: function getScaleConstructor(type) {\n    return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n  },\n  getScaleDefaults: function getScaleDefaults(type) {\n    // Return the scale defaults merged with the global settings so that we always use the latest ones\n    return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n  },\n  updateScaleDefaults: function updateScaleDefaults(type, additions) {\n    var me = this;\n\n    if (me.defaults.hasOwnProperty(type)) {\n      me.defaults[type] = helpers.extend(me.defaults[type], additions);\n    }\n  },\n  addScalesToLayout: function addScalesToLayout(chart) {\n    // Adds each scale to the chart.boxes array to be sized accordingly\n    helpers.each(chart.scales, function (scale) {\n      // Set ILayoutItem parameters for backwards compatibility\n      scale.fullWidth = scale.options.fullWidth;\n      scale.position = scale.options.position;\n      scale.weight = scale.options.weight;\n      layouts.addBox(chart, scale);\n    });\n  }\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n  return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n  var valueOrDefault = helpers.valueOrDefault;\n  var globalDefaults = defaults.global;\n  var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n  var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n  var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n  return {\n    size: size,\n    style: style,\n    family: family,\n    font: helpers.fontString(size, style, family)\n  };\n}\n\nfunction parseLineHeight(options) {\n  return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n  /**\n   * Get the padding needed for the scale\n   * @method getPadding\n   * @private\n   * @returns {Padding} the necessary padding\n   */\n  getPadding: function getPadding() {\n    var me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  },\n\n  /**\n   * Returns the scale tick objects ({label, major})\n   * @since 2.7\n   */\n  getTicks: function getTicks() {\n    return this._ticks;\n  },\n  // These methods are ordered by lifecyle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n  mergeTicksOptions: function mergeTicksOptions() {\n    var ticks = this.options.ticks;\n\n    if (ticks.minor === false) {\n      ticks.minor = {\n        display: false\n      };\n    }\n\n    if (ticks.major === false) {\n      ticks.major = {\n        display: false\n      };\n    }\n\n    for (var key in ticks) {\n      if (key !== 'major' && key !== 'minor') {\n        if (typeof ticks.minor[key] === 'undefined') {\n          ticks.minor[key] = ticks[key];\n        }\n\n        if (typeof ticks.major[key] === 'undefined') {\n          ticks.major[key] = ticks[key];\n        }\n      }\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    helpers.callback(this.options.beforeUpdate, [this]);\n  },\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this;\n    var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = helpers.extend({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Data min/max\n\n    me.beforeDataLimits();\n    me.determineDataLimits();\n    me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n    // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n    // and must not be accessed directly from outside this class. `this.ticks` being\n    // around for long time and not marked as private, we can't change its structure\n    // without unexpected breaking changes. If you need to access the scale ticks,\n    // use scale.getTicks() instead.\n\n    me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n    // we still support no return (`this.ticks` internally set by calling this method).\n\n    ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n    // COMPAT, we still support no return (`this.ticks` internally changed by calling\n    // this method and supposed to contain only string values).\n\n    labels = me.convertTicksToLabels(ticks) || me.ticks;\n    me.afterTickToLabelConversion();\n    me.ticks = labels; // BACKWARD COMPATIBILITY\n    // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n    // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      tick = ticks[i];\n\n      if (!tick) {\n        ticks.push(tick = {\n          label: label,\n          major: false\n        });\n      } else {\n        tick.label = label;\n      }\n    }\n\n    me._ticks = ticks; // Tick Rotation\n\n    me.beforeCalculateTickRotation();\n    me.calculateTickRotation();\n    me.afterCalculateTickRotation(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: function afterUpdate() {\n    helpers.callback(this.options.afterUpdate, [this]);\n  },\n  //\n  beforeSetDimensions: function beforeSetDimensions() {\n    helpers.callback(this.options.beforeSetDimensions, [this]);\n  },\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  },\n  afterSetDimensions: function afterSetDimensions() {\n    helpers.callback(this.options.afterSetDimensions, [this]);\n  },\n  // Data limits\n  beforeDataLimits: function beforeDataLimits() {\n    helpers.callback(this.options.beforeDataLimits, [this]);\n  },\n  determineDataLimits: helpers.noop,\n  afterDataLimits: function afterDataLimits() {\n    helpers.callback(this.options.afterDataLimits, [this]);\n  },\n  //\n  beforeBuildTicks: function beforeBuildTicks() {\n    helpers.callback(this.options.beforeBuildTicks, [this]);\n  },\n  buildTicks: helpers.noop,\n  afterBuildTicks: function afterBuildTicks() {\n    helpers.callback(this.options.afterBuildTicks, [this]);\n  },\n  beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n    helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n  },\n  convertTicksToLabels: function convertTicksToLabels() {\n    var me = this; // Convert ticks to strings\n\n    var tickOpts = me.options.ticks;\n    me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n  },\n  afterTickToLabelConversion: function afterTickToLabelConversion() {\n    helpers.callback(this.options.afterTickToLabelConversion, [this]);\n  },\n  //\n  beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n    helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n  },\n  calculateTickRotation: function calculateTickRotation() {\n    var me = this;\n    var context = me.ctx;\n    var tickOpts = me.options.ticks;\n    var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n    // between x offsets between 0 and 1.\n\n    var tickFont = parseFontOptions(tickOpts);\n    context.font = tickFont.font;\n    var labelRotation = tickOpts.minRotation || 0;\n\n    if (labels.length && me.options.display && me.isHorizontal()) {\n      var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n      var labelWidth = originalLabelWidth;\n      var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n      var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n      while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n        var angleRadians = helpers.toRadians(labelRotation);\n        cosRotation = Math.cos(angleRadians);\n        sinRotation = Math.sin(angleRadians);\n\n        if (sinRotation * originalLabelWidth > me.maxHeight) {\n          // go back one step\n          labelRotation--;\n          break;\n        }\n\n        labelRotation++;\n        labelWidth = cosRotation * originalLabelWidth;\n      }\n    }\n\n    me.labelRotation = labelRotation;\n  },\n  afterCalculateTickRotation: function afterCalculateTickRotation() {\n    helpers.callback(this.options.afterCalculateTickRotation, [this]);\n  },\n  //\n  beforeFit: function beforeFit() {\n    helpers.callback(this.options.beforeFit, [this]);\n  },\n  fit: function fit() {\n    var me = this; // Reset\n\n    var minSize = me.minSize = {\n      width: 0,\n      height: 0\n    };\n    var labels = labelsFromTicks(me._ticks);\n    var opts = me.options;\n    var tickOpts = opts.ticks;\n    var scaleLabelOpts = opts.scaleLabel;\n    var gridLineOpts = opts.gridLines;\n    var display = opts.display;\n    var isHorizontal = me.isHorizontal();\n    var tickFont = parseFontOptions(tickOpts);\n    var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n    if (isHorizontal) {\n      // subtract the margins to line up with the chartArea if we are a full width scale\n      minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n    } else {\n      minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } // height\n\n\n    if (isHorizontal) {\n      minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } else {\n      minSize.height = me.maxHeight; // fill all the height\n    } // Are we showing a title for the scale?\n\n\n    if (scaleLabelOpts.display && display) {\n      var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n      var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n      if (isHorizontal) {\n        minSize.height += deltaHeight;\n      } else {\n        minSize.width += deltaHeight;\n      }\n    } // Don't bother fitting the ticks if we are not showing them\n\n\n    if (tickOpts.display && display) {\n      var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n      var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n      var lineSpace = tickFont.size * 0.5;\n      var tickPadding = me.options.ticks.padding;\n\n      if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n        me.longestLabelWidth = largestTextWidth;\n        var angleRadians = helpers.toRadians(me.labelRotation);\n        var cosRotation = Math.cos(angleRadians);\n        var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n        var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n        minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        me.ctx.font = tickFont.font;\n        var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n        var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n        // which means that the right padding is dominated by the font height\n\n        if (me.labelRotation !== 0) {\n          me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n        } else {\n          me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = lastLabelWidth / 2 + 3;\n        }\n      } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n        if (tickOpts.mirror) {\n          largestTextWidth = 0;\n        } else {\n          // use lineSpace for consistency with horizontal axis\n          // tickPadding is not implemented for horizontal\n          largestTextWidth += tickPadding + lineSpace;\n        }\n\n        minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n        me.paddingTop = tickFont.size / 2;\n        me.paddingBottom = tickFont.size / 2;\n      }\n    }\n\n    me.handleMargins();\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n\n  /**\n   * Handle margins and padding interactions\n   * @private\n   */\n  handleMargins: function handleMargins() {\n    var me = this;\n\n    if (me.margins) {\n      me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n      me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n      me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n      me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n    }\n  },\n  afterFit: function afterFit() {\n    helpers.callback(this.options.afterFit, [this]);\n  },\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  isFullWidth: function isFullWidth() {\n    return this.options.fullWidth;\n  },\n  // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n  getRightValue: function getRightValue(rawValue) {\n    // Null and undefined values first\n    if (helpers.isNullOrUndef(rawValue)) {\n      return NaN;\n    } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n    if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n      return NaN;\n    } // If it is in fact an object, dive in one more level\n\n\n    if (rawValue) {\n      if (this.isHorizontal()) {\n        if (rawValue.x !== undefined) {\n          return this.getRightValue(rawValue.x);\n        }\n      } else if (rawValue.y !== undefined) {\n        return this.getRightValue(rawValue.y);\n      }\n    } // Value is good, return it\n\n\n    return rawValue;\n  },\n\n  /**\n   * Used to get the value to display in the tooltip for the data at the given index\n   * @param index\n   * @param datasetIndex\n   */\n  getLabelForIndex: helpers.noop,\n\n  /**\n   * Returns the location of the given data point. Value can either be an index or a numerical value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param value\n   * @param index\n   * @param datasetIndex\n   */\n  getPixelForValue: helpers.noop,\n\n  /**\n   * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param pixel\n   */\n  getValueForPixel: helpers.noop,\n\n  /**\n   * Returns the location of the tick at the given index\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForTick: function getPixelForTick(index) {\n    var me = this;\n    var offset = me.options.offset;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var pixel = tickWidth * index + me.paddingLeft;\n\n      if (offset) {\n        pixel += tickWidth / 2;\n      }\n\n      var finalVal = me.left + Math.round(pixel);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n    return me.top + index * (innerHeight / (me._ticks.length - 1));\n  },\n\n  /**\n   * Utility for getting the pixel location of a percentage of scale\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForDecimal: function getPixelForDecimal(decimal) {\n    var me = this;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var valueOffset = innerWidth * decimal + me.paddingLeft;\n      var finalVal = me.left + Math.round(valueOffset);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    return me.top + decimal * me.height;\n  },\n\n  /**\n   * Returns the pixel for the minimum chart value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getBasePixel: function getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  },\n  getBaseValue: function getBaseValue() {\n    var me = this;\n    var min = me.min;\n    var max = me.max;\n    return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  },\n\n  /**\n   * Returns a subset of ticks to be plotted to avoid overlapping labels.\n   * @private\n   */\n  _autoSkip: function _autoSkip(ticks) {\n    var skipRatio;\n    var me = this;\n    var isHorizontal = me.isHorizontal();\n    var optionTicks = me.options.ticks.minor;\n    var tickCount = ticks.length;\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var cosRotation = Math.cos(labelRotationRadians);\n    var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n    var result = [];\n    var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n    var maxTicks;\n\n    if (optionTicks.maxTicksLimit) {\n      maxTicks = optionTicks.maxTicksLimit;\n    }\n\n    if (isHorizontal) {\n      skipRatio = false;\n\n      if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n        skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (maxTicks && tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n      }\n    }\n\n    for (i = 0; i < tickCount; i++) {\n      tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n      shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n      if (shouldSkip && i !== tickCount - 1) {\n        // leave tick in place but make sure it's not displayed (#4635)\n        delete tick.label;\n      }\n\n      result.push(tick);\n    }\n\n    return result;\n  },\n  // Actually draw the scale on the canvas\n  // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n  draw: function draw(chartArea) {\n    var me = this;\n    var options = me.options;\n\n    if (!options.display) {\n      return;\n    }\n\n    var context = me.ctx;\n    var globalDefaults = defaults.global;\n    var optionTicks = options.ticks.minor;\n    var optionMajorTicks = options.ticks.major || optionTicks;\n    var gridLines = options.gridLines;\n    var scaleLabel = options.scaleLabel;\n    var isRotated = me.labelRotation !== 0;\n    var isHorizontal = me.isHorizontal();\n    var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n    var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n    var tickFont = parseFontOptions(optionTicks);\n    var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n    var majorTickFont = parseFontOptions(optionMajorTicks);\n    var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n    var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n    var scaleLabelFont = parseFontOptions(scaleLabel);\n    var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var itemsToDraw = [];\n    var axisWidth = me.options.gridLines.lineWidth;\n    var xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n    var xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n    var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n    var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n    helpers.each(ticks, function (tick, index) {\n      // autoskipper skipped this tick (#4635)\n      if (helpers.isNullOrUndef(tick.label)) {\n        return;\n      }\n\n      var label = tick.label;\n      var lineWidth, lineColor, borderDash, borderDashOffset;\n\n      if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n        // Draw the first index specially\n        lineWidth = gridLines.zeroLineWidth;\n        lineColor = gridLines.zeroLineColor;\n        borderDash = gridLines.zeroLineBorderDash;\n        borderDashOffset = gridLines.zeroLineBorderDashOffset;\n      } else {\n        lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n        lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n        borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n        borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n      } // Common properties\n\n\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n      var textAlign = 'middle';\n      var textBaseline = 'middle';\n      var tickPadding = optionTicks.padding;\n\n      if (isHorizontal) {\n        var labelYOffset = tl + tickPadding;\n\n        if (options.position === 'bottom') {\n          // bottom\n          textBaseline = !isRotated ? 'top' : 'middle';\n          textAlign = !isRotated ? 'center' : 'right';\n          labelY = me.top + labelYOffset;\n        } else {\n          // top\n          textBaseline = !isRotated ? 'bottom' : 'middle';\n          textAlign = !isRotated ? 'center' : 'left';\n          labelY = me.bottom - labelYOffset;\n        }\n\n        var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (xLineValue < me.left) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        xLineValue += helpers.aliasPixel(lineWidth);\n        labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n        tx1 = tx2 = x1 = x2 = xLineValue;\n        ty1 = yTickStart;\n        ty2 = yTickEnd;\n        y1 = chartArea.top;\n        y2 = chartArea.bottom + axisWidth;\n      } else {\n        var isLeft = options.position === 'left';\n        var labelXOffset;\n\n        if (optionTicks.mirror) {\n          textAlign = isLeft ? 'left' : 'right';\n          labelXOffset = tickPadding;\n        } else {\n          textAlign = isLeft ? 'right' : 'left';\n          labelXOffset = tl + tickPadding;\n        }\n\n        labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n        var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (yLineValue < me.top) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        yLineValue += helpers.aliasPixel(lineWidth);\n        labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n        tx1 = xTickStart;\n        tx2 = xTickEnd;\n        x1 = chartArea.left;\n        x2 = chartArea.right + axisWidth;\n        ty1 = ty2 = y1 = y2 = yLineValue;\n      }\n\n      itemsToDraw.push({\n        tx1: tx1,\n        ty1: ty1,\n        tx2: tx2,\n        ty2: ty2,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        labelX: labelX,\n        labelY: labelY,\n        glWidth: lineWidth,\n        glColor: lineColor,\n        glBorderDash: borderDash,\n        glBorderDashOffset: borderDashOffset,\n        rotation: -1 * labelRotationRadians,\n        label: label,\n        major: tick.major,\n        textBaseline: textBaseline,\n        textAlign: textAlign\n      });\n    }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n    helpers.each(itemsToDraw, function (itemToDraw) {\n      if (gridLines.display) {\n        context.save();\n        context.lineWidth = itemToDraw.glWidth;\n        context.strokeStyle = itemToDraw.glColor;\n\n        if (context.setLineDash) {\n          context.setLineDash(itemToDraw.glBorderDash);\n          context.lineDashOffset = itemToDraw.glBorderDashOffset;\n        }\n\n        context.beginPath();\n\n        if (gridLines.drawTicks) {\n          context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n          context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n        }\n\n        if (gridLines.drawOnChartArea) {\n          context.moveTo(itemToDraw.x1, itemToDraw.y1);\n          context.lineTo(itemToDraw.x2, itemToDraw.y2);\n        }\n\n        context.stroke();\n        context.restore();\n      }\n\n      if (optionTicks.display) {\n        // Make sure we draw text in the correct color and font\n        context.save();\n        context.translate(itemToDraw.labelX, itemToDraw.labelY);\n        context.rotate(itemToDraw.rotation);\n        context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n        context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n        context.textBaseline = itemToDraw.textBaseline;\n        context.textAlign = itemToDraw.textAlign;\n        var label = itemToDraw.label;\n\n        if (helpers.isArray(label)) {\n          var lineCount = label.length;\n          var lineHeight = tickFont.size * 1.5;\n          var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n          for (var i = 0; i < lineCount; ++i) {\n            // We just make sure the multiline element is a string here..\n            context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n            y += lineHeight;\n          }\n        } else {\n          context.fillText(label, 0, 0);\n        }\n\n        context.restore();\n      }\n    });\n\n    if (scaleLabel.display) {\n      // Draw the scale label\n      var scaleLabelX;\n      var scaleLabelY;\n      var rotation = 0;\n      var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n      if (isHorizontal) {\n        scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n        scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n      } else {\n        var isLeft = options.position === 'left';\n        scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n        scaleLabelY = me.top + (me.bottom - me.top) / 2;\n        rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n      }\n\n      context.save();\n      context.translate(scaleLabelX, scaleLabelY);\n      context.rotate(rotation);\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n      context.font = scaleLabelFont.font;\n      context.fillText(scaleLabel.labelString, 0, 0);\n      context.restore();\n    }\n\n    if (gridLines.drawBorder) {\n      // Draw the line at the edge of the axis\n      context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n      context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n      var x1 = me.left;\n      var x2 = me.right + axisWidth;\n      var y1 = me.top;\n      var y2 = me.bottom + axisWidth;\n      var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n      if (isHorizontal) {\n        y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n        y1 += aliasPixel;\n        y2 += aliasPixel;\n      } else {\n        x1 = x2 = options.position === 'left' ? me.right : me.left;\n        x1 += aliasPixel;\n        x2 += aliasPixel;\n      }\n\n      context.beginPath();\n      context.moveTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.stroke();\n    }\n  }\n});","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n        if (maxTick < 1e-4) {\n          // all ticks are small numbers; use scientific notation\n          var logTick = helpers.log10(Math.abs(tickValue));\n          tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n        } else {\n          var numDecimal = -1 * Math.floor(logDelta);\n          numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n          tickString = tickValue.toFixed(numDecimal);\n        }\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (typeof obj === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n  chart: null,\n  // the animation associated chart instance\n  currentStep: 0,\n  // the current animation step\n  numSteps: 60,\n  // default number of steps\n  easing: '',\n  // the easing to use for this animation\n  render: null,\n  // render function used by the animation service\n  onAnimationProgress: null,\n  // user specified callback to fire on each step of the animation\n  onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n}); // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'animationObject', {\n  get: function get() {\n    return this;\n  }\n});\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'chartInstance', {\n  get: function get() {\n    return this.chart;\n  },\n  set: function set(value) {\n    this.chart = value;\n  }\n});","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = {\n  frameDuration: 17,\n  animations: [],\n  dropFrames: 0,\n  request: null,\n\n  /**\n   * @param {Chart} chart - The chart to animate.\n   * @param {Chart.Animation} animation - The animation that we will animate.\n   * @param {Number} duration - The animation duration in ms.\n   * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n   */\n  addAnimation: function addAnimation(chart, animation, duration, lazy) {\n    var animations = this.animations;\n    var i, ilen;\n    animation.chart = chart;\n\n    if (!lazy) {\n      chart.animating = true;\n    }\n\n    for (i = 0, ilen = animations.length; i < ilen; ++i) {\n      if (animations[i].chart === chart) {\n        animations[i] = animation;\n        return;\n      }\n    }\n\n    animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n    if (animations.length === 1) {\n      this.requestAnimationFrame();\n    }\n  },\n  cancelAnimation: function cancelAnimation(chart) {\n    var index = helpers.findIndex(this.animations, function (animation) {\n      return animation.chart === chart;\n    });\n\n    if (index !== -1) {\n      this.animations.splice(index, 1);\n      chart.animating = false;\n    }\n  },\n  requestAnimationFrame: function requestAnimationFrame() {\n    var me = this;\n\n    if (me.request === null) {\n      // Skip animation frame requests until the active one is executed.\n      // This can happen when processing mouse events, e.g. 'mousemove'\n      // and 'mouseout' events will trigger multiple renders.\n      me.request = helpers.requestAnimFrame.call(window, function () {\n        me.request = null;\n        me.startDigest();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  startDigest: function startDigest() {\n    var me = this;\n    var startTime = Date.now();\n    var framesToDrop = 0;\n\n    if (me.dropFrames > 1) {\n      framesToDrop = Math.floor(me.dropFrames);\n      me.dropFrames = me.dropFrames % 1;\n    }\n\n    me.advance(1 + framesToDrop);\n    var endTime = Date.now();\n    me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n    if (me.animations.length > 0) {\n      me.requestAnimationFrame();\n    }\n  },\n\n  /**\n   * @private\n   */\n  advance: function advance(count) {\n    var animations = this.animations;\n    var animation, chart;\n    var i = 0;\n\n    while (i < animations.length) {\n      animation = animations[i];\n      chart = animation.chart;\n      animation.currentStep = (animation.currentStep || 0) + count;\n      animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n      helpers.callback(animation.render, [chart, animation], chart);\n      helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n      if (animation.currentStep >= animation.numSteps) {\n        helpers.callback(animation.onAnimationComplete, [animation], chart);\n        chart.animating = false;\n        animations.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nvar positioners = {\n  /**\n   * Average mode places the tooltip at the average position of the elements shown\n   * @function Chart.Tooltip.positioners.average\n   * @param elements {ChartElement[]} the elements being displayed in the tooltip\n   * @returns {Point} tooltip position\n   */\n  average: function average(elements) {\n    if (!elements.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: Math.round(x / count),\n      y: Math.round(y / count)\n    };\n  },\n\n  /**\n   * Gets the tooltip position nearest of the item nearest to the event position\n   * @function Chart.Tooltip.positioners.nearest\n   * @param elements {Chart.Element[]} the tooltip elements\n   * @param eventPosition {Point} the position of the event in canvas coordinates\n   * @returns {Point} the tooltip position\n   */\n  nearest: function nearest(elements, eventPosition) {\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n/**\n * Helper method to merge the opacity into a color\n */\n\nfunction mergeOpacity(colorString, opacity) {\n  var color = helpers.color(colorString);\n  return color.alpha(opacity * color.alpha()).rgbaString();\n} // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (helpers.isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\n\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n} // Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\n\n\nfunction createTooltipItem(element) {\n  var xScale = element._xScale;\n  var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n  var index = element._index;\n  var datasetIndex = element._datasetIndex;\n  return {\n    xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n    yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n    index: index,\n    datasetIndex: datasetIndex,\n    x: element._model.x,\n    y: element._model.y\n  };\n}\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\n\n\nfunction getBaseModel(tooltipOpts) {\n  var globalDefaults = defaults.global;\n  var valueOrDefault = helpers.valueOrDefault;\n  return {\n    // Positioning\n    xPadding: tooltipOpts.xPadding,\n    yPadding: tooltipOpts.yPadding,\n    xAlign: tooltipOpts.xAlign,\n    yAlign: tooltipOpts.yAlign,\n    // Body\n    bodyFontColor: tooltipOpts.bodyFontColor,\n    _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n    _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n    _bodyAlign: tooltipOpts.bodyAlign,\n    bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n    bodySpacing: tooltipOpts.bodySpacing,\n    // Title\n    titleFontColor: tooltipOpts.titleFontColor,\n    _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n    _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n    titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n    _titleAlign: tooltipOpts.titleAlign,\n    titleSpacing: tooltipOpts.titleSpacing,\n    titleMarginBottom: tooltipOpts.titleMarginBottom,\n    // Footer\n    footerFontColor: tooltipOpts.footerFontColor,\n    _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n    _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n    footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n    _footerAlign: tooltipOpts.footerAlign,\n    footerSpacing: tooltipOpts.footerSpacing,\n    footerMarginTop: tooltipOpts.footerMarginTop,\n    // Appearance\n    caretSize: tooltipOpts.caretSize,\n    cornerRadius: tooltipOpts.cornerRadius,\n    backgroundColor: tooltipOpts.backgroundColor,\n    opacity: 0,\n    legendColorBackground: tooltipOpts.multiKeyBackground,\n    displayColors: tooltipOpts.displayColors,\n    borderColor: tooltipOpts.borderColor,\n    borderWidth: tooltipOpts.borderWidth\n  };\n}\n/**\n * Get the size of the tooltip\n */\n\n\nfunction getTooltipSize(tooltip, model) {\n  var ctx = tooltip._chart.ctx;\n  var height = model.yPadding * 2; // Tooltip Padding\n\n  var width = 0; // Count of all lines in the body\n\n  var body = model.body;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n  var titleLineCount = model.title.length;\n  var footerLineCount = model.footer.length;\n  var titleFontSize = model.titleFontSize;\n  var bodyFontSize = model.bodyFontSize;\n  var footerFontSize = model.footerFontSize;\n  height += titleLineCount * titleFontSize; // Title Lines\n\n  height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n  height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n  height += combinedBodyLength * bodyFontSize; // Body Lines\n\n  height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n  height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n  height += footerLineCount * footerFontSize; // Footer Lines\n\n  height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n  // Title width\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n  helpers.each(model.title, maxLineWidth); // Body width\n\n  ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n  helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n  widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n  helpers.each(body, function (bodyItem) {\n    helpers.each(bodyItem.before, maxLineWidth);\n    helpers.each(bodyItem.lines, maxLineWidth);\n    helpers.each(bodyItem.after, maxLineWidth);\n  }); // Reset back to 0\n\n  widthPadding = 0; // Footer width\n\n  ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n  helpers.each(model.footer, maxLineWidth); // Add padding\n\n  width += 2 * model.xPadding;\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Helper to get the alignment of a tooltip given the size\n */\n\n\nfunction determineAlignment(tooltip, size) {\n  var model = tooltip._model;\n  var chart = tooltip._chart;\n  var chartArea = tooltip._chart.chartArea;\n  var xAlign = 'center';\n  var yAlign = 'center';\n\n  if (model.y < size.height) {\n    yAlign = 'top';\n  } else if (model.y > chart.height - size.height) {\n    yAlign = 'bottom';\n  }\n\n  var lf, rf; // functions to determine left, right alignment\n\n  var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n  var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n  var midX = (chartArea.left + chartArea.right) / 2;\n  var midY = (chartArea.top + chartArea.bottom) / 2;\n\n  if (yAlign === 'center') {\n    lf = function lf(x) {\n      return x <= midX;\n    };\n\n    rf = function rf(x) {\n      return x > midX;\n    };\n  } else {\n    lf = function lf(x) {\n      return x <= size.width / 2;\n    };\n\n    rf = function rf(x) {\n      return x >= chart.width - size.width / 2;\n    };\n  }\n\n  olf = function olf(x) {\n    return x + size.width + model.caretSize + model.caretPadding > chart.width;\n  };\n\n  orf = function orf(x) {\n    return x - size.width - model.caretSize - model.caretPadding < 0;\n  };\n\n  yf = function yf(y) {\n    return y <= midY ? 'top' : 'bottom';\n  };\n\n  if (lf(model.x)) {\n    xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n    if (olf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  } else if (rf(model.x)) {\n    xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n    if (orf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  }\n\n  var opts = tooltip._options;\n  return {\n    xAlign: opts.xAlign ? opts.xAlign : xAlign,\n    yAlign: opts.yAlign ? opts.yAlign : yAlign\n  };\n}\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\n\n\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n  // Background Position\n  var x = vm.x;\n  var y = vm.y;\n  var caretSize = vm.caretSize;\n  var caretPadding = vm.caretPadding;\n  var cornerRadius = vm.cornerRadius;\n  var xAlign = alignment.xAlign;\n  var yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n\n  if (xAlign === 'right') {\n    x -= size.width;\n  } else if (xAlign === 'center') {\n    x -= size.width / 2;\n\n    if (x + size.width > chart.width) {\n      x = chart.width - size.width;\n    }\n\n    if (x < 0) {\n      x = 0;\n    }\n  }\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= size.height + paddingAndSize;\n  } else {\n    y -= size.height / 2;\n  }\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n/**\n * Helper to build before and after body lines\n */\n\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n  initialize: function initialize() {\n    this._model = getBaseModel(this._options);\n    this._lastActive = [];\n  },\n  // Get the title\n  // Args are: (tooltipItem, data)\n  getTitle: function getTitle() {\n    var me = this;\n    var opts = me._options;\n    var callbacks = opts.callbacks;\n    var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n    var title = callbacks.title.apply(me, arguments);\n    var afterTitle = callbacks.afterTitle.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  },\n  // Args are: (tooltipItem, data)\n  getBeforeBody: function getBeforeBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n  },\n  // Args are: (tooltipItem, data)\n  getBody: function getBody(tooltipItems, data) {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var bodyItems = [];\n    helpers.each(tooltipItems, function (tooltipItem) {\n      var bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n      pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n      pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  },\n  // Args are: (tooltipItem, data)\n  getAfterBody: function getAfterBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n  },\n  // Get the footer and beforeFooter and afterFooter lines\n  // Args are: (tooltipItem, data)\n  getFooter: function getFooter() {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n    var footer = callbacks.footer.apply(me, arguments);\n    var afterFooter = callbacks.afterFooter.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  },\n  update: function update(changed) {\n    var me = this;\n    var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n    // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n    // which breaks any animations.\n\n    var existingModel = me._model;\n    var model = me._model = getBaseModel(opts);\n    var active = me._active;\n    var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n    var alignment = {\n      xAlign: existingModel.xAlign,\n      yAlign: existingModel.yAlign\n    };\n    var backgroundPoint = {\n      x: existingModel.x,\n      y: existingModel.y\n    };\n    var tooltipSize = {\n      width: existingModel.width,\n      height: existingModel.height\n    };\n    var tooltipPosition = {\n      x: existingModel.caretX,\n      y: existingModel.caretY\n    };\n    var i, len;\n\n    if (active.length) {\n      model.opacity = 1;\n      var labelColors = [];\n      var labelTextColors = [];\n      tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n      var tooltipItems = [];\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(active[i]));\n      } // If the user provided a filter function, use it to modify the tooltip items\n\n\n      if (opts.filter) {\n        tooltipItems = tooltipItems.filter(function (a) {\n          return opts.filter(a, data);\n        });\n      } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n      if (opts.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return opts.itemSort(a, b, data);\n        });\n      } // Determine colors for boxes\n\n\n      helpers.each(tooltipItems, function (tooltipItem) {\n        labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n        labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n      }); // Build the Text Lines\n\n      model.title = me.getTitle(tooltipItems, data);\n      model.beforeBody = me.getBeforeBody(tooltipItems, data);\n      model.body = me.getBody(tooltipItems, data);\n      model.afterBody = me.getAfterBody(tooltipItems, data);\n      model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n      model.x = Math.round(tooltipPosition.x);\n      model.y = Math.round(tooltipPosition.y);\n      model.caretPadding = opts.caretPadding;\n      model.labelColors = labelColors;\n      model.labelTextColors = labelTextColors; // data points\n\n      model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n      tooltipSize = getTooltipSize(this, model);\n      alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n      backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n    } else {\n      model.opacity = 0;\n    }\n\n    model.xAlign = alignment.xAlign;\n    model.yAlign = alignment.yAlign;\n    model.x = backgroundPoint.x;\n    model.y = backgroundPoint.y;\n    model.width = tooltipSize.width;\n    model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n    model.caretX = tooltipPosition.x;\n    model.caretY = tooltipPosition.y;\n    me._model = model;\n\n    if (changed && opts.custom) {\n      opts.custom.call(me, model);\n    }\n\n    return me;\n  },\n  drawCaret: function drawCaret(tooltipPoint, size) {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  },\n  getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n    var x1, x2, x3, y1, y2, y3;\n    var caretSize = vm.caretSize;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var ptX = tooltipPoint.x;\n    var ptY = tooltipPoint.y;\n    var width = size.width;\n    var height = size.height;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        x3 = x1;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        x3 = x1;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        x2 = vm.caretX;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        y3 = y1;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        y3 = y1; // invert drawing order\n\n        var tmp = x3;\n        x3 = x1;\n        x1 = tmp;\n      }\n    }\n\n    return {\n      x1: x1,\n      x2: x2,\n      x3: x3,\n      y1: y1,\n      y2: y2,\n      y3: y3\n    };\n  },\n  drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n    var title = vm.title;\n\n    if (title.length) {\n      ctx.textAlign = vm._titleAlign;\n      ctx.textBaseline = 'top';\n      var titleFontSize = vm.titleFontSize;\n      var titleSpacing = vm.titleSpacing;\n      ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n      ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n      var i, len;\n\n      for (i = 0, len = title.length; i < len; ++i) {\n        ctx.fillText(title[i], pt.x, pt.y);\n        pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === title.length) {\n          pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  },\n  drawBody: function drawBody(pt, vm, ctx, opacity) {\n    var bodyFontSize = vm.bodyFontSize;\n    var bodySpacing = vm.bodySpacing;\n    var body = vm.body;\n    ctx.textAlign = vm._bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n    var xLinePadding = 0;\n\n    var fillLineOfText = function fillLineOfText(line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    }; // Before body lines\n\n\n    ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n    helpers.each(vm.beforeBody, fillLineOfText);\n    var drawColorBoxes = vm.displayColors;\n    xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n    helpers.each(body, function (bodyItem, i) {\n      var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText);\n      helpers.each(bodyItem.lines, function (line) {\n        // Draw Legend-like boxes if needed\n        if (drawColorBoxes) {\n          // Fill a white rect so that colours merge nicely if the opacity is < 1\n          ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n          ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n          ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n          ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n          ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n          ctx.fillStyle = textColor;\n        }\n\n        fillLineOfText(line);\n      });\n      helpers.each(bodyItem.after, fillLineOfText);\n    }); // Reset back to 0 for after body\n\n    xLinePadding = 0; // After body lines\n\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  },\n  drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n    var footer = vm.footer;\n\n    if (footer.length) {\n      pt.y += vm.footerMarginTop;\n      ctx.textAlign = vm._footerAlign;\n      ctx.textBaseline = 'top';\n      ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n      ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n      helpers.each(footer, function (line) {\n        ctx.fillText(line, pt.x, pt.y);\n        pt.y += vm.footerFontSize + vm.footerSpacing;\n      });\n    }\n  },\n  drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n    ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n    ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n    ctx.lineWidth = vm.borderWidth;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var x = pt.x;\n    var y = pt.y;\n    var width = tooltipSize.width;\n    var height = tooltipSize.height;\n    var radius = vm.cornerRadius;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (vm.borderWidth > 0) {\n      ctx.stroke();\n    }\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n\n    if (vm.opacity === 0) {\n      return;\n    }\n\n    var tooltipSize = {\n      width: vm.width,\n      height: vm.height\n    };\n    var pt = {\n      x: vm.x,\n      y: vm.y\n    }; // IE11/Edge does not like very small opacities, so snap to 0\n\n    var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n    var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n    if (this._options.enabled && hasTooltipContent) {\n      // Draw Background\n      this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n      pt.x += vm.xPadding;\n      pt.y += vm.yPadding; // Titles\n\n      this.drawTitle(pt, vm, ctx, opacity); // Body\n\n      this.drawBody(pt, vm, ctx, opacity); // Footer\n\n      this.drawFooter(pt, vm, ctx, opacity);\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @returns {Boolean} true if the tooltip changed\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var options = me._options;\n    var changed = false;\n    me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n    if (e.type === 'mouseout') {\n      me._active = [];\n    } else {\n      me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n    } // Remember Last Actives\n\n\n    changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n    if (changed) {\n      me._lastActive = me._active;\n\n      if (options.enabled || options.custom) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true);\n        me.pivot();\n      }\n    }\n\n    return changed;\n  }\n});\n/**\n * @namespace Chart.Tooltip.positioners\n */\n\nexports.positioners = positioners;","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-in plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      // NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n      // on Chrome when `r` is exactly half the height or the width.\n      var epsilon = 0.0000001;\n      var r = Math.min(radius, height / 2 - epsilon, width / 2 - epsilon);\n      ctx.moveTo(x + r, y);\n      ctx.lineTo(x + width - r, y);\n      ctx.arcTo(x + width, y, x + width, y + r, r);\n      ctx.lineTo(x + width, y + height - r);\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n      ctx.lineTo(x + r, y + height);\n      ctx.arcTo(x, y + height, x, y + height - r, r);\n      ctx.lineTo(x, y + r);\n      ctx.arcTo(x, y, x + r, y, r);\n      ctx.closePath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n    rotation = rotation || 0;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotation * Math.PI / 180);\n    ctx.beginPath();\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.arc(0, 0, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        break;\n\n      case 'triangle':\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(-edgeLength / 2, height / 3);\n        ctx.lineTo(edgeLength / 2, height / 3);\n        ctx.lineTo(0, -2 * height / 3);\n        ctx.closePath();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.rect(-size, -size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = -offset;\n        var topY = -offset;\n        var sideSize = Math.SQRT2 * radius; // NOTE(SB) the rounded rect implementation changed to use `arcTo`\n        // instead of `quadraticCurveTo` since it generates better results\n        // when rect is almost a circle. 0.425 (instead of 0.5) produces\n        // results visually closer to the previous impl.\n\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.moveTo(-size, 0);\n        ctx.lineTo(0, size);\n        ctx.lineTo(size, 0);\n        ctx.lineTo(0, -size);\n        ctx.closePath();\n        break;\n\n      case 'cross':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'crossRot':\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'star':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'line':\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'dash':\n        ctx.moveTo(0, 0);\n        ctx.lineTo(radius, 0);\n        break;\n    }\n\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.target || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n\n    var parentNode = helpers._getParentNode(domNode);\n\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n  /**\n   * @private\n  \t */\n\n\n  helpers._calculatePadding = function (container, padding, parentDimension) {\n    padding = helpers.getStyle(container, padding);\n    return padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n  };\n  /**\n   * @private\n   */\n\n\n  helpers._getParentNode = function (domNode) {\n    var parent = domNode.parentNode;\n\n    if (parent && parent.host) {\n      parent = parent.host;\n    }\n\n    return parent;\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var clientWidth = container.clientWidth;\n\n    var paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\n    var paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n    var w = clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var clientHeight = container.clientHeight;\n\n    var paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\n    var paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n    var h = clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var rotation = vm.rotation;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    if (vm.skip) {\n      return;\n    } // Clipping for Points.\n\n\n    if (chartArea === undefined || model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y) {\n      ctx.strokeStyle = vm.borderColor || defaultColor;\n      ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n      ctx.fillStyle = vm.backgroundColor || defaultColor;\n      helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","'use strict';\n\nvar Animation = require('./core.animation');\n\nvar animations = require('./core.animations');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: me.options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var factor;\n  var precision;\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n    precision = generationOptions.precision;\n\n    if (precision !== undefined) {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function () {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var elementOpts = this.chart.options.elements.arc;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    getPointRotation: function getPointRotation(point, index) {\n      var pointRotation = this.chart.options.elements.point.rotation;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.rotation)) {\n        pointRotation = custom.rotation;\n      } else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n        pointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n      }\n\n      return pointRotation;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        rotation: me.getPointRotation(point, index),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      // Point\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      var elementOpts = this.chart.options.elements.arc;\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = arc._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return helpers.options.resolve([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          rotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};"],"sourceRoot":""}